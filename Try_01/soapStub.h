/* soapStub.h
   Generated by gSOAP 2.8.14 from wellth.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns2	"Wellth.Services/Imports"
#define SOAP_NAMESPACE_OF_ns3	"Wellth.Services"
#define SOAP_NAMESPACE_OF_ns4	"http://schemas.datacontract.org/2004/07/Wellth.Services.Contracts"
#define SOAP_NAMESPACE_OF_ns5	"http://schemas.microsoft.com/2003/10/Serialization/"
#define SOAP_NAMESPACE_OF_ns6	"http://schemas.datacontract.org/2004/07/Wellth.Data"
#define SOAP_NAMESPACE_OF_ns7	"http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses"
#define SOAP_NAMESPACE_OF_ns8	"http://schemas.datacontract.org/2004/07/System.Data"
#define SOAP_NAMESPACE_OF_wsc	"http://schemas.xmlsoap.org/ws/2005/02/sc"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20814
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_wsu__tTimestampFault
#define SOAP_TYPE_wsu__tTimestampFault (1389)
/* wsu:tTimestampFault */
enum wsu__tTimestampFault { wsu__MessageExpired = 0 };
typedef enum wsu__tTimestampFault wsu__tTimestampFault;
#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum
#define SOAP_TYPE_wsse__FaultcodeEnum (1391)
/* wsse:FaultcodeEnum */
enum wsse__FaultcodeEnum { wsse__UnsupportedSecurityToken = 0, wsse__UnsupportedAlgorithm = 1, wsse__InvalidSecurity = 2, wsse__InvalidSecurityToken = 3, wsse__FailedAuthentication = 4, wsse__FailedCheck = 5, wsse__SecurityTokenUnavailable = 6 };
typedef enum wsse__FaultcodeEnum wsse__FaultcodeEnum;
#endif

#ifndef SOAP_TYPE_wsc__FaultCodeType
#define SOAP_TYPE_wsc__FaultCodeType (1463)
/* wsc:FaultCodeType */
enum wsc__FaultCodeType { wsc__BadContextToken = 0, wsc__UnsupportedContextToken = 1, wsc__UnknownDerivationSource = 2, wsc__RenewNeeded = 3, wsc__UnableToRenew = 4 };
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (11)
typedef std::string xsd__QName;
#endif


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (8)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() { xsd__anyType::soap_default(NULL); }
	virtual ~xsd__anyType() { }
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (12)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_xsd__ID_
#define SOAP_TYPE_xsd__ID_ (19)
/* Primitive xsd:ID schema type: */
class SOAP_CMAC xsd__ID_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_xsd__ID_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__ID_() { xsd__ID_::soap_default(NULL); }
	virtual ~xsd__ID_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__IDREF_
#define SOAP_TYPE_xsd__IDREF_ (21)
/* Primitive xsd:IDREF schema type: */
class SOAP_CMAC xsd__IDREF_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_xsd__IDREF_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__IDREF_() { xsd__IDREF_::soap_default(NULL); }
	virtual ~xsd__IDREF_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__QName_
#define SOAP_TYPE_xsd__QName_ (22)
/* Primitive xsd:QName schema type: */
class SOAP_CMAC xsd__QName_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_xsd__QName_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__QName_() { xsd__QName_::soap_default(NULL); }
	virtual ~xsd__QName_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (24)
/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyURI_() { xsd__anyURI_::soap_default(NULL); }
	virtual ~xsd__anyURI_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__base64Binary_
#define SOAP_TYPE_xsd__base64Binary_ (25)
/* Primitive xsd:base64Binary schema type: */
class SOAP_CMAC xsd__base64Binary_ : public xsd__anyType
{
public:
	xsd__base64Binary __item;
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_xsd__base64Binary_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary_() { xsd__base64Binary_::soap_default(NULL); }
	virtual ~xsd__base64Binary_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (26)
/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean : public xsd__anyType
{
public:
	bool __item;
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_xsd__boolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__boolean() { xsd__boolean::soap_default(NULL); }
	virtual ~xsd__boolean() { }
};
#endif

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (28)
/* Primitive xsd:byte schema type: */
class SOAP_CMAC xsd__byte_ : public xsd__anyType
{
public:
	char __item;
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_xsd__byte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__byte_() { xsd__byte_::soap_default(NULL); }
	virtual ~xsd__byte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (29)
/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime : public xsd__anyType
{
public:
	time_t __item;
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_xsd__dateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__dateTime() { xsd__dateTime::soap_default(NULL); }
	virtual ~xsd__dateTime() { }
};
#endif

#ifndef SOAP_TYPE_xsd__decimal_
#define SOAP_TYPE_xsd__decimal_ (32)
/* Primitive xsd:decimal schema type: */
class SOAP_CMAC xsd__decimal_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_xsd__decimal_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__decimal_() { xsd__decimal_::soap_default(NULL); }
	virtual ~xsd__decimal_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (33)
/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double : public xsd__anyType
{
public:
	double __item;
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_xsd__double */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__double() { xsd__double::soap_default(NULL); }
	virtual ~xsd__double() { }
};
#endif

#ifndef SOAP_TYPE_xsd__duration_
#define SOAP_TYPE_xsd__duration_ (36)
/* Primitive xsd:duration schema type: */
class SOAP_CMAC xsd__duration_ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_xsd__duration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__duration_() { xsd__duration_::soap_default(NULL); }
	virtual ~xsd__duration_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (37)
/* Primitive xsd:float schema type: */
class SOAP_CMAC xsd__float : public xsd__anyType
{
public:
	float __item;
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_xsd__float */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__float() { xsd__float::soap_default(NULL); }
	virtual ~xsd__float() { }
};
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (39)
/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_xsd__int */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__int() { xsd__int::soap_default(NULL); }
	virtual ~xsd__int() { }
};
#endif

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (40)
/* Primitive xsd:long schema type: */
class SOAP_CMAC xsd__long : public xsd__anyType
{
public:
	LONG64 __item;
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_xsd__long */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__long() { xsd__long::soap_default(NULL); }
	virtual ~xsd__long() { }
};
#endif

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (42)
/* Primitive xsd:short schema type: */
class SOAP_CMAC xsd__short : public xsd__anyType
{
public:
	short __item;
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_xsd__short */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__short() { xsd__short::soap_default(NULL); }
	virtual ~xsd__short() { }
};
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (44)
/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_xsd__string */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__string() { xsd__string::soap_default(NULL); }
	virtual ~xsd__string() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte_
#define SOAP_TYPE_xsd__unsignedByte_ (45)
/* Primitive xsd:unsignedByte schema type: */
class SOAP_CMAC xsd__unsignedByte_ : public xsd__anyType
{
public:
	unsigned char __item;
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_xsd__unsignedByte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedByte_() { xsd__unsignedByte_::soap_default(NULL); }
	virtual ~xsd__unsignedByte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (46)
/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt : public xsd__anyType
{
public:
	unsigned int __item;
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_xsd__unsignedInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedInt() { xsd__unsignedInt::soap_default(NULL); }
	virtual ~xsd__unsignedInt() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (47)
/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong : public xsd__anyType
{
public:
	ULONG64 __item;
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_xsd__unsignedLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedLong() { xsd__unsignedLong::soap_default(NULL); }
	virtual ~xsd__unsignedLong() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (49)
/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort : public xsd__anyType
{
public:
	unsigned short __item;
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_xsd__unsignedShort */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedShort() { xsd__unsignedShort::soap_default(NULL); }
	virtual ~xsd__unsignedShort() { }
};
#endif

#ifndef SOAP_TYPE_ns5__char__
#define SOAP_TYPE_ns5__char__ (495)
/* Primitive ns5:char schema type: */
class SOAP_CMAC ns5__char__ : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 495; } /* = unique id SOAP_TYPE_ns5__char__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__char__() { ns5__char__::soap_default(NULL); }
	virtual ~ns5__char__() { }
};
#endif

#ifndef SOAP_TYPE_ns5__duration__
#define SOAP_TYPE_ns5__duration__ (497)
/* Primitive ns5:duration schema type: */
class SOAP_CMAC ns5__duration__ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 497; } /* = unique id SOAP_TYPE_ns5__duration__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__duration__() { ns5__duration__::soap_default(NULL); }
	virtual ~ns5__duration__() { }
};
#endif

#ifndef SOAP_TYPE_ns5__guid__
#define SOAP_TYPE_ns5__guid__ (499)
/* Primitive ns5:guid schema type: */
class SOAP_CMAC ns5__guid__ : public xsd__anyType
{
public:
	std::string __item;
public:
	virtual int soap_type() const { return 499; } /* = unique id SOAP_TYPE_ns5__guid__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__guid__() { ns5__guid__::soap_default(NULL); }
	virtual ~ns5__guid__() { }
};
#endif

#ifndef SOAP_TYPE__ns2__DataSet
#define SOAP_TYPE__ns2__DataSet (52)
/* ns2:DataSet */
class SOAP_CMAC _ns2__DataSet
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE__ns2__DataSet */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__DataSet() { _ns2__DataSet::soap_default(NULL); }
	virtual ~_ns2__DataSet() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitle
#define SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitle (53)
/* ns3:GetAnnouncmenteDetailsByTitle */
class SOAP_CMAC _ns3__GetAnnouncmenteDetailsByTitle
{
public:
	std::string *title;	/* optional element of type xsd:string */
	int *orgId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitle */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAnnouncmenteDetailsByTitle() { _ns3__GetAnnouncmenteDetailsByTitle::soap_default(NULL); }
	virtual ~_ns3__GetAnnouncmenteDetailsByTitle() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitleResponse
#define SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitleResponse (54)
/* ns3:GetAnnouncmenteDetailsByTitleResponse */
class SOAP_CMAC _ns3__GetAnnouncmenteDetailsByTitleResponse
{
public:
	class ns6__Announcement *GetAnnouncmenteDetailsByTitleResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Announcement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE__ns3__GetAnnouncmenteDetailsByTitleResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAnnouncmenteDetailsByTitleResponse() { _ns3__GetAnnouncmenteDetailsByTitleResponse::soap_default(NULL); }
	virtual ~_ns3__GetAnnouncmenteDetailsByTitleResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadAnnouncementbyId
#define SOAP_TYPE__ns3__LoadAnnouncementbyId (55)
/* ns3:LoadAnnouncementbyId */
class SOAP_CMAC _ns3__LoadAnnouncementbyId
{
public:
	int *announcementId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE__ns3__LoadAnnouncementbyId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadAnnouncementbyId() { _ns3__LoadAnnouncementbyId::soap_default(NULL); }
	virtual ~_ns3__LoadAnnouncementbyId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadAnnouncementbyIdResponse
#define SOAP_TYPE__ns3__LoadAnnouncementbyIdResponse (56)
/* ns3:LoadAnnouncementbyIdResponse */
class SOAP_CMAC _ns3__LoadAnnouncementbyIdResponse
{
public:
	ns6__Announcement *LoadAnnouncementbyIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Announcement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE__ns3__LoadAnnouncementbyIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadAnnouncementbyIdResponse() { _ns3__LoadAnnouncementbyIdResponse::soap_default(NULL); }
	virtual ~_ns3__LoadAnnouncementbyIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREById
#define SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREById (57)
/* ns3:LoadOrganizationdetails_ById */
class SOAP_CMAC _ns3__LoadOrganizationdetails_USCOREById
{
public:
	int *org_USCOREId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadOrganizationdetails_USCOREById() { _ns3__LoadOrganizationdetails_USCOREById::soap_default(NULL); }
	virtual ~_ns3__LoadOrganizationdetails_USCOREById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREByIdResponse
#define SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREByIdResponse (58)
/* ns3:LoadOrganizationdetails_ByIdResponse */
class SOAP_CMAC _ns3__LoadOrganizationdetails_USCOREByIdResponse
{
public:
	class ns6__Organization_USCOREMaster *LoadOrganizationdetails_USCOREByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE__ns3__LoadOrganizationdetails_USCOREByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadOrganizationdetails_USCOREByIdResponse() { _ns3__LoadOrganizationdetails_USCOREByIdResponse::soap_default(NULL); }
	virtual ~_ns3__LoadOrganizationdetails_USCOREByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetBMIValue
#define SOAP_TYPE__ns3__GetBMIValue (59)
/* ns3:GetBMIValue */
class SOAP_CMAC _ns3__GetBMIValue
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *period;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE__ns3__GetBMIValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetBMIValue() { _ns3__GetBMIValue::soap_default(NULL); }
	virtual ~_ns3__GetBMIValue() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetBMIValueResponse_GetBMIValueResult
#define SOAP_TYPE__ns3__GetBMIValueResponse_GetBMIValueResult (504)
/* ns3:GetBMIValueResponse-GetBMIValueResult */
class SOAP_CMAC _ns3__GetBMIValueResponse_GetBMIValueResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 504; } /* = unique id SOAP_TYPE__ns3__GetBMIValueResponse_GetBMIValueResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetBMIValueResponse_GetBMIValueResult() { _ns3__GetBMIValueResponse_GetBMIValueResult::soap_default(NULL); }
	virtual ~_ns3__GetBMIValueResponse_GetBMIValueResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetBMIValueResponse
#define SOAP_TYPE__ns3__GetBMIValueResponse (60)
/* ns3:GetBMIValueResponse */
class SOAP_CMAC _ns3__GetBMIValueResponse
{
public:
	_ns3__GetBMIValueResponse_GetBMIValueResult *GetBMIValueResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetBMIValueResponse-GetBMIValueResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE__ns3__GetBMIValueResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetBMIValueResponse() { _ns3__GetBMIValueResponse::soap_default(NULL); }
	virtual ~_ns3__GetBMIValueResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordsForDepUser
#define SOAP_TYPE__ns3__GetReadingRecordsForDepUser (61)
/* ns3:GetReadingRecordsForDepUser */
class SOAP_CMAC _ns3__GetReadingRecordsForDepUser
{
public:
	int *depUserId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordsForDepUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordsForDepUser() { _ns3__GetReadingRecordsForDepUser::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordsForDepUser() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordsForDepUserResponse
#define SOAP_TYPE__ns3__GetReadingRecordsForDepUserResponse (62)
/* ns3:GetReadingRecordsForDepUserResponse */
class SOAP_CMAC _ns3__GetReadingRecordsForDepUserResponse
{
public:
	class ns6__ArrayOfReading_USCORERecords *GetReadingRecordsForDepUserResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordsForDepUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordsForDepUserResponse() { _ns3__GetReadingRecordsForDepUserResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordsForDepUserResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetNameByEmailID
#define SOAP_TYPE__ns3__GetNameByEmailID (63)
/* ns3:GetNameByEmailID */
class SOAP_CMAC _ns3__GetNameByEmailID
{
public:
	std::string *emailID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE__ns3__GetNameByEmailID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetNameByEmailID() { _ns3__GetNameByEmailID::soap_default(NULL); }
	virtual ~_ns3__GetNameByEmailID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult
#define SOAP_TYPE__ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult (507)
/* ns3:GetNameByEmailIDResponse-GetNameByEmailIDResult */
class SOAP_CMAC _ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 507; } /* = unique id SOAP_TYPE__ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult() { _ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult::soap_default(NULL); }
	virtual ~_ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetNameByEmailIDResponse
#define SOAP_TYPE__ns3__GetNameByEmailIDResponse (64)
/* ns3:GetNameByEmailIDResponse */
class SOAP_CMAC _ns3__GetNameByEmailIDResponse
{
public:
	_ns3__GetNameByEmailIDResponse_GetNameByEmailIDResult *GetNameByEmailIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetNameByEmailIDResponse-GetNameByEmailIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE__ns3__GetNameByEmailIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetNameByEmailIDResponse() { _ns3__GetNameByEmailIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetNameByEmailIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserId
#define SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserId (65)
/* ns3:GetGoalDetailsByReadingIdAndUserId */
class SOAP_CMAC _ns3__GetGoalDetailsByReadingIdAndUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByReadingIdAndUserId() { _ns3__GetGoalDetailsByReadingIdAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByReadingIdAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserIdResponse
#define SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserIdResponse (66)
/* ns3:GetGoalDetailsByReadingIdAndUserIdResponse */
class SOAP_CMAC _ns3__GetGoalDetailsByReadingIdAndUserIdResponse
{
public:
	class ns6__ArrayOfGoalDetails *GetGoalDetailsByReadingIdAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfGoalDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByReadingIdAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByReadingIdAndUserIdResponse() { _ns3__GetGoalDetailsByReadingIdAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByReadingIdAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserId
#define SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserId (67)
/* ns3:GetGoalDetailsByCustomReadingIdAndUserId */
class SOAP_CMAC _ns3__GetGoalDetailsByCustomReadingIdAndUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByCustomReadingIdAndUserId() { _ns3__GetGoalDetailsByCustomReadingIdAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByCustomReadingIdAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse
#define SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse (68)
/* ns3:GetGoalDetailsByCustomReadingIdAndUserIdResponse */
class SOAP_CMAC _ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse
{
public:
	ns6__ArrayOfGoalDetails *GetGoalDetailsByCustomReadingIdAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfGoalDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse() { _ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByCustomReadingIdAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingId
#define SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingId (69)
/* ns3:GetAllReadingRecordByUserIdAndReadingId */
class SOAP_CMAC _ns3__GetAllReadingRecordByUserIdAndReadingId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	std::string *timePeriod;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingRecordByUserIdAndReadingId() { _ns3__GetAllReadingRecordByUserIdAndReadingId::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingRecordByUserIdAndReadingId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult
#define SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult (512)
/* ns3:GetAllReadingRecordByUserIdAndReadingIdResponse-GetAllReadingRecordByUserIdAndReadingIdResult */
class SOAP_CMAC _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 512; } /* = unique id SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult() { _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse
#define SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse (70)
/* ns3:GetAllReadingRecordByUserIdAndReadingIdResponse */
class SOAP_CMAC _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse
{
public:
	_ns3__GetAllReadingRecordByUserIdAndReadingIdResponse_GetAllReadingRecordByUserIdAndReadingIdResult *GetAllReadingRecordByUserIdAndReadingIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllReadingRecordByUserIdAndReadingIdResponse-GetAllReadingRecordByUserIdAndReadingIdResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE__ns3__GetAllReadingRecordByUserIdAndReadingIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse() { _ns3__GetAllReadingRecordByUserIdAndReadingIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingRecordByUserIdAndReadingIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingId
#define SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingId (71)
/* ns3:GetAllCustomReadingRecordByUserIdAndReadingId */
class SOAP_CMAC _ns3__GetAllCustomReadingRecordByUserIdAndReadingId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	std::string *timePeriod;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCustomReadingRecordByUserIdAndReadingId() { _ns3__GetAllCustomReadingRecordByUserIdAndReadingId::soap_default(NULL); }
	virtual ~_ns3__GetAllCustomReadingRecordByUserIdAndReadingId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult
#define SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult (514)
/* ns3:GetAllCustomReadingRecordByUserIdAndReadingIdResponse-GetAllCustomReadingRecordByUserIdAndReadingIdResult */
class SOAP_CMAC _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 514; } /* = unique id SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult() { _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult::soap_default(NULL); }
	virtual ~_ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse
#define SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse (72)
/* ns3:GetAllCustomReadingRecordByUserIdAndReadingIdResponse */
class SOAP_CMAC _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse
{
public:
	_ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse_GetAllCustomReadingRecordByUserIdAndReadingIdResult *GetAllCustomReadingRecordByUserIdAndReadingIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllCustomReadingRecordByUserIdAndReadingIdResponse-GetAllCustomReadingRecordByUserIdAndReadingIdResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE__ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse() { _ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllCustomReadingRecordByUserIdAndReadingIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatus
#define SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatus (73)
/* ns3:GetGoalDetailsByUserIdAndStatus */
class SOAP_CMAC _ns3__GetGoalDetailsByUserIdAndStatus
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByUserIdAndStatus() { _ns3__GetGoalDetailsByUserIdAndStatus::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByUserIdAndStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult
#define SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult (516)
/* ns3:GetGoalDetailsByUserIdAndStatusResponse-GetGoalDetailsByUserIdAndStatusResult */
class SOAP_CMAC _ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 516; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult() { _ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse
#define SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse (74)
/* ns3:GetGoalDetailsByUserIdAndStatusResponse */
class SOAP_CMAC _ns3__GetGoalDetailsByUserIdAndStatusResponse
{
public:
	_ns3__GetGoalDetailsByUserIdAndStatusResponse_GetGoalDetailsByUserIdAndStatusResult *GetGoalDetailsByUserIdAndStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetGoalDetailsByUserIdAndStatusResponse-GetGoalDetailsByUserIdAndStatusResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE__ns3__GetGoalDetailsByUserIdAndStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalDetailsByUserIdAndStatusResponse() { _ns3__GetGoalDetailsByUserIdAndStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetGoalDetailsByUserIdAndStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__InsertSettingValue
#define SOAP_TYPE__ns3__InsertSettingValue (75)
/* ns3:InsertSettingValue */
class SOAP_CMAC _ns3__InsertSettingValue
{
public:
	class ns6__User_USCORESettings *objUserStting;	/* optional element of type ns6:User_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE__ns3__InsertSettingValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__InsertSettingValue() { _ns3__InsertSettingValue::soap_default(NULL); }
	virtual ~_ns3__InsertSettingValue() { }
};
#endif

#ifndef SOAP_TYPE__ns3__InsertSettingValueResponse
#define SOAP_TYPE__ns3__InsertSettingValueResponse (76)
/* ns3:InsertSettingValueResponse */
class SOAP_CMAC _ns3__InsertSettingValueResponse
{
public:
	ns6__User_USCORESettings *InsertSettingValueResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE__ns3__InsertSettingValueResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__InsertSettingValueResponse() { _ns3__InsertSettingValueResponse::soap_default(NULL); }
	virtual ~_ns3__InsertSettingValueResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSettingValue
#define SOAP_TYPE__ns3__GetSettingValue (77)
/* ns3:GetSettingValue */
class SOAP_CMAC _ns3__GetSettingValue
{
public:
	std::string *settingValue;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE__ns3__GetSettingValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSettingValue() { _ns3__GetSettingValue::soap_default(NULL); }
	virtual ~_ns3__GetSettingValue() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSettingValueResponse
#define SOAP_TYPE__ns3__GetSettingValueResponse (78)
/* ns3:GetSettingValueResponse */
class SOAP_CMAC _ns3__GetSettingValueResponse
{
public:
	ns6__User_USCORESettings *GetSettingValueResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE__ns3__GetSettingValueResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSettingValueResponse() { _ns3__GetSettingValueResponse::soap_default(NULL); }
	virtual ~_ns3__GetSettingValueResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMembershipIdByUserId
#define SOAP_TYPE__ns3__GetMembershipIdByUserId (79)
/* ns3:GetMembershipIdByUserId */
class SOAP_CMAC _ns3__GetMembershipIdByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE__ns3__GetMembershipIdByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMembershipIdByUserId() { _ns3__GetMembershipIdByUserId::soap_default(NULL); }
	virtual ~_ns3__GetMembershipIdByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMembershipIdByUserIdResponse
#define SOAP_TYPE__ns3__GetMembershipIdByUserIdResponse (80)
/* ns3:GetMembershipIdByUserIdResponse */
class SOAP_CMAC _ns3__GetMembershipIdByUserIdResponse
{
public:
	std::string *GetMembershipIdByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns5:guid */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE__ns3__GetMembershipIdByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMembershipIdByUserIdResponse() { _ns3__GetMembershipIdByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetMembershipIdByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatus
#define SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatus (81)
/* ns3:GetAllGoalByUserIDAndStatus */
class SOAP_CMAC _ns3__GetAllGoalByUserIDAndStatus
{
public:
	int *userid;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllGoalByUserIDAndStatus() { _ns3__GetAllGoalByUserIDAndStatus::soap_default(NULL); }
	virtual ~_ns3__GetAllGoalByUserIDAndStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatusResponse
#define SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatusResponse (82)
/* ns3:GetAllGoalByUserIDAndStatusResponse */
class SOAP_CMAC _ns3__GetAllGoalByUserIDAndStatusResponse
{
public:
	ns6__ArrayOfGoalDetails *GetAllGoalByUserIDAndStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfGoalDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE__ns3__GetAllGoalByUserIDAndStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllGoalByUserIDAndStatusResponse() { _ns3__GetAllGoalByUserIDAndStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllGoalByUserIDAndStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CheckGoalExistForThatReading
#define SOAP_TYPE__ns3__CheckGoalExistForThatReading (83)
/* ns3:CheckGoalExistForThatReading */
class SOAP_CMAC _ns3__CheckGoalExistForThatReading
{
public:
	int *userid;	/* optional element of type xsd:int */
	int *readingid;	/* optional element of type xsd:int */
	std::string *parameterOption;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE__ns3__CheckGoalExistForThatReading */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CheckGoalExistForThatReading() { _ns3__CheckGoalExistForThatReading::soap_default(NULL); }
	virtual ~_ns3__CheckGoalExistForThatReading() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CheckGoalExistForThatReadingResponse
#define SOAP_TYPE__ns3__CheckGoalExistForThatReadingResponse (84)
/* ns3:CheckGoalExistForThatReadingResponse */
class SOAP_CMAC _ns3__CheckGoalExistForThatReadingResponse
{
public:
	class ns6__User_USCOREKeepWatch *CheckGoalExistForThatReadingResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE__ns3__CheckGoalExistForThatReadingResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CheckGoalExistForThatReadingResponse() { _ns3__CheckGoalExistForThatReadingResponse::soap_default(NULL); }
	virtual ~_ns3__CheckGoalExistForThatReadingResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteOrganizationLogo
#define SOAP_TYPE__ns3__DeleteOrganizationLogo (85)
/* ns3:DeleteOrganizationLogo */
class SOAP_CMAC _ns3__DeleteOrganizationLogo
{
public:
	int *organization_USCOREId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE__ns3__DeleteOrganizationLogo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteOrganizationLogo() { _ns3__DeleteOrganizationLogo::soap_default(NULL); }
	virtual ~_ns3__DeleteOrganizationLogo() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteOrganizationLogoResponse
#define SOAP_TYPE__ns3__DeleteOrganizationLogoResponse (86)
/* ns3:DeleteOrganizationLogoResponse */
class SOAP_CMAC _ns3__DeleteOrganizationLogoResponse
{
public:
	bool *DeleteOrganizationLogoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE__ns3__DeleteOrganizationLogoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteOrganizationLogoResponse() { _ns3__DeleteOrganizationLogoResponse::soap_default(NULL); }
	virtual ~_ns3__DeleteOrganizationLogoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordByDateAndParentID
#define SOAP_TYPE__ns3__GetReadingRecordByDateAndParentID (87)
/* ns3:GetReadingRecordByDateAndParentID */
class SOAP_CMAC _ns3__GetReadingRecordByDateAndParentID
{
public:
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *parentId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordByDateAndParentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordByDateAndParentID() { _ns3__GetReadingRecordByDateAndParentID::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordByDateAndParentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordByDateAndParentIDResponse
#define SOAP_TYPE__ns3__GetReadingRecordByDateAndParentIDResponse (88)
/* ns3:GetReadingRecordByDateAndParentIDResponse */
class SOAP_CMAC _ns3__GetReadingRecordByDateAndParentIDResponse
{
public:
	class ns6__ArrayOfReadingNames *GetReadingRecordByDateAndParentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordByDateAndParentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordByDateAndParentIDResponse() { _ns3__GetReadingRecordByDateAndParentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordByDateAndParentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserId
#define SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserId (89)
/* ns3:GetAllCustomReadingRecordByDateAndUserId */
class SOAP_CMAC _ns3__GetAllCustomReadingRecordByDateAndUserId
{
public:
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *parentId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCustomReadingRecordByDateAndUserId() { _ns3__GetAllCustomReadingRecordByDateAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetAllCustomReadingRecordByDateAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserIdResponse
#define SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserIdResponse (90)
/* ns3:GetAllCustomReadingRecordByDateAndUserIdResponse */
class SOAP_CMAC _ns3__GetAllCustomReadingRecordByDateAndUserIdResponse
{
public:
	class ns6__ArrayOfCustom_USCOREReading_USCORERecords *GetAllCustomReadingRecordByDateAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfCustom_Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE__ns3__GetAllCustomReadingRecordByDateAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCustomReadingRecordByDateAndUserIdResponse() { _ns3__GetAllCustomReadingRecordByDateAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllCustomReadingRecordByDateAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentID
#define SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentID (91)
/* ns3:GetCustomReadingRecordByDateAndParentID */
class SOAP_CMAC _ns3__GetCustomReadingRecordByDateAndParentID
{
public:
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *customReadingId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordByDateAndParentID() { _ns3__GetCustomReadingRecordByDateAndParentID::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordByDateAndParentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentIDResponse
#define SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentIDResponse (92)
/* ns3:GetCustomReadingRecordByDateAndParentIDResponse */
class SOAP_CMAC _ns3__GetCustomReadingRecordByDateAndParentIDResponse
{
public:
	ns6__ArrayOfReadingNames *GetCustomReadingRecordByDateAndParentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordByDateAndParentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordByDateAndParentIDResponse() { _ns3__GetCustomReadingRecordByDateAndParentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordByDateAndParentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateUserSetting
#define SOAP_TYPE__ns3__UpdateUserSetting (93)
/* ns3:UpdateUserSetting */
class SOAP_CMAC _ns3__UpdateUserSetting
{
public:
	ns6__User_USCORESettings *objSettings;	/* optional element of type ns6:User_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE__ns3__UpdateUserSetting */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateUserSetting() { _ns3__UpdateUserSetting::soap_default(NULL); }
	virtual ~_ns3__UpdateUserSetting() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateUserSettingResponse
#define SOAP_TYPE__ns3__UpdateUserSettingResponse (94)
/* ns3:UpdateUserSettingResponse */
class SOAP_CMAC _ns3__UpdateUserSettingResponse
{
public:
	bool *UpdateUserSettingResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE__ns3__UpdateUserSettingResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateUserSettingResponse() { _ns3__UpdateUserSettingResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateUserSettingResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadSettingsDataByUserId
#define SOAP_TYPE__ns3__LoadSettingsDataByUserId (95)
/* ns3:LoadSettingsDataByUserId */
class SOAP_CMAC _ns3__LoadSettingsDataByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE__ns3__LoadSettingsDataByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadSettingsDataByUserId() { _ns3__LoadSettingsDataByUserId::soap_default(NULL); }
	virtual ~_ns3__LoadSettingsDataByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadSettingsDataByUserIdResponse
#define SOAP_TYPE__ns3__LoadSettingsDataByUserIdResponse (96)
/* ns3:LoadSettingsDataByUserIdResponse */
class SOAP_CMAC _ns3__LoadSettingsDataByUserIdResponse
{
public:
	class ns6__ArrayOfUser_USCORESettings *LoadSettingsDataByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE__ns3__LoadSettingsDataByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadSettingsDataByUserIdResponse() { _ns3__LoadSettingsDataByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__LoadSettingsDataByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSettingValueById
#define SOAP_TYPE__ns3__GetSettingValueById (97)
/* ns3:GetSettingValueById */
class SOAP_CMAC _ns3__GetSettingValueById
{
public:
	int *settingId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE__ns3__GetSettingValueById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSettingValueById() { _ns3__GetSettingValueById::soap_default(NULL); }
	virtual ~_ns3__GetSettingValueById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSettingValueByIdResponse
#define SOAP_TYPE__ns3__GetSettingValueByIdResponse (98)
/* ns3:GetSettingValueByIdResponse */
class SOAP_CMAC _ns3__GetSettingValueByIdResponse
{
public:
	ns6__User_USCORESettings *GetSettingValueByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE__ns3__GetSettingValueByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSettingValueByIdResponse() { _ns3__GetSettingValueByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetSettingValueByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoard
#define SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoard (99)
/* ns3:GetDWMAnnouncementForDashBoard */
class SOAP_CMAC _ns3__GetDWMAnnouncementForDashBoard
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDWMAnnouncementForDashBoard() { _ns3__GetDWMAnnouncementForDashBoard::soap_default(NULL); }
	virtual ~_ns3__GetDWMAnnouncementForDashBoard() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult
#define SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult (525)
/* ns3:GetDWMAnnouncementForDashBoardResponse-GetDWMAnnouncementForDashBoardResult */
class SOAP_CMAC _ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 525; } /* = unique id SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult() { _ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult::soap_default(NULL); }
	virtual ~_ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse
#define SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse (100)
/* ns3:GetDWMAnnouncementForDashBoardResponse */
class SOAP_CMAC _ns3__GetDWMAnnouncementForDashBoardResponse
{
public:
	_ns3__GetDWMAnnouncementForDashBoardResponse_GetDWMAnnouncementForDashBoardResult *GetDWMAnnouncementForDashBoardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetDWMAnnouncementForDashBoardResponse-GetDWMAnnouncementForDashBoardResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE__ns3__GetDWMAnnouncementForDashBoardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDWMAnnouncementForDashBoardResponse() { _ns3__GetDWMAnnouncementForDashBoardResponse::soap_default(NULL); }
	virtual ~_ns3__GetDWMAnnouncementForDashBoardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserId
#define SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserId (101)
/* ns3:GetAllHealthConditionDetailsByIdAndUserId */
class SOAP_CMAC _ns3__GetAllHealthConditionDetailsByIdAndUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllHealthConditionDetailsByIdAndUserId() { _ns3__GetAllHealthConditionDetailsByIdAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetAllHealthConditionDetailsByIdAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse
#define SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse (102)
/* ns3:GetAllHealthConditionDetailsByIdAndUserIdResponse */
class SOAP_CMAC _ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse
{
public:
	class ns6__ArrayOfConditionDetails *GetAllHealthConditionDetailsByIdAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfConditionDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE__ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse() { _ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllHealthConditionDetailsByIdAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingId
#define SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingId (103)
/* ns3:GetLatestReadingRecordByUserIdAndReadingId */
class SOAP_CMAC _ns3__GetLatestReadingRecordByUserIdAndReadingId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestReadingRecordByUserIdAndReadingId() { _ns3__GetLatestReadingRecordByUserIdAndReadingId::soap_default(NULL); }
	virtual ~_ns3__GetLatestReadingRecordByUserIdAndReadingId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult
#define SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult (528)
/* ns3:GetLatestReadingRecordByUserIdAndReadingIdResponse-GetLatestReadingRecordByUserIdAndReadingIdResult */
class SOAP_CMAC _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 528; } /* = unique id SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult() { _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult::soap_default(NULL); }
	virtual ~_ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse
#define SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse (104)
/* ns3:GetLatestReadingRecordByUserIdAndReadingIdResponse */
class SOAP_CMAC _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse
{
public:
	_ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse_GetLatestReadingRecordByUserIdAndReadingIdResult *GetLatestReadingRecordByUserIdAndReadingIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetLatestReadingRecordByUserIdAndReadingIdResponse-GetLatestReadingRecordByUserIdAndReadingIdResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE__ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse() { _ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetLatestReadingRecordByUserIdAndReadingIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingId
#define SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingId (105)
/* ns3:GetLatestCustomReadingRecordByUserIdAndReadingId */
class SOAP_CMAC _ns3__GetLatestCustomReadingRecordByUserIdAndReadingId
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *readingId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestCustomReadingRecordByUserIdAndReadingId() { _ns3__GetLatestCustomReadingRecordByUserIdAndReadingId::soap_default(NULL); }
	virtual ~_ns3__GetLatestCustomReadingRecordByUserIdAndReadingId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult
#define SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult (530)
/* ns3:GetLatestCustomReadingRecordByUserIdAndReadingIdResponse-GetLatestCustomReadingRecordByUserIdAndReadingIdResult */
class SOAP_CMAC _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 530; } /* = unique id SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult() { _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult::soap_default(NULL); }
	virtual ~_ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse
#define SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse (106)
/* ns3:GetLatestCustomReadingRecordByUserIdAndReadingIdResponse */
class SOAP_CMAC _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse
{
public:
	_ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse_GetLatestCustomReadingRecordByUserIdAndReadingIdResult *GetLatestCustomReadingRecordByUserIdAndReadingIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetLatestCustomReadingRecordByUserIdAndReadingIdResponse-GetLatestCustomReadingRecordByUserIdAndReadingIdResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE__ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse() { _ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetLatestCustomReadingRecordByUserIdAndReadingIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingName
#define SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingName (107)
/* ns3:GetCustomReadingDetailsByReadingName */
class SOAP_CMAC _ns3__GetCustomReadingDetailsByReadingName
{
public:
	std::string *readingName;	/* optional element of type xsd:string */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingDetailsByReadingName() { _ns3__GetCustomReadingDetailsByReadingName::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingDetailsByReadingName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingNameResponse
#define SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingNameResponse (108)
/* ns3:GetCustomReadingDetailsByReadingNameResponse */
class SOAP_CMAC _ns3__GetCustomReadingDetailsByReadingNameResponse
{
public:
	class ns6__User_USCORECustom_USCOREReadings *GetCustomReadingDetailsByReadingNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingDetailsByReadingNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingDetailsByReadingNameResponse() { _ns3__GetCustomReadingDetailsByReadingNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingDetailsByReadingNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationName
#define SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationName (109)
/* ns3:GetOrganizationDetailsByOrganizationName */
class SOAP_CMAC _ns3__GetOrganizationDetailsByOrganizationName
{
public:
	std::string *orgName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationDetailsByOrganizationName() { _ns3__GetOrganizationDetailsByOrganizationName::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationDetailsByOrganizationName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationNameResponse
#define SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationNameResponse (110)
/* ns3:GetOrganizationDetailsByOrganizationNameResponse */
class SOAP_CMAC _ns3__GetOrganizationDetailsByOrganizationNameResponse
{
public:
	ns6__Organization_USCOREMaster *GetOrganizationDetailsByOrganizationNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE__ns3__GetOrganizationDetailsByOrganizationNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationDetailsByOrganizationNameResponse() { _ns3__GetOrganizationDetailsByOrganizationNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationDetailsByOrganizationNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedication
#define SOAP_TYPE__ns3__GetMedication (111)
/* ns3:GetMedication */
class SOAP_CMAC _ns3__GetMedication
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE__ns3__GetMedication */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedication() { _ns3__GetMedication::soap_default(NULL); }
	virtual ~_ns3__GetMedication() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedicationResponse
#define SOAP_TYPE__ns3__GetMedicationResponse (112)
/* ns3:GetMedicationResponse */
class SOAP_CMAC _ns3__GetMedicationResponse
{
public:
	class ns6__ArrayOfMedicationDetails *GetMedicationResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfMedicationDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE__ns3__GetMedicationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedicationResponse() { _ns3__GetMedicationResponse::soap_default(NULL); }
	virtual ~_ns3__GetMedicationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentDetailsByUserId
#define SOAP_TYPE__ns3__GetIncidentDetailsByUserId (113)
/* ns3:GetIncidentDetailsByUserId */
class SOAP_CMAC _ns3__GetIncidentDetailsByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE__ns3__GetIncidentDetailsByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentDetailsByUserId() { _ns3__GetIncidentDetailsByUserId::soap_default(NULL); }
	virtual ~_ns3__GetIncidentDetailsByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult
#define SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult (534)
/* ns3:GetIncidentDetailsByUserIdResponse-GetIncidentDetailsByUserIdResult */
class SOAP_CMAC _ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 534; } /* = unique id SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult() { _ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult::soap_default(NULL); }
	virtual ~_ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse
#define SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse (114)
/* ns3:GetIncidentDetailsByUserIdResponse */
class SOAP_CMAC _ns3__GetIncidentDetailsByUserIdResponse
{
public:
	_ns3__GetIncidentDetailsByUserIdResponse_GetIncidentDetailsByUserIdResult *GetIncidentDetailsByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetIncidentDetailsByUserIdResponse-GetIncidentDetailsByUserIdResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE__ns3__GetIncidentDetailsByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentDetailsByUserIdResponse() { _ns3__GetIncidentDetailsByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetIncidentDetailsByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardDataWithFilterOption
#define SOAP_TYPE__ns3__GetDashBoardDataWithFilterOption (115)
/* ns3:GetDashBoardDataWithFilterOption */
class SOAP_CMAC _ns3__GetDashBoardDataWithFilterOption
{
public:
	int *userid;	/* optional element of type xsd:int */
	std::string *startdate;	/* optional element of type xsd:string */
	std::string *enddate;	/* optional element of type xsd:string */
	std::string *mode;	/* optional element of type xsd:string */
	bool *isIncident;	/* optional element of type xsd:boolean */
	bool *isMedication;	/* optional element of type xsd:boolean */
	bool *isCondition;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE__ns3__GetDashBoardDataWithFilterOption */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardDataWithFilterOption() { _ns3__GetDashBoardDataWithFilterOption::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardDataWithFilterOption() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult
#define SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult (536)
/* ns3:GetDashBoardDataWithFilterOptionResponse-GetDashBoardDataWithFilterOptionResult */
class SOAP_CMAC _ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 536; } /* = unique id SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult() { _ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse
#define SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse (116)
/* ns3:GetDashBoardDataWithFilterOptionResponse */
class SOAP_CMAC _ns3__GetDashBoardDataWithFilterOptionResponse
{
public:
	_ns3__GetDashBoardDataWithFilterOptionResponse_GetDashBoardDataWithFilterOptionResult *GetDashBoardDataWithFilterOptionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetDashBoardDataWithFilterOptionResponse-GetDashBoardDataWithFilterOptionResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE__ns3__GetDashBoardDataWithFilterOptionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardDataWithFilterOptionResponse() { _ns3__GetDashBoardDataWithFilterOptionResponse::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardDataWithFilterOptionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExport
#define SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExport (117)
/* ns3:GetAllChallengesbyUserIDForExport */
class SOAP_CMAC _ns3__GetAllChallengesbyUserIDForExport
{
public:
	int *UserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExport */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesbyUserIDForExport() { _ns3__GetAllChallengesbyUserIDForExport::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesbyUserIDForExport() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExportResponse
#define SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExportResponse (118)
/* ns3:GetAllChallengesbyUserIDForExportResponse */
class SOAP_CMAC _ns3__GetAllChallengesbyUserIDForExportResponse
{
public:
	class ns6__ArrayOfChallengesRecordExtrafield *GetAllChallengesbyUserIDForExportResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesbyUserIDForExportResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesbyUserIDForExportResponse() { _ns3__GetAllChallengesbyUserIDForExportResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesbyUserIDForExportResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCompletedChallengesForGrid
#define SOAP_TYPE__ns3__GetAllCompletedChallengesForGrid (119)
/* ns3:GetAllCompletedChallengesForGrid */
class SOAP_CMAC _ns3__GetAllCompletedChallengesForGrid
{
public:
	int *userid;	/* optional element of type xsd:int */
	int *organizationid;	/* optional element of type xsd:int */
	int *challengeStatus;	/* optional element of type xsd:int */
	int *isSubscribed;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE__ns3__GetAllCompletedChallengesForGrid */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCompletedChallengesForGrid() { _ns3__GetAllCompletedChallengesForGrid::soap_default(NULL); }
	virtual ~_ns3__GetAllCompletedChallengesForGrid() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult
#define SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult (539)
/* ns3:GetAllCompletedChallengesForGridResponse-GetAllCompletedChallengesForGridResult */
class SOAP_CMAC _ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 539; } /* = unique id SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult() { _ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult::soap_default(NULL); }
	virtual ~_ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse
#define SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse (120)
/* ns3:GetAllCompletedChallengesForGridResponse */
class SOAP_CMAC _ns3__GetAllCompletedChallengesForGridResponse
{
public:
	_ns3__GetAllCompletedChallengesForGridResponse_GetAllCompletedChallengesForGridResult *GetAllCompletedChallengesForGridResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllCompletedChallengesForGridResponse-GetAllCompletedChallengesForGridResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE__ns3__GetAllCompletedChallengesForGridResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCompletedChallengesForGridResponse() { _ns3__GetAllCompletedChallengesForGridResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllCompletedChallengesForGridResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesforConsumerForGrid
#define SOAP_TYPE__ns3__GetAllChallengesforConsumerForGrid (121)
/* ns3:GetAllChallengesforConsumerForGrid */
class SOAP_CMAC _ns3__GetAllChallengesforConsumerForGrid
{
public:
	int *userID;	/* optional element of type xsd:int */
	int *subscribedstatus;	/* optional element of type xsd:int */
	int *challengeStatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesforConsumerForGrid */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesforConsumerForGrid() { _ns3__GetAllChallengesforConsumerForGrid::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesforConsumerForGrid() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesforConsumerForGridResponse
#define SOAP_TYPE__ns3__GetAllChallengesforConsumerForGridResponse (122)
/* ns3:GetAllChallengesforConsumerForGridResponse */
class SOAP_CMAC _ns3__GetAllChallengesforConsumerForGridResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetAllChallengesforConsumerForGridResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesforConsumerForGridResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesforConsumerForGridResponse() { _ns3__GetAllChallengesforConsumerForGridResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesforConsumerForGridResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergyDetailsbyUserID
#define SOAP_TYPE__ns3__GetAllergyDetailsbyUserID (123)
/* ns3:GetAllergyDetailsbyUserID */
class SOAP_CMAC _ns3__GetAllergyDetailsbyUserID
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE__ns3__GetAllergyDetailsbyUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergyDetailsbyUserID() { _ns3__GetAllergyDetailsbyUserID::soap_default(NULL); }
	virtual ~_ns3__GetAllergyDetailsbyUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult
#define SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult (541)
/* ns3:GetAllergyDetailsbyUserIDResponse-GetAllergyDetailsbyUserIDResult */
class SOAP_CMAC _ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 541; } /* = unique id SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult() { _ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult::soap_default(NULL); }
	virtual ~_ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse
#define SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse (124)
/* ns3:GetAllergyDetailsbyUserIDResponse */
class SOAP_CMAC _ns3__GetAllergyDetailsbyUserIDResponse
{
public:
	_ns3__GetAllergyDetailsbyUserIDResponse_GetAllergyDetailsbyUserIDResult *GetAllergyDetailsbyUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllergyDetailsbyUserIDResponse-GetAllergyDetailsbyUserIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE__ns3__GetAllergyDetailsbyUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergyDetailsbyUserIDResponse() { _ns3__GetAllergyDetailsbyUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllergyDetailsbyUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByUserName
#define SOAP_TYPE__ns3__GetShareDetailsByUserName (125)
/* ns3:GetShareDetailsByUserName */
class SOAP_CMAC _ns3__GetShareDetailsByUserName
{
public:
	std::string *email;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByUserName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByUserName() { _ns3__GetShareDetailsByUserName::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByUserName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByUserNameResponse
#define SOAP_TYPE__ns3__GetShareDetailsByUserNameResponse (126)
/* ns3:GetShareDetailsByUserNameResponse */
class SOAP_CMAC _ns3__GetShareDetailsByUserNameResponse
{
public:
	class ns6__ArrayOfShareDetails *GetShareDetailsByUserNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfShareDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByUserNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByUserNameResponse() { _ns3__GetShareDetailsByUserNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByUserNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeDetailsForDashboard
#define SOAP_TYPE__ns3__GetChallengeDetailsForDashboard (127)
/* ns3:GetChallengeDetailsForDashboard */
class SOAP_CMAC _ns3__GetChallengeDetailsForDashboard
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE__ns3__GetChallengeDetailsForDashboard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeDetailsForDashboard() { _ns3__GetChallengeDetailsForDashboard::soap_default(NULL); }
	virtual ~_ns3__GetChallengeDetailsForDashboard() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult
#define SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult (544)
/* ns3:GetChallengeDetailsForDashboardResponse-GetChallengeDetailsForDashboardResult */
class SOAP_CMAC _ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 544; } /* = unique id SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult() { _ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult::soap_default(NULL); }
	virtual ~_ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse
#define SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse (128)
/* ns3:GetChallengeDetailsForDashboardResponse */
class SOAP_CMAC _ns3__GetChallengeDetailsForDashboardResponse
{
public:
	_ns3__GetChallengeDetailsForDashboardResponse_GetChallengeDetailsForDashboardResult *GetChallengeDetailsForDashboardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetChallengeDetailsForDashboardResponse-GetChallengeDetailsForDashboardResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE__ns3__GetChallengeDetailsForDashboardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeDetailsForDashboardResponse() { _ns3__GetChallengeDetailsForDashboardResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeDetailsForDashboardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeNameForDashboard
#define SOAP_TYPE__ns3__GetChallengeNameForDashboard (129)
/* ns3:GetChallengeNameForDashboard */
class SOAP_CMAC _ns3__GetChallengeNameForDashboard
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	bool *openToAll;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE__ns3__GetChallengeNameForDashboard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeNameForDashboard() { _ns3__GetChallengeNameForDashboard::soap_default(NULL); }
	virtual ~_ns3__GetChallengeNameForDashboard() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeNameForDashboardResponse
#define SOAP_TYPE__ns3__GetChallengeNameForDashboardResponse (130)
/* ns3:GetChallengeNameForDashboardResponse */
class SOAP_CMAC _ns3__GetChallengeNameForDashboardResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetChallengeNameForDashboardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE__ns3__GetChallengeNameForDashboardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeNameForDashboardResponse() { _ns3__GetChallengeNameForDashboardResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeNameForDashboardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetActiveChallengeNameForDashboard
#define SOAP_TYPE__ns3__GetActiveChallengeNameForDashboard (131)
/* ns3:GetActiveChallengeNameForDashboard */
class SOAP_CMAC _ns3__GetActiveChallengeNameForDashboard
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	bool *openToAll;	/* optional element of type xsd:boolean */
	int *challengeStatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE__ns3__GetActiveChallengeNameForDashboard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetActiveChallengeNameForDashboard() { _ns3__GetActiveChallengeNameForDashboard::soap_default(NULL); }
	virtual ~_ns3__GetActiveChallengeNameForDashboard() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetActiveChallengeNameForDashboardResponse
#define SOAP_TYPE__ns3__GetActiveChallengeNameForDashboardResponse (132)
/* ns3:GetActiveChallengeNameForDashboardResponse */
class SOAP_CMAC _ns3__GetActiveChallengeNameForDashboardResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetActiveChallengeNameForDashboardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE__ns3__GetActiveChallengeNameForDashboardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetActiveChallengeNameForDashboardResponse() { _ns3__GetActiveChallengeNameForDashboardResponse::soap_default(NULL); }
	virtual ~_ns3__GetActiveChallengeNameForDashboardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgID
#define SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgID (133)
/* ns3:GetAllOrgaAdminAsPerOrgID */
class SOAP_CMAC _ns3__GetAllOrgaAdminAsPerOrgID
{
public:
	int *organizationID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllOrgaAdminAsPerOrgID() { _ns3__GetAllOrgaAdminAsPerOrgID::soap_default(NULL); }
	virtual ~_ns3__GetAllOrgaAdminAsPerOrgID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult
#define SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult (546)
/* ns3:GetAllOrgaAdminAsPerOrgIDResponse-GetAllOrgaAdminAsPerOrgIDResult */
class SOAP_CMAC _ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 546; } /* = unique id SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult() { _ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult::soap_default(NULL); }
	virtual ~_ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse
#define SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse (134)
/* ns3:GetAllOrgaAdminAsPerOrgIDResponse */
class SOAP_CMAC _ns3__GetAllOrgaAdminAsPerOrgIDResponse
{
public:
	_ns3__GetAllOrgaAdminAsPerOrgIDResponse_GetAllOrgaAdminAsPerOrgIDResult *GetAllOrgaAdminAsPerOrgIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllOrgaAdminAsPerOrgIDResponse-GetAllOrgaAdminAsPerOrgIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE__ns3__GetAllOrgaAdminAsPerOrgIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllOrgaAdminAsPerOrgIDResponse() { _ns3__GetAllOrgaAdminAsPerOrgIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllOrgaAdminAsPerOrgIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingName
#define SOAP_TYPE__ns3__GetCustomReadingName (135)
/* ns3:GetCustomReadingName */
class SOAP_CMAC _ns3__GetCustomReadingName
{
public:
	int *customReadingId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingName() { _ns3__GetCustomReadingName::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingNameResponse
#define SOAP_TYPE__ns3__GetCustomReadingNameResponse (136)
/* ns3:GetCustomReadingNameResponse */
class SOAP_CMAC _ns3__GetCustomReadingNameResponse
{
public:
	std::string *GetCustomReadingNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingNameResponse() { _ns3__GetCustomReadingNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameById
#define SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameById (137)
/* ns3:GetAllChildRecordAndUnitNameById */
class SOAP_CMAC _ns3__GetAllChildRecordAndUnitNameById
{
public:
	int *readingID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChildRecordAndUnitNameById() { _ns3__GetAllChildRecordAndUnitNameById::soap_default(NULL); }
	virtual ~_ns3__GetAllChildRecordAndUnitNameById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameByIdResponse
#define SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameByIdResponse (138)
/* ns3:GetAllChildRecordAndUnitNameByIdResponse */
class SOAP_CMAC _ns3__GetAllChildRecordAndUnitNameByIdResponse
{
public:
	ns6__ArrayOfReadingNames *GetAllChildRecordAndUnitNameByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE__ns3__GetAllChildRecordAndUnitNameByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChildRecordAndUnitNameByIdResponse() { _ns3__GetAllChildRecordAndUnitNameByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChildRecordAndUnitNameByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetdRecordAndUnitNameById
#define SOAP_TYPE__ns3__GetdRecordAndUnitNameById (139)
/* ns3:GetdRecordAndUnitNameById */
class SOAP_CMAC _ns3__GetdRecordAndUnitNameById
{
public:
	int *readingID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE__ns3__GetdRecordAndUnitNameById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetdRecordAndUnitNameById() { _ns3__GetdRecordAndUnitNameById::soap_default(NULL); }
	virtual ~_ns3__GetdRecordAndUnitNameById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetdRecordAndUnitNameByIdResponse
#define SOAP_TYPE__ns3__GetdRecordAndUnitNameByIdResponse (140)
/* ns3:GetdRecordAndUnitNameByIdResponse */
class SOAP_CMAC _ns3__GetdRecordAndUnitNameByIdResponse
{
public:
	class ns6__ReadingNames *GetdRecordAndUnitNameByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE__ns3__GetdRecordAndUnitNameByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetdRecordAndUnitNameByIdResponse() { _ns3__GetdRecordAndUnitNameByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetdRecordAndUnitNameByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitName
#define SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitName (141)
/* ns3:GetCustomReadingRecordsAndUnitName */
class SOAP_CMAC _ns3__GetCustomReadingRecordsAndUnitName
{
public:
	int *readingID;	/* optional element of type xsd:int */
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordsAndUnitName() { _ns3__GetCustomReadingRecordsAndUnitName::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordsAndUnitName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitNameResponse
#define SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitNameResponse (142)
/* ns3:GetCustomReadingRecordsAndUnitNameResponse */
class SOAP_CMAC _ns3__GetCustomReadingRecordsAndUnitNameResponse
{
public:
	ns6__ReadingNames *GetCustomReadingRecordsAndUnitNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordsAndUnitNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordsAndUnitNameResponse() { _ns3__GetCustomReadingRecordsAndUnitNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordsAndUnitNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__MakeUserActive
#define SOAP_TYPE__ns3__MakeUserActive (143)
/* ns3:MakeUserActive */
class SOAP_CMAC _ns3__MakeUserActive
{
public:
	int *userId;	/* optional element of type xsd:int */
	int *days;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE__ns3__MakeUserActive */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__MakeUserActive() { _ns3__MakeUserActive::soap_default(NULL); }
	virtual ~_ns3__MakeUserActive() { }
};
#endif

#ifndef SOAP_TYPE__ns3__MakeUserActiveResponse
#define SOAP_TYPE__ns3__MakeUserActiveResponse (144)
/* ns3:MakeUserActiveResponse */
class SOAP_CMAC _ns3__MakeUserActiveResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE__ns3__MakeUserActiveResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__MakeUserActiveResponse() { _ns3__MakeUserActiveResponse::soap_default(NULL); }
	virtual ~_ns3__MakeUserActiveResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__MakeUserInActive
#define SOAP_TYPE__ns3__MakeUserInActive (145)
/* ns3:MakeUserInActive */
class SOAP_CMAC _ns3__MakeUserInActive
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE__ns3__MakeUserInActive */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__MakeUserInActive() { _ns3__MakeUserInActive::soap_default(NULL); }
	virtual ~_ns3__MakeUserInActive() { }
};
#endif

#ifndef SOAP_TYPE__ns3__MakeUserInActiveResponse
#define SOAP_TYPE__ns3__MakeUserInActiveResponse (146)
/* ns3:MakeUserInActiveResponse */
class SOAP_CMAC _ns3__MakeUserInActiveResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE__ns3__MakeUserInActiveResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__MakeUserInActiveResponse() { _ns3__MakeUserInActiveResponse::soap_default(NULL); }
	virtual ~_ns3__MakeUserInActiveResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgID
#define SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgID (147)
/* ns3:GetEmployeeDeatilsAsPerOrgID */
class SOAP_CMAC _ns3__GetEmployeeDeatilsAsPerOrgID
{
public:
	int *organizationID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDeatilsAsPerOrgID() { _ns3__GetEmployeeDeatilsAsPerOrgID::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDeatilsAsPerOrgID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult
#define SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult (549)
/* ns3:GetEmployeeDeatilsAsPerOrgIDResponse-GetEmployeeDeatilsAsPerOrgIDResult */
class SOAP_CMAC _ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 549; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult() { _ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse
#define SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse (148)
/* ns3:GetEmployeeDeatilsAsPerOrgIDResponse */
class SOAP_CMAC _ns3__GetEmployeeDeatilsAsPerOrgIDResponse
{
public:
	_ns3__GetEmployeeDeatilsAsPerOrgIDResponse_GetEmployeeDeatilsAsPerOrgIDResult *GetEmployeeDeatilsAsPerOrgIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetEmployeeDeatilsAsPerOrgIDResponse-GetEmployeeDeatilsAsPerOrgIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDeatilsAsPerOrgIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDeatilsAsPerOrgIDResponse() { _ns3__GetEmployeeDeatilsAsPerOrgIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDeatilsAsPerOrgIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateShareDetails
#define SOAP_TYPE__ns3__CreateShareDetails (149)
/* ns3:CreateShareDetails */
class SOAP_CMAC _ns3__CreateShareDetails
{
public:
	class ns6__User_USCORESharing *shareDetails;	/* optional element of type ns6:User_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE__ns3__CreateShareDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateShareDetails() { _ns3__CreateShareDetails::soap_default(NULL); }
	virtual ~_ns3__CreateShareDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateShareDetailsResponse
#define SOAP_TYPE__ns3__CreateShareDetailsResponse (150)
/* ns3:CreateShareDetailsResponse */
class SOAP_CMAC _ns3__CreateShareDetailsResponse
{
public:
	ns6__User_USCORESharing *CreateShareDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE__ns3__CreateShareDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateShareDetailsResponse() { _ns3__CreateShareDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateShareDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateShareDetails
#define SOAP_TYPE__ns3__UpdateShareDetails (151)
/* ns3:UpdateShareDetails */
class SOAP_CMAC _ns3__UpdateShareDetails
{
public:
	ns6__User_USCORESharing *userSharingDetails;	/* optional element of type ns6:User_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE__ns3__UpdateShareDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateShareDetails() { _ns3__UpdateShareDetails::soap_default(NULL); }
	virtual ~_ns3__UpdateShareDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateShareDetailsResponse
#define SOAP_TYPE__ns3__UpdateShareDetailsResponse (152)
/* ns3:UpdateShareDetailsResponse */
class SOAP_CMAC _ns3__UpdateShareDetailsResponse
{
public:
	bool *UpdateShareDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE__ns3__UpdateShareDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateShareDetailsResponse() { _ns3__UpdateShareDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateShareDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByUserId
#define SOAP_TYPE__ns3__GetShareDetailsByUserId (153)
/* ns3:GetShareDetailsByUserId */
class SOAP_CMAC _ns3__GetShareDetailsByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByUserId() { _ns3__GetShareDetailsByUserId::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByUserIdResponse
#define SOAP_TYPE__ns3__GetShareDetailsByUserIdResponse (154)
/* ns3:GetShareDetailsByUserIdResponse */
class SOAP_CMAC _ns3__GetShareDetailsByUserIdResponse
{
public:
	class ns6__ArrayOfUser_USCORESharing *GetShareDetailsByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByUserIdResponse() { _ns3__GetShareDetailsByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSharedDetailsbyID
#define SOAP_TYPE__ns3__GetSharedDetailsbyID (155)
/* ns3:GetSharedDetailsbyID */
class SOAP_CMAC _ns3__GetSharedDetailsbyID
{
public:
	int *shareId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE__ns3__GetSharedDetailsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSharedDetailsbyID() { _ns3__GetSharedDetailsbyID::soap_default(NULL); }
	virtual ~_ns3__GetSharedDetailsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetSharedDetailsbyIDResponse
#define SOAP_TYPE__ns3__GetSharedDetailsbyIDResponse (156)
/* ns3:GetSharedDetailsbyIDResponse */
class SOAP_CMAC _ns3__GetSharedDetailsbyIDResponse
{
public:
	ns6__User_USCORESharing *GetSharedDetailsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE__ns3__GetSharedDetailsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetSharedDetailsbyIDResponse() { _ns3__GetSharedDetailsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetSharedDetailsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetConditionDetailsById
#define SOAP_TYPE__ns3__GetConditionDetailsById (157)
/* ns3:GetConditionDetailsById */
class SOAP_CMAC _ns3__GetConditionDetailsById
{
public:
	int *definedCondition_USCOREId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE__ns3__GetConditionDetailsById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetConditionDetailsById() { _ns3__GetConditionDetailsById::soap_default(NULL); }
	virtual ~_ns3__GetConditionDetailsById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetConditionDetailsByIdResponse
#define SOAP_TYPE__ns3__GetConditionDetailsByIdResponse (158)
/* ns3:GetConditionDetailsByIdResponse */
class SOAP_CMAC _ns3__GetConditionDetailsByIdResponse
{
public:
	class ns6__User_USCOREHealth_USCORECondition *GetConditionDetailsByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Health_Condition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE__ns3__GetConditionDetailsByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetConditionDetailsByIdResponse() { _ns3__GetConditionDetailsByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetConditionDetailsByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLog
#define SOAP_TYPE__ns3__GetLog (159)
/* ns3:GetLog */
class SOAP_CMAC _ns3__GetLog
{
public:
	std::string *filterType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE__ns3__GetLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLog() { _ns3__GetLog::soap_default(NULL); }
	virtual ~_ns3__GetLog() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLogResponse
#define SOAP_TYPE__ns3__GetLogResponse (160)
/* ns3:GetLogResponse */
class SOAP_CMAC _ns3__GetLogResponse
{
public:
	class ns6__ArrayOfApplicationLog *GetLogResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfApplicationLog */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE__ns3__GetLogResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLogResponse() { _ns3__GetLogResponse::soap_default(NULL); }
	virtual ~_ns3__GetLogResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameById
#define SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameById (161)
/* ns3:GetReadingNameAndCustomReadingNameById */
class SOAP_CMAC _ns3__GetReadingNameAndCustomReadingNameById
{
public:
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingNameAndCustomReadingNameById() { _ns3__GetReadingNameAndCustomReadingNameById::soap_default(NULL); }
	virtual ~_ns3__GetReadingNameAndCustomReadingNameById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameByIdResponse
#define SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameByIdResponse (162)
/* ns3:GetReadingNameAndCustomReadingNameByIdResponse */
class SOAP_CMAC _ns3__GetReadingNameAndCustomReadingNameByIdResponse
{
public:
	ns6__ArrayOfReadingNames *GetReadingNameAndCustomReadingNameByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE__ns3__GetReadingNameAndCustomReadingNameByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingNameAndCustomReadingNameByIdResponse() { _ns3__GetReadingNameAndCustomReadingNameByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingNameAndCustomReadingNameByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentID
#define SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentID (163)
/* ns3:GetCustomReadingRecordByDateTimeAndParentID */
class SOAP_CMAC _ns3__GetCustomReadingRecordByDateTimeAndParentID
{
public:
	std::string *readingTime;	/* optional element of type ns5:duration */
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *customReadingId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordByDateTimeAndParentID() { _ns3__GetCustomReadingRecordByDateTimeAndParentID::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordByDateTimeAndParentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse
#define SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse (164)
/* ns3:GetCustomReadingRecordByDateTimeAndParentIDResponse */
class SOAP_CMAC _ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse
{
public:
	ns6__ArrayOfReadingNames *GetCustomReadingRecordByDateTimeAndParentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse() { _ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordByDateTimeAndParentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateCustomReadingRecords
#define SOAP_TYPE__ns3__CreateCustomReadingRecords (165)
/* ns3:CreateCustomReadingRecords */
class SOAP_CMAC _ns3__CreateCustomReadingRecords
{
public:
	class ns6__Custom_USCOREReading_USCORERecords *customReadingsRecords;	/* optional element of type ns6:Custom_Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE__ns3__CreateCustomReadingRecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateCustomReadingRecords() { _ns3__CreateCustomReadingRecords::soap_default(NULL); }
	virtual ~_ns3__CreateCustomReadingRecords() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateCustomReadingRecordsResponse
#define SOAP_TYPE__ns3__CreateCustomReadingRecordsResponse (166)
/* ns3:CreateCustomReadingRecordsResponse */
class SOAP_CMAC _ns3__CreateCustomReadingRecordsResponse
{
public:
	ns6__Custom_USCOREReading_USCORERecords *CreateCustomReadingRecordsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Custom_Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE__ns3__CreateCustomReadingRecordsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateCustomReadingRecordsResponse() { _ns3__CreateCustomReadingRecordsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateCustomReadingRecordsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserId
#define SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserId (167)
/* ns3:GetReadingRecordsByDateAndUserId */
class SOAP_CMAC _ns3__GetReadingRecordsByDateAndUserId
{
public:
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *parentId;	/* optional element of type xsd:int */
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordsByDateAndUserId() { _ns3__GetReadingRecordsByDateAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordsByDateAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserIdResponse
#define SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserIdResponse (168)
/* ns3:GetReadingRecordsByDateAndUserIdResponse */
class SOAP_CMAC _ns3__GetReadingRecordsByDateAndUserIdResponse
{
public:
	ns6__ArrayOfReading_USCORERecords *GetReadingRecordsByDateAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordsByDateAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordsByDateAndUserIdResponse() { _ns3__GetReadingRecordsByDateAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordsByDateAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordId
#define SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordId (169)
/* ns3:GetCustomReadingRecordsByRecordId */
class SOAP_CMAC _ns3__GetCustomReadingRecordsByRecordId
{
public:
	int *readingRecordsID;	/* optional element of type xsd:int */
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordsByRecordId() { _ns3__GetCustomReadingRecordsByRecordId::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordsByRecordId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordIdResponse
#define SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordIdResponse (170)
/* ns3:GetCustomReadingRecordsByRecordIdResponse */
class SOAP_CMAC _ns3__GetCustomReadingRecordsByRecordIdResponse
{
public:
	ns6__Custom_USCOREReading_USCORERecords *GetCustomReadingRecordsByRecordIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Custom_Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingRecordsByRecordIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingRecordsByRecordIdResponse() { _ns3__GetCustomReadingRecordsByRecordIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingRecordsByRecordIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateCustomReadingRecord
#define SOAP_TYPE__ns3__UpdateCustomReadingRecord (171)
/* ns3:UpdateCustomReadingRecord */
class SOAP_CMAC _ns3__UpdateCustomReadingRecord
{
public:
	ns6__Custom_USCOREReading_USCORERecords *customRecords;	/* optional element of type ns6:Custom_Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE__ns3__UpdateCustomReadingRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateCustomReadingRecord() { _ns3__UpdateCustomReadingRecord::soap_default(NULL); }
	virtual ~_ns3__UpdateCustomReadingRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateCustomReadingRecordResponse
#define SOAP_TYPE__ns3__UpdateCustomReadingRecordResponse (172)
/* ns3:UpdateCustomReadingRecordResponse */
class SOAP_CMAC _ns3__UpdateCustomReadingRecordResponse
{
public:
	bool *UpdateCustomReadingRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE__ns3__UpdateCustomReadingRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateCustomReadingRecordResponse() { _ns3__UpdateCustomReadingRecordResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateCustomReadingRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationNameByOrgId
#define SOAP_TYPE__ns3__GetOrganizationNameByOrgId (173)
/* ns3:GetOrganizationNameByOrgId */
class SOAP_CMAC _ns3__GetOrganizationNameByOrgId
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE__ns3__GetOrganizationNameByOrgId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationNameByOrgId() { _ns3__GetOrganizationNameByOrgId::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationNameByOrgId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationNameByOrgIdResponse
#define SOAP_TYPE__ns3__GetOrganizationNameByOrgIdResponse (174)
/* ns3:GetOrganizationNameByOrgIdResponse */
class SOAP_CMAC _ns3__GetOrganizationNameByOrgIdResponse
{
public:
	std::string *GetOrganizationNameByOrgIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE__ns3__GetOrganizationNameByOrgIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationNameByOrgIdResponse() { _ns3__GetOrganizationNameByOrgIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationNameByOrgIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationIdByUserId
#define SOAP_TYPE__ns3__GetOrganizationIdByUserId (175)
/* ns3:GetOrganizationIdByUserId */
class SOAP_CMAC _ns3__GetOrganizationIdByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE__ns3__GetOrganizationIdByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationIdByUserId() { _ns3__GetOrganizationIdByUserId::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationIdByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationIdByUserIdResponse
#define SOAP_TYPE__ns3__GetOrganizationIdByUserIdResponse (176)
/* ns3:GetOrganizationIdByUserIdResponse */
class SOAP_CMAC _ns3__GetOrganizationIdByUserIdResponse
{
public:
	int *GetOrganizationIdByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE__ns3__GetOrganizationIdByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationIdByUserIdResponse() { _ns3__GetOrganizationIdByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationIdByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengesByOrgID
#define SOAP_TYPE__ns3__GetChallengesByOrgID (177)
/* ns3:GetChallengesByOrgID */
class SOAP_CMAC _ns3__GetChallengesByOrgID
{
public:
	int *OrganizationID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE__ns3__GetChallengesByOrgID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengesByOrgID() { _ns3__GetChallengesByOrgID::soap_default(NULL); }
	virtual ~_ns3__GetChallengesByOrgID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengesByOrgIDResponse
#define SOAP_TYPE__ns3__GetChallengesByOrgIDResponse (178)
/* ns3:GetChallengesByOrgIDResponse */
class SOAP_CMAC _ns3__GetChallengesByOrgIDResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetChallengesByOrgIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE__ns3__GetChallengesByOrgIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengesByOrgIDResponse() { _ns3__GetChallengesByOrgIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengesByOrgIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateCustomReadings
#define SOAP_TYPE__ns3__CreateCustomReadings (179)
/* ns3:CreateCustomReadings */
class SOAP_CMAC _ns3__CreateCustomReadings
{
public:
	ns6__User_USCORECustom_USCOREReadings *customReadings;	/* optional element of type ns6:User_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE__ns3__CreateCustomReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateCustomReadings() { _ns3__CreateCustomReadings::soap_default(NULL); }
	virtual ~_ns3__CreateCustomReadings() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateCustomReadingsResponse
#define SOAP_TYPE__ns3__CreateCustomReadingsResponse (180)
/* ns3:CreateCustomReadingsResponse */
class SOAP_CMAC _ns3__CreateCustomReadingsResponse
{
public:
	ns6__User_USCORECustom_USCOREReadings *CreateCustomReadingsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE__ns3__CreateCustomReadingsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateCustomReadingsResponse() { _ns3__CreateCustomReadingsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateCustomReadingsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadUnitsDetails
#define SOAP_TYPE__ns3__LoadUnitsDetails (181)
/* ns3:LoadUnitsDetails */
class SOAP_CMAC _ns3__LoadUnitsDetails
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE__ns3__LoadUnitsDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadUnitsDetails() { _ns3__LoadUnitsDetails::soap_default(NULL); }
	virtual ~_ns3__LoadUnitsDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadUnitsDetailsResponse
#define SOAP_TYPE__ns3__LoadUnitsDetailsResponse (182)
/* ns3:LoadUnitsDetailsResponse */
class SOAP_CMAC _ns3__LoadUnitsDetailsResponse
{
public:
	class ns6__ArrayOfUnits_USCOREMaster *LoadUnitsDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUnits_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE__ns3__LoadUnitsDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadUnitsDetailsResponse() { _ns3__LoadUnitsDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__LoadUnitsDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingNameByUserId
#define SOAP_TYPE__ns3__GetCustomReadingNameByUserId (183)
/* ns3:GetCustomReadingNameByUserId */
class SOAP_CMAC _ns3__GetCustomReadingNameByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingNameByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingNameByUserId() { _ns3__GetCustomReadingNameByUserId::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingNameByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingNameByUserIdResponse
#define SOAP_TYPE__ns3__GetCustomReadingNameByUserIdResponse (184)
/* ns3:GetCustomReadingNameByUserIdResponse */
class SOAP_CMAC _ns3__GetCustomReadingNameByUserIdResponse
{
public:
	ns6__ArrayOfReadingNames *GetCustomReadingNameByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingNameByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingNameByUserIdResponse() { _ns3__GetCustomReadingNameByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingNameByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateCustomReadingDetails
#define SOAP_TYPE__ns3__UpdateCustomReadingDetails (185)
/* ns3:UpdateCustomReadingDetails */
class SOAP_CMAC _ns3__UpdateCustomReadingDetails
{
public:
	ns6__User_USCORECustom_USCOREReadings *customReadings;	/* optional element of type ns6:User_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 185; } /* = unique id SOAP_TYPE__ns3__UpdateCustomReadingDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateCustomReadingDetails() { _ns3__UpdateCustomReadingDetails::soap_default(NULL); }
	virtual ~_ns3__UpdateCustomReadingDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateCustomReadingDetailsResponse
#define SOAP_TYPE__ns3__UpdateCustomReadingDetailsResponse (186)
/* ns3:UpdateCustomReadingDetailsResponse */
class SOAP_CMAC _ns3__UpdateCustomReadingDetailsResponse
{
public:
	bool *UpdateCustomReadingDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 186; } /* = unique id SOAP_TYPE__ns3__UpdateCustomReadingDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateCustomReadingDetailsResponse() { _ns3__UpdateCustomReadingDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateCustomReadingDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingDetailsByUserId
#define SOAP_TYPE__ns3__GetCustomReadingDetailsByUserId (187)
/* ns3:GetCustomReadingDetailsByUserId */
class SOAP_CMAC _ns3__GetCustomReadingDetailsByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 187; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingDetailsByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingDetailsByUserId() { _ns3__GetCustomReadingDetailsByUserId::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingDetailsByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetCustomReadingDetailsByUserIdResponse
#define SOAP_TYPE__ns3__GetCustomReadingDetailsByUserIdResponse (188)
/* ns3:GetCustomReadingDetailsByUserIdResponse */
class SOAP_CMAC _ns3__GetCustomReadingDetailsByUserIdResponse
{
public:
	class ns6__ArrayOfUser_USCORECustom_USCOREReadings *GetCustomReadingDetailsByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 188; } /* = unique id SOAP_TYPE__ns3__GetCustomReadingDetailsByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetCustomReadingDetailsByUserIdResponse() { _ns3__GetCustomReadingDetailsByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetCustomReadingDetailsByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadCustomReadingsById
#define SOAP_TYPE__ns3__LoadCustomReadingsById (189)
/* ns3:LoadCustomReadingsById */
class SOAP_CMAC _ns3__LoadCustomReadingsById
{
public:
	int *customReadingId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 189; } /* = unique id SOAP_TYPE__ns3__LoadCustomReadingsById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadCustomReadingsById() { _ns3__LoadCustomReadingsById::soap_default(NULL); }
	virtual ~_ns3__LoadCustomReadingsById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__LoadCustomReadingsByIdResponse
#define SOAP_TYPE__ns3__LoadCustomReadingsByIdResponse (190)
/* ns3:LoadCustomReadingsByIdResponse */
class SOAP_CMAC _ns3__LoadCustomReadingsByIdResponse
{
public:
	ns6__User_USCORECustom_USCOREReadings *LoadCustomReadingsByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Custom_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 190; } /* = unique id SOAP_TYPE__ns3__LoadCustomReadingsByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__LoadCustomReadingsByIdResponse() { _ns3__LoadCustomReadingsByIdResponse::soap_default(NULL); }
	virtual ~_ns3__LoadCustomReadingsByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallenges
#define SOAP_TYPE__ns3__GetChallenges (191)
/* ns3:GetChallenges */
class SOAP_CMAC _ns3__GetChallenges
{
public:
	int *organizationId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	int *challengestatus;	/* optional element of type xsd:int */
	int *isSubscribed;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique id SOAP_TYPE__ns3__GetChallenges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallenges() { _ns3__GetChallenges::soap_default(NULL); }
	virtual ~_ns3__GetChallenges() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengesResponse
#define SOAP_TYPE__ns3__GetChallengesResponse (192)
/* ns3:GetChallengesResponse */
class SOAP_CMAC _ns3__GetChallengesResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetChallengesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique id SOAP_TYPE__ns3__GetChallengesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengesResponse() { _ns3__GetChallengesResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getAllCompletedChallenges
#define SOAP_TYPE__ns3__getAllCompletedChallenges (193)
/* ns3:getAllCompletedChallenges */
class SOAP_CMAC _ns3__getAllCompletedChallenges
{
public:
	int *organizationid;	/* optional element of type xsd:int */
	int *userid;	/* optional element of type xsd:int */
	int *challengeStatus;	/* optional element of type xsd:int */
	int *isSubscribed;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 193; } /* = unique id SOAP_TYPE__ns3__getAllCompletedChallenges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getAllCompletedChallenges() { _ns3__getAllCompletedChallenges::soap_default(NULL); }
	virtual ~_ns3__getAllCompletedChallenges() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getAllCompletedChallengesResponse
#define SOAP_TYPE__ns3__getAllCompletedChallengesResponse (194)
/* ns3:getAllCompletedChallengesResponse */
class SOAP_CMAC _ns3__getAllCompletedChallengesResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *getAllCompletedChallengesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique id SOAP_TYPE__ns3__getAllCompletedChallengesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getAllCompletedChallengesResponse() { _ns3__getAllCompletedChallengesResponse::soap_default(NULL); }
	virtual ~_ns3__getAllCompletedChallengesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getReadingName
#define SOAP_TYPE__ns3__getReadingName (195)
/* ns3:getReadingName */
class SOAP_CMAC _ns3__getReadingName
{
public:
	int *readingId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 195; } /* = unique id SOAP_TYPE__ns3__getReadingName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getReadingName() { _ns3__getReadingName::soap_default(NULL); }
	virtual ~_ns3__getReadingName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getReadingNameResponse
#define SOAP_TYPE__ns3__getReadingNameResponse (196)
/* ns3:getReadingNameResponse */
class SOAP_CMAC _ns3__getReadingNameResponse
{
public:
	std::string *getReadingNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique id SOAP_TYPE__ns3__getReadingNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getReadingNameResponse() { _ns3__getReadingNameResponse::soap_default(NULL); }
	virtual ~_ns3__getReadingNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getChallengesSubscribedStatus
#define SOAP_TYPE__ns3__getChallengesSubscribedStatus (197)
/* ns3:getChallengesSubscribedStatus */
class SOAP_CMAC _ns3__getChallengesSubscribedStatus
{
public:
	int *challengeid;	/* optional element of type xsd:int */
	int *subscribedStatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 197; } /* = unique id SOAP_TYPE__ns3__getChallengesSubscribedStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getChallengesSubscribedStatus() { _ns3__getChallengesSubscribedStatus::soap_default(NULL); }
	virtual ~_ns3__getChallengesSubscribedStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__getChallengesSubscribedStatusResponse
#define SOAP_TYPE__ns3__getChallengesSubscribedStatusResponse (198)
/* ns3:getChallengesSubscribedStatusResponse */
class SOAP_CMAC _ns3__getChallengesSubscribedStatusResponse
{
public:
	int *getChallengesSubscribedStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 198; } /* = unique id SOAP_TYPE__ns3__getChallengesSubscribedStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__getChallengesSubscribedStatusResponse() { _ns3__getChallengesSubscribedStatusResponse::soap_default(NULL); }
	virtual ~_ns3__getChallengesSubscribedStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeID
#define SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeID (199)
/* ns3:GetAllChallengesSubScriptionsByChallengeID */
class SOAP_CMAC _ns3__GetAllChallengesSubScriptionsByChallengeID
{
public:
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 199; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesSubScriptionsByChallengeID() { _ns3__GetAllChallengesSubScriptionsByChallengeID::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesSubScriptionsByChallengeID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeIDResponse
#define SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeIDResponse (200)
/* ns3:GetAllChallengesSubScriptionsByChallengeIDResponse */
class SOAP_CMAC _ns3__GetAllChallengesSubScriptionsByChallengeIDResponse
{
public:
	class ns6__ArrayOfChallenge_USCORESubscriptions *GetAllChallengesSubScriptionsByChallengeIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 200; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesSubScriptionsByChallengeIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesSubScriptionsByChallengeIDResponse() { _ns3__GetAllChallengesSubScriptionsByChallengeIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesSubScriptionsByChallengeIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesByChallengeID
#define SOAP_TYPE__ns3__DeleteChallengesByChallengeID (201)
/* ns3:DeleteChallengesByChallengeID */
class SOAP_CMAC _ns3__DeleteChallengesByChallengeID
{
public:
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 201; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesByChallengeID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesByChallengeID() { _ns3__DeleteChallengesByChallengeID::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesByChallengeID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesByChallengeIDResponse
#define SOAP_TYPE__ns3__DeleteChallengesByChallengeIDResponse (202)
/* ns3:DeleteChallengesByChallengeIDResponse */
class SOAP_CMAC _ns3__DeleteChallengesByChallengeIDResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesByChallengeIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesByChallengeIDResponse() { _ns3__DeleteChallengesByChallengeIDResponse::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesByChallengeIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCloseChallengesforConsumer
#define SOAP_TYPE__ns3__GetAllCloseChallengesforConsumer (203)
/* ns3:GetAllCloseChallengesforConsumer */
class SOAP_CMAC _ns3__GetAllCloseChallengesforConsumer
{
public:
	int *userid;	/* optional element of type xsd:int */
	int *challengesstatus;	/* optional element of type xsd:int */
	int *isSubscribedStatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 203; } /* = unique id SOAP_TYPE__ns3__GetAllCloseChallengesforConsumer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCloseChallengesforConsumer() { _ns3__GetAllCloseChallengesforConsumer::soap_default(NULL); }
	virtual ~_ns3__GetAllCloseChallengesforConsumer() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllCloseChallengesforConsumerResponse
#define SOAP_TYPE__ns3__GetAllCloseChallengesforConsumerResponse (204)
/* ns3:GetAllCloseChallengesforConsumerResponse */
class SOAP_CMAC _ns3__GetAllCloseChallengesforConsumerResponse
{
public:
	ns6__ArrayOfChallengesRecordExtrafield *GetAllCloseChallengesforConsumerResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallengesRecordExtrafield */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 204; } /* = unique id SOAP_TYPE__ns3__GetAllCloseChallengesforConsumerResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllCloseChallengesforConsumerResponse() { _ns3__GetAllCloseChallengesforConsumerResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllCloseChallengesforConsumerResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdmin
#define SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdmin (205)
/* ns3:DeleteChallengesRecordbyChallnegeidForAdmin */
class SOAP_CMAC _ns3__DeleteChallengesRecordbyChallnegeidForAdmin
{
public:
	int *challengeid;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 205; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdmin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesRecordbyChallnegeidForAdmin() { _ns3__DeleteChallengesRecordbyChallnegeidForAdmin::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesRecordbyChallnegeidForAdmin() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse
#define SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse (206)
/* ns3:DeleteChallengesRecordbyChallnegeidForAdminResponse */
class SOAP_CMAC _ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 206; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse() { _ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesRecordbyChallnegeidForAdminResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeID
#define SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeID (207)
/* ns3:GetChallengeStatusViewByChallengeID */
class SOAP_CMAC _ns3__GetChallengeStatusViewByChallengeID
{
public:
	int *ChallengeID;	/* optional element of type xsd:int */
	int *Subscribed;	/* optional element of type xsd:int */
	int *unsubscribed;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 207; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusViewByChallengeID() { _ns3__GetChallengeStatusViewByChallengeID::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusViewByChallengeID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult
#define SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult (560)
/* ns3:GetChallengeStatusViewByChallengeIDResponse-GetChallengeStatusViewByChallengeIDResult */
class SOAP_CMAC _ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 560; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult() { _ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse
#define SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse (208)
/* ns3:GetChallengeStatusViewByChallengeIDResponse */
class SOAP_CMAC _ns3__GetChallengeStatusViewByChallengeIDResponse
{
public:
	_ns3__GetChallengeStatusViewByChallengeIDResponse_GetChallengeStatusViewByChallengeIDResult *GetChallengeStatusViewByChallengeIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetChallengeStatusViewByChallengeIDResponse-GetChallengeStatusViewByChallengeIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 208; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusViewByChallengeIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusViewByChallengeIDResponse() { _ns3__GetChallengeStatusViewByChallengeIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusViewByChallengeIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusWithRank_allDataForRank
#define SOAP_TYPE__ns3__GetChallengeStatusWithRank_allDataForRank (562)
/* ns3:GetChallengeStatusWithRank-allDataForRank */
class SOAP_CMAC _ns3__GetChallengeStatusWithRank_allDataForRank
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 562; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusWithRank_allDataForRank */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusWithRank_allDataForRank() { _ns3__GetChallengeStatusWithRank_allDataForRank::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusWithRank_allDataForRank() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusWithRank
#define SOAP_TYPE__ns3__GetChallengeStatusWithRank (209)
/* ns3:GetChallengeStatusWithRank */
class SOAP_CMAC _ns3__GetChallengeStatusWithRank
{
public:
	_ns3__GetChallengeStatusWithRank_allDataForRank *allDataForRank;	/* optional element of type ns3:GetChallengeStatusWithRank-allDataForRank */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 209; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusWithRank */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusWithRank() { _ns3__GetChallengeStatusWithRank::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusWithRank() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult
#define SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult (564)
/* ns3:GetChallengeStatusWithRankResponse-GetChallengeStatusWithRankResult */
class SOAP_CMAC _ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 564; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult() { _ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse
#define SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse (210)
/* ns3:GetChallengeStatusWithRankResponse */
class SOAP_CMAC _ns3__GetChallengeStatusWithRankResponse
{
public:
	_ns3__GetChallengeStatusWithRankResponse_GetChallengeStatusWithRankResult *GetChallengeStatusWithRankResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetChallengeStatusWithRankResponse-GetChallengeStatusWithRankResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 210; } /* = unique id SOAP_TYPE__ns3__GetChallengeStatusWithRankResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeStatusWithRankResponse() { _ns3__GetChallengeStatusWithRankResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeStatusWithRankResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDetails
#define SOAP_TYPE__ns3__GetEmployeeDetails (211)
/* ns3:GetEmployeeDetails */
class SOAP_CMAC _ns3__GetEmployeeDetails
{
public:
	int *OrganizationID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 211; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDetails() { _ns3__GetEmployeeDetails::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult
#define SOAP_TYPE__ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult (566)
/* ns3:GetEmployeeDetailsResponse-GetEmployeeDetailsResult */
class SOAP_CMAC _ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 566; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult() { _ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetEmployeeDetailsResponse
#define SOAP_TYPE__ns3__GetEmployeeDetailsResponse (212)
/* ns3:GetEmployeeDetailsResponse */
class SOAP_CMAC _ns3__GetEmployeeDetailsResponse
{
public:
	_ns3__GetEmployeeDetailsResponse_GetEmployeeDetailsResult *GetEmployeeDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetEmployeeDetailsResponse-GetEmployeeDetailsResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 212; } /* = unique id SOAP_TYPE__ns3__GetEmployeeDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetEmployeeDetailsResponse() { _ns3__GetEmployeeDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__GetEmployeeDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__ValiDateAllExcelEmployee
#define SOAP_TYPE__ns3__ValiDateAllExcelEmployee (213)
/* ns3:ValiDateAllExcelEmployee */
class SOAP_CMAC _ns3__ValiDateAllExcelEmployee
{
public:
	std::string *email;	/* optional element of type xsd:string */
	std::string *oficeemail;	/* optional element of type xsd:string */
	std::string *employeeid;	/* optional element of type xsd:string */
	int *organizationid;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 213; } /* = unique id SOAP_TYPE__ns3__ValiDateAllExcelEmployee */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__ValiDateAllExcelEmployee() { _ns3__ValiDateAllExcelEmployee::soap_default(NULL); }
	virtual ~_ns3__ValiDateAllExcelEmployee() { }
};
#endif

#ifndef SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult
#define SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult (568)
/* ns3:ValiDateAllExcelEmployeeResponse-ValiDateAllExcelEmployeeResult */
class SOAP_CMAC _ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 568; } /* = unique id SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult() { _ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult::soap_default(NULL); }
	virtual ~_ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse
#define SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse (214)
/* ns3:ValiDateAllExcelEmployeeResponse */
class SOAP_CMAC _ns3__ValiDateAllExcelEmployeeResponse
{
public:
	_ns3__ValiDateAllExcelEmployeeResponse_ValiDateAllExcelEmployeeResult *ValiDateAllExcelEmployeeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:ValiDateAllExcelEmployeeResponse-ValiDateAllExcelEmployeeResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 214; } /* = unique id SOAP_TYPE__ns3__ValiDateAllExcelEmployeeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__ValiDateAllExcelEmployeeResponse() { _ns3__ValiDateAllExcelEmployeeResponse::soap_default(NULL); }
	virtual ~_ns3__ValiDateAllExcelEmployeeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateBulkEmployee_dt
#define SOAP_TYPE__ns3__CreateBulkEmployee_dt (570)
/* ns3:CreateBulkEmployee-dt */
class SOAP_CMAC _ns3__CreateBulkEmployee_dt
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 570; } /* = unique id SOAP_TYPE__ns3__CreateBulkEmployee_dt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateBulkEmployee_dt() { _ns3__CreateBulkEmployee_dt::soap_default(NULL); }
	virtual ~_ns3__CreateBulkEmployee_dt() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateBulkEmployee
#define SOAP_TYPE__ns3__CreateBulkEmployee (215)
/* ns3:CreateBulkEmployee */
class SOAP_CMAC _ns3__CreateBulkEmployee
{
public:
	int *organizationid;	/* optional element of type xsd:int */
	int *userid;	/* optional element of type xsd:int */
	_ns3__CreateBulkEmployee_dt *dt;	/* optional element of type ns3:CreateBulkEmployee-dt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 215; } /* = unique id SOAP_TYPE__ns3__CreateBulkEmployee */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateBulkEmployee() { _ns3__CreateBulkEmployee::soap_default(NULL); }
	virtual ~_ns3__CreateBulkEmployee() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateBulkEmployeeResponse
#define SOAP_TYPE__ns3__CreateBulkEmployeeResponse (216)
/* ns3:CreateBulkEmployeeResponse */
class SOAP_CMAC _ns3__CreateBulkEmployeeResponse
{
public:
	int *CreateBulkEmployeeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 216; } /* = unique id SOAP_TYPE__ns3__CreateBulkEmployeeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateBulkEmployeeResponse() { _ns3__CreateBulkEmployeeResponse::soap_default(NULL); }
	virtual ~_ns3__CreateBulkEmployeeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreat
#define SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreat (217)
/* ns3:CheckHealthRecordExistForChallengeCreat */
class SOAP_CMAC _ns3__CheckHealthRecordExistForChallengeCreat
{
public:
	int *userid;	/* optional element of type xsd:int */
	int *readingid;	/* optional element of type xsd:int */
	time_t *minimumdate;	/* optional element of type xsd:dateTime */
	time_t *maximumdate;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 217; } /* = unique id SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreat */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CheckHealthRecordExistForChallengeCreat() { _ns3__CheckHealthRecordExistForChallengeCreat::soap_default(NULL); }
	virtual ~_ns3__CheckHealthRecordExistForChallengeCreat() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreatResponse
#define SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreatResponse (218)
/* ns3:CheckHealthRecordExistForChallengeCreatResponse */
class SOAP_CMAC _ns3__CheckHealthRecordExistForChallengeCreatResponse
{
public:
	int *CheckHealthRecordExistForChallengeCreatResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 218; } /* = unique id SOAP_TYPE__ns3__CheckHealthRecordExistForChallengeCreatResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CheckHealthRecordExistForChallengeCreatResponse() { _ns3__CheckHealthRecordExistForChallengeCreatResponse::soap_default(NULL); }
	virtual ~_ns3__CheckHealthRecordExistForChallengeCreatResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgID
#define SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgID (219)
/* ns3:GetAllEmployeeAsPerOrgID */
class SOAP_CMAC _ns3__GetAllEmployeeAsPerOrgID
{
public:
	int *organizationID;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 219; } /* = unique id SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllEmployeeAsPerOrgID() { _ns3__GetAllEmployeeAsPerOrgID::soap_default(NULL); }
	virtual ~_ns3__GetAllEmployeeAsPerOrgID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult
#define SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult (572)
/* ns3:GetAllEmployeeAsPerOrgIDResponse-GetAllEmployeeAsPerOrgIDResult */
class SOAP_CMAC _ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 572; } /* = unique id SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult() { _ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult::soap_default(NULL); }
	virtual ~_ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse
#define SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse (220)
/* ns3:GetAllEmployeeAsPerOrgIDResponse */
class SOAP_CMAC _ns3__GetAllEmployeeAsPerOrgIDResponse
{
public:
	_ns3__GetAllEmployeeAsPerOrgIDResponse_GetAllEmployeeAsPerOrgIDResult *GetAllEmployeeAsPerOrgIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetAllEmployeeAsPerOrgIDResponse-GetAllEmployeeAsPerOrgIDResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 220; } /* = unique id SOAP_TYPE__ns3__GetAllEmployeeAsPerOrgIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllEmployeeAsPerOrgIDResponse() { _ns3__GetAllEmployeeAsPerOrgIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllEmployeeAsPerOrgIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserId
#define SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserId (221)
/* ns3:GetShareDetailsByEmailAndUserId */
class SOAP_CMAC _ns3__GetShareDetailsByEmailAndUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	std::string *email;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 221; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByEmailAndUserId() { _ns3__GetShareDetailsByEmailAndUserId::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByEmailAndUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserIdResponse
#define SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserIdResponse (222)
/* ns3:GetShareDetailsByEmailAndUserIdResponse */
class SOAP_CMAC _ns3__GetShareDetailsByEmailAndUserIdResponse
{
public:
	ns6__User_USCORESharing *GetShareDetailsByEmailAndUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Sharing */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 222; } /* = unique id SOAP_TYPE__ns3__GetShareDetailsByEmailAndUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetShareDetailsByEmailAndUserIdResponse() { _ns3__GetShareDetailsByEmailAndUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetShareDetailsByEmailAndUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateDependentWithLoginID_dt
#define SOAP_TYPE__ns3__CreateDependentWithLoginID_dt (574)
/* ns3:CreateDependentWithLoginID-dt */
class SOAP_CMAC _ns3__CreateDependentWithLoginID_dt
{
public:
	std::vector<char * >__any;
	char *__any_;
public:
	virtual int soap_type() const { return 574; } /* = unique id SOAP_TYPE__ns3__CreateDependentWithLoginID_dt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateDependentWithLoginID_dt() { _ns3__CreateDependentWithLoginID_dt::soap_default(NULL); }
	virtual ~_ns3__CreateDependentWithLoginID_dt() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateDependentWithLoginID
#define SOAP_TYPE__ns3__CreateDependentWithLoginID (223)
/* ns3:CreateDependentWithLoginID */
class SOAP_CMAC _ns3__CreateDependentWithLoginID
{
public:
	int *userid;	/* optional element of type xsd:int */
	_ns3__CreateDependentWithLoginID_dt *dt;	/* optional element of type ns3:CreateDependentWithLoginID-dt */
	int *mode;	/* optional element of type ns5:char */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 223; } /* = unique id SOAP_TYPE__ns3__CreateDependentWithLoginID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateDependentWithLoginID() { _ns3__CreateDependentWithLoginID::soap_default(NULL); }
	virtual ~_ns3__CreateDependentWithLoginID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateDependentWithLoginIDResponse
#define SOAP_TYPE__ns3__CreateDependentWithLoginIDResponse (224)
/* ns3:CreateDependentWithLoginIDResponse */
class SOAP_CMAC _ns3__CreateDependentWithLoginIDResponse
{
public:
	int *CreateDependentWithLoginIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 224; } /* = unique id SOAP_TYPE__ns3__CreateDependentWithLoginIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateDependentWithLoginIDResponse() { _ns3__CreateDependentWithLoginIDResponse::soap_default(NULL); }
	virtual ~_ns3__CreateDependentWithLoginIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyDependentID
#define SOAP_TYPE__ns3__GetDependentsbyDependentID (225)
/* ns3:GetDependentsbyDependentID */
class SOAP_CMAC _ns3__GetDependentsbyDependentID
{
public:
	int *dependent_USCOREId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 225; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyDependentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyDependentID() { _ns3__GetDependentsbyDependentID::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyDependentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyDependentIDResponse
#define SOAP_TYPE__ns3__GetDependentsbyDependentIDResponse (226)
/* ns3:GetDependentsbyDependentIDResponse */
class SOAP_CMAC _ns3__GetDependentsbyDependentIDResponse
{
public:
	class ns6__User_USCOREDependent *GetDependentsbyDependentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 226; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyDependentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyDependentIDResponse() { _ns3__GetDependentsbyDependentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyDependentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthProfileRecords
#define SOAP_TYPE__ns3__GetHealthProfileRecords (227)
/* ns3:GetHealthProfileRecords */
class SOAP_CMAC _ns3__GetHealthProfileRecords
{
public:
	int *userid;	/* optional element of type xsd:int */
	int *mode;	/* optional element of type ns5:char */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 227; } /* = unique id SOAP_TYPE__ns3__GetHealthProfileRecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthProfileRecords() { _ns3__GetHealthProfileRecords::soap_default(NULL); }
	virtual ~_ns3__GetHealthProfileRecords() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult
#define SOAP_TYPE__ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult (578)
/* ns3:GetHealthProfileRecordsResponse-GetHealthProfileRecordsResult */
class SOAP_CMAC _ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 578; } /* = unique id SOAP_TYPE__ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult() { _ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult::soap_default(NULL); }
	virtual ~_ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthProfileRecordsResponse
#define SOAP_TYPE__ns3__GetHealthProfileRecordsResponse (228)
/* ns3:GetHealthProfileRecordsResponse */
class SOAP_CMAC _ns3__GetHealthProfileRecordsResponse
{
public:
	_ns3__GetHealthProfileRecordsResponse_GetHealthProfileRecordsResult *GetHealthProfileRecordsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetHealthProfileRecordsResponse-GetHealthProfileRecordsResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 228; } /* = unique id SOAP_TYPE__ns3__GetHealthProfileRecordsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthProfileRecordsResponse() { _ns3__GetHealthProfileRecordsResponse::soap_default(NULL); }
	virtual ~_ns3__GetHealthProfileRecordsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyDepUserID
#define SOAP_TYPE__ns3__GetDependentsbyDepUserID (229)
/* ns3:GetDependentsbyDepUserID */
class SOAP_CMAC _ns3__GetDependentsbyDepUserID
{
public:
	int *depUserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 229; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyDepUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyDepUserID() { _ns3__GetDependentsbyDepUserID::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyDepUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyDepUserIDResponse
#define SOAP_TYPE__ns3__GetDependentsbyDepUserIDResponse (230)
/* ns3:GetDependentsbyDepUserIDResponse */
class SOAP_CMAC _ns3__GetDependentsbyDepUserIDResponse
{
public:
	ns6__User_USCOREDependent *GetDependentsbyDepUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 230; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyDepUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyDepUserIDResponse() { _ns3__GetDependentsbyDepUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyDepUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardData
#define SOAP_TYPE__ns3__GetDashBoardData (231)
/* ns3:GetDashBoardData */
class SOAP_CMAC _ns3__GetDashBoardData
{
public:
	int *userid;	/* optional element of type xsd:int */
	std::string *startdate;	/* optional element of type xsd:string */
	std::string *enddate;	/* optional element of type xsd:string */
	std::string *mode;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 231; } /* = unique id SOAP_TYPE__ns3__GetDashBoardData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardData() { _ns3__GetDashBoardData::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardData() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardDataResponse_GetDashBoardDataResult
#define SOAP_TYPE__ns3__GetDashBoardDataResponse_GetDashBoardDataResult (580)
/* ns3:GetDashBoardDataResponse-GetDashBoardDataResult */
class SOAP_CMAC _ns3__GetDashBoardDataResponse_GetDashBoardDataResult
{
public:
	char *xsd__schema;	/* required element of type xsd:schema */
	char *__any;
public:
	virtual int soap_type() const { return 580; } /* = unique id SOAP_TYPE__ns3__GetDashBoardDataResponse_GetDashBoardDataResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardDataResponse_GetDashBoardDataResult() { _ns3__GetDashBoardDataResponse_GetDashBoardDataResult::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardDataResponse_GetDashBoardDataResult() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDashBoardDataResponse
#define SOAP_TYPE__ns3__GetDashBoardDataResponse (232)
/* ns3:GetDashBoardDataResponse */
class SOAP_CMAC _ns3__GetDashBoardDataResponse
{
public:
	_ns3__GetDashBoardDataResponse_GetDashBoardDataResult *GetDashBoardDataResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns3:GetDashBoardDataResponse-GetDashBoardDataResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 232; } /* = unique id SOAP_TYPE__ns3__GetDashBoardDataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDashBoardDataResponse() { _ns3__GetDashBoardDataResponse::soap_default(NULL); }
	virtual ~_ns3__GetDashBoardDataResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateOrganizationLogin
#define SOAP_TYPE__ns3__CreateOrganizationLogin (233)
/* ns3:CreateOrganizationLogin */
class SOAP_CMAC _ns3__CreateOrganizationLogin
{
public:
	class ns6__Organization_USCORELogins *organizationLogin;	/* optional element of type ns6:Organization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 233; } /* = unique id SOAP_TYPE__ns3__CreateOrganizationLogin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateOrganizationLogin() { _ns3__CreateOrganizationLogin::soap_default(NULL); }
	virtual ~_ns3__CreateOrganizationLogin() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateOrganizationLoginResponse
#define SOAP_TYPE__ns3__CreateOrganizationLoginResponse (234)
/* ns3:CreateOrganizationLoginResponse */
class SOAP_CMAC _ns3__CreateOrganizationLoginResponse
{
public:
	ns6__Organization_USCORELogins *CreateOrganizationLoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 234; } /* = unique id SOAP_TYPE__ns3__CreateOrganizationLoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateOrganizationLoginResponse() { _ns3__CreateOrganizationLoginResponse::soap_default(NULL); }
	virtual ~_ns3__CreateOrganizationLoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllOrganizationLogins
#define SOAP_TYPE__ns3__GetAllOrganizationLogins (235)
/* ns3:GetAllOrganizationLogins */
class SOAP_CMAC _ns3__GetAllOrganizationLogins
{
public:
	int *orgLoginId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 235; } /* = unique id SOAP_TYPE__ns3__GetAllOrganizationLogins */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllOrganizationLogins() { _ns3__GetAllOrganizationLogins::soap_default(NULL); }
	virtual ~_ns3__GetAllOrganizationLogins() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllOrganizationLoginsResponse
#define SOAP_TYPE__ns3__GetAllOrganizationLoginsResponse (236)
/* ns3:GetAllOrganizationLoginsResponse */
class SOAP_CMAC _ns3__GetAllOrganizationLoginsResponse
{
public:
	ns6__Organization_USCORELogins *GetAllOrganizationLoginsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 236; } /* = unique id SOAP_TYPE__ns3__GetAllOrganizationLoginsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllOrganizationLoginsResponse() { _ns3__GetAllOrganizationLoginsResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllOrganizationLoginsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllLoginsByOrganizationId
#define SOAP_TYPE__ns3__GetAllLoginsByOrganizationId (237)
/* ns3:GetAllLoginsByOrganizationId */
class SOAP_CMAC _ns3__GetAllLoginsByOrganizationId
{
public:
	int *orgId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 237; } /* = unique id SOAP_TYPE__ns3__GetAllLoginsByOrganizationId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllLoginsByOrganizationId() { _ns3__GetAllLoginsByOrganizationId::soap_default(NULL); }
	virtual ~_ns3__GetAllLoginsByOrganizationId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllLoginsByOrganizationIdResponse
#define SOAP_TYPE__ns3__GetAllLoginsByOrganizationIdResponse (238)
/* ns3:GetAllLoginsByOrganizationIdResponse */
class SOAP_CMAC _ns3__GetAllLoginsByOrganizationIdResponse
{
public:
	class ns6__ArrayOfOrganization_USCORELogins *GetAllLoginsByOrganizationIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfOrganization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 238; } /* = unique id SOAP_TYPE__ns3__GetAllLoginsByOrganizationIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllLoginsByOrganizationIdResponse() { _ns3__GetAllLoginsByOrganizationIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllLoginsByOrganizationIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationLogins
#define SOAP_TYPE__ns3__GetOrganizationLogins (239)
/* ns3:GetOrganizationLogins */
class SOAP_CMAC _ns3__GetOrganizationLogins
{
public:
	int *orgId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 239; } /* = unique id SOAP_TYPE__ns3__GetOrganizationLogins */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationLogins() { _ns3__GetOrganizationLogins::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationLogins() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationLoginsResponse
#define SOAP_TYPE__ns3__GetOrganizationLoginsResponse (240)
/* ns3:GetOrganizationLoginsResponse */
class SOAP_CMAC _ns3__GetOrganizationLoginsResponse
{
public:
	ns6__ArrayOfOrganization_USCORELogins *GetOrganizationLoginsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfOrganization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 240; } /* = unique id SOAP_TYPE__ns3__GetOrganizationLoginsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationLoginsResponse() { _ns3__GetOrganizationLoginsResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationLoginsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationLogin
#define SOAP_TYPE__ns3__UpdateOrganizationLogin (241)
/* ns3:UpdateOrganizationLogin */
class SOAP_CMAC _ns3__UpdateOrganizationLogin
{
public:
	ns6__Organization_USCORELogins *organizationLogin;	/* optional element of type ns6:Organization_Logins */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 241; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationLogin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationLogin() { _ns3__UpdateOrganizationLogin::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationLogin() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationLoginResponse
#define SOAP_TYPE__ns3__UpdateOrganizationLoginResponse (242)
/* ns3:UpdateOrganizationLoginResponse */
class SOAP_CMAC _ns3__UpdateOrganizationLoginResponse
{
public:
	bool *UpdateOrganizationLoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 242; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationLoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationLoginResponse() { _ns3__UpdateOrganizationLoginResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationLoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationSetting
#define SOAP_TYPE__ns3__UpdateOrganizationSetting (243)
/* ns3:UpdateOrganizationSetting */
class SOAP_CMAC _ns3__UpdateOrganizationSetting
{
public:
	class ns6__Organization_USCORESettings *orgnizationSettings;	/* optional element of type ns6:Organization_Settings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 243; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationSetting */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationSetting() { _ns3__UpdateOrganizationSetting::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationSetting() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationSettingResponse
#define SOAP_TYPE__ns3__UpdateOrganizationSettingResponse (244)
/* ns3:UpdateOrganizationSettingResponse */
class SOAP_CMAC _ns3__UpdateOrganizationSettingResponse
{
public:
	bool *UpdateOrganizationSettingResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 244; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationSettingResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationSettingResponse() { _ns3__UpdateOrganizationSettingResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationSettingResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateChallenges
#define SOAP_TYPE__ns3__CreateChallenges (245)
/* ns3:CreateChallenges */
class SOAP_CMAC _ns3__CreateChallenges
{
public:
	class ns6__Challenge *challengeDetails;	/* optional element of type ns6:Challenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 245; } /* = unique id SOAP_TYPE__ns3__CreateChallenges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateChallenges() { _ns3__CreateChallenges::soap_default(NULL); }
	virtual ~_ns3__CreateChallenges() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateChallengesResponse
#define SOAP_TYPE__ns3__CreateChallengesResponse (246)
/* ns3:CreateChallengesResponse */
class SOAP_CMAC _ns3__CreateChallengesResponse
{
public:
	ns6__Challenge *CreateChallengesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Challenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 246; } /* = unique id SOAP_TYPE__ns3__CreateChallengesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateChallengesResponse() { _ns3__CreateChallengesResponse::soap_default(NULL); }
	virtual ~_ns3__CreateChallengesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUser
#define SOAP_TYPE__ns3__CreateUser (247)
/* ns3:CreateUser */
class SOAP_CMAC _ns3__CreateUser
{
public:
	class ns6__User_USCOREMaster *userDetails;	/* optional element of type ns6:User_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 247; } /* = unique id SOAP_TYPE__ns3__CreateUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUser() { _ns3__CreateUser::soap_default(NULL); }
	virtual ~_ns3__CreateUser() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUserResponse
#define SOAP_TYPE__ns3__CreateUserResponse (248)
/* ns3:CreateUserResponse */
class SOAP_CMAC _ns3__CreateUserResponse
{
public:
	ns6__User_USCOREMaster *CreateUserResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 248; } /* = unique id SOAP_TYPE__ns3__CreateUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUserResponse() { _ns3__CreateUserResponse::soap_default(NULL); }
	virtual ~_ns3__CreateUserResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUserMapping
#define SOAP_TYPE__ns3__CreateUserMapping (249)
/* ns3:CreateUserMapping */
class SOAP_CMAC _ns3__CreateUserMapping
{
public:
	class ns6__User_USCORECompany_USCOREMapping *userCompanyDetails;	/* optional element of type ns6:User_Company_Mapping */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 249; } /* = unique id SOAP_TYPE__ns3__CreateUserMapping */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUserMapping() { _ns3__CreateUserMapping::soap_default(NULL); }
	virtual ~_ns3__CreateUserMapping() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUserMappingResponse
#define SOAP_TYPE__ns3__CreateUserMappingResponse (250)
/* ns3:CreateUserMappingResponse */
class SOAP_CMAC _ns3__CreateUserMappingResponse
{
public:
	ns6__User_USCORECompany_USCOREMapping *CreateUserMappingResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Company_Mapping */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 250; } /* = unique id SOAP_TYPE__ns3__CreateUserMappingResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUserMappingResponse() { _ns3__CreateUserMappingResponse::soap_default(NULL); }
	virtual ~_ns3__CreateUserMappingResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateChallenges
#define SOAP_TYPE__ns3__UpdateChallenges (251)
/* ns3:UpdateChallenges */
class SOAP_CMAC _ns3__UpdateChallenges
{
public:
	ns6__Challenge *challenge;	/* optional element of type ns6:Challenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 251; } /* = unique id SOAP_TYPE__ns3__UpdateChallenges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateChallenges() { _ns3__UpdateChallenges::soap_default(NULL); }
	virtual ~_ns3__UpdateChallenges() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateChallengesResponse
#define SOAP_TYPE__ns3__UpdateChallengesResponse (252)
/* ns3:UpdateChallengesResponse */
class SOAP_CMAC _ns3__UpdateChallengesResponse
{
public:
	bool *UpdateChallengesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 252; } /* = unique id SOAP_TYPE__ns3__UpdateChallengesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateChallengesResponse() { _ns3__UpdateChallengesResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateChallengesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesforEmp
#define SOAP_TYPE__ns3__DeleteChallengesforEmp (253)
/* ns3:DeleteChallengesforEmp */
class SOAP_CMAC _ns3__DeleteChallengesforEmp
{
public:
	int *UserID;	/* optional element of type xsd:int */
	int *OrgID;	/* optional element of type xsd:int */
	int *ChallengeID;	/* optional element of type xsd:int */
	int *subscribedstatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 253; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesforEmp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesforEmp() { _ns3__DeleteChallengesforEmp::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesforEmp() { }
};
#endif

#ifndef SOAP_TYPE__ns3__DeleteChallengesforEmpResponse
#define SOAP_TYPE__ns3__DeleteChallengesforEmpResponse (254)
/* ns3:DeleteChallengesforEmpResponse */
class SOAP_CMAC _ns3__DeleteChallengesforEmpResponse
{
public:
	bool *DeleteChallengesforEmpResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 254; } /* = unique id SOAP_TYPE__ns3__DeleteChallengesforEmpResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__DeleteChallengesforEmpResponse() { _ns3__DeleteChallengesforEmpResponse::soap_default(NULL); }
	virtual ~_ns3__DeleteChallengesforEmpResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeById
#define SOAP_TYPE__ns3__GetChallengeById (255)
/* ns3:GetChallengeById */
class SOAP_CMAC _ns3__GetChallengeById
{
public:
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 255; } /* = unique id SOAP_TYPE__ns3__GetChallengeById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeById() { _ns3__GetChallengeById::soap_default(NULL); }
	virtual ~_ns3__GetChallengeById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeByIdResponse
#define SOAP_TYPE__ns3__GetChallengeByIdResponse (256)
/* ns3:GetChallengeByIdResponse */
class SOAP_CMAC _ns3__GetChallengeByIdResponse
{
public:
	ns6__Challenge *GetChallengeByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Challenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 256; } /* = unique id SOAP_TYPE__ns3__GetChallengeByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeByIdResponse() { _ns3__GetChallengeByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesbyUserID
#define SOAP_TYPE__ns3__GetAllChallengesbyUserID (257)
/* ns3:GetAllChallengesbyUserID */
class SOAP_CMAC _ns3__GetAllChallengesbyUserID
{
public:
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 257; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesbyUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesbyUserID() { _ns3__GetAllChallengesbyUserID::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesbyUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesbyUserIDResponse
#define SOAP_TYPE__ns3__GetAllChallengesbyUserIDResponse (258)
/* ns3:GetAllChallengesbyUserIDResponse */
class SOAP_CMAC _ns3__GetAllChallengesbyUserIDResponse
{
public:
	class ns6__ArrayOfChallenge *GetAllChallengesbyUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 258; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesbyUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesbyUserIDResponse() { _ns3__GetAllChallengesbyUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesbyUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesforConsumer
#define SOAP_TYPE__ns3__GetAllChallengesforConsumer (259)
/* ns3:GetAllChallengesforConsumer */
class SOAP_CMAC _ns3__GetAllChallengesforConsumer
{
public:
	int *userID;	/* optional element of type xsd:int */
	int *subscribedstatus;	/* optional element of type xsd:int */
	int *challengeStatus;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 259; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesforConsumer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesforConsumer() { _ns3__GetAllChallengesforConsumer::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesforConsumer() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChallengesforConsumerResponse
#define SOAP_TYPE__ns3__GetAllChallengesforConsumerResponse (260)
/* ns3:GetAllChallengesforConsumerResponse */
class SOAP_CMAC _ns3__GetAllChallengesforConsumerResponse
{
public:
	ns6__ArrayOfChallenge *GetAllChallengesforConsumerResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfChallenge */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 260; } /* = unique id SOAP_TYPE__ns3__GetAllChallengesforConsumerResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChallengesforConsumerResponse() { _ns3__GetAllChallengesforConsumerResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChallengesforConsumerResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIsSubscribedStatus
#define SOAP_TYPE__ns3__GetIsSubscribedStatus (261)
/* ns3:GetIsSubscribedStatus */
class SOAP_CMAC _ns3__GetIsSubscribedStatus
{
public:
	int *UserID;	/* optional element of type xsd:int */
	int *ChallengeID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 261; } /* = unique id SOAP_TYPE__ns3__GetIsSubscribedStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIsSubscribedStatus() { _ns3__GetIsSubscribedStatus::soap_default(NULL); }
	virtual ~_ns3__GetIsSubscribedStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIsSubscribedStatusResponse
#define SOAP_TYPE__ns3__GetIsSubscribedStatusResponse (262)
/* ns3:GetIsSubscribedStatusResponse */
class SOAP_CMAC _ns3__GetIsSubscribedStatusResponse
{
public:
	int *GetIsSubscribedStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 262; } /* = unique id SOAP_TYPE__ns3__GetIsSubscribedStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIsSubscribedStatusResponse() { _ns3__GetIsSubscribedStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetIsSubscribedStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserNameByUserId
#define SOAP_TYPE__ns3__GetUserNameByUserId (263)
/* ns3:GetUserNameByUserId */
class SOAP_CMAC _ns3__GetUserNameByUserId
{
public:
	int *UserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 263; } /* = unique id SOAP_TYPE__ns3__GetUserNameByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserNameByUserId() { _ns3__GetUserNameByUserId::soap_default(NULL); }
	virtual ~_ns3__GetUserNameByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserNameByUserIdResponse
#define SOAP_TYPE__ns3__GetUserNameByUserIdResponse (264)
/* ns3:GetUserNameByUserIdResponse */
class SOAP_CMAC _ns3__GetUserNameByUserIdResponse
{
public:
	std::string *GetUserNameByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 264; } /* = unique id SOAP_TYPE__ns3__GetUserNameByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserNameByUserIdResponse() { _ns3__GetUserNameByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserNameByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeNameStatus
#define SOAP_TYPE__ns3__GetChallengeNameStatus (265)
/* ns3:GetChallengeNameStatus */
class SOAP_CMAC _ns3__GetChallengeNameStatus
{
public:
	std::string *challengeName;	/* optional element of type xsd:string */
	std::string *OrganizationId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 265; } /* = unique id SOAP_TYPE__ns3__GetChallengeNameStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeNameStatus() { _ns3__GetChallengeNameStatus::soap_default(NULL); }
	virtual ~_ns3__GetChallengeNameStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeNameStatusResponse
#define SOAP_TYPE__ns3__GetChallengeNameStatusResponse (266)
/* ns3:GetChallengeNameStatusResponse */
class SOAP_CMAC _ns3__GetChallengeNameStatusResponse
{
public:
	bool *GetChallengeNameStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 266; } /* = unique id SOAP_TYPE__ns3__GetChallengeNameStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeNameStatusResponse() { _ns3__GetChallengeNameStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeNameStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllSubsriptionsbyId
#define SOAP_TYPE__ns3__GetAllSubsriptionsbyId (267)
/* ns3:GetAllSubsriptionsbyId */
class SOAP_CMAC _ns3__GetAllSubsriptionsbyId
{
public:
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 267; } /* = unique id SOAP_TYPE__ns3__GetAllSubsriptionsbyId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllSubsriptionsbyId() { _ns3__GetAllSubsriptionsbyId::soap_default(NULL); }
	virtual ~_ns3__GetAllSubsriptionsbyId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllSubsriptionsbyIdResponse
#define SOAP_TYPE__ns3__GetAllSubsriptionsbyIdResponse (268)
/* ns3:GetAllSubsriptionsbyIdResponse */
class SOAP_CMAC _ns3__GetAllSubsriptionsbyIdResponse
{
public:
	class ns6__Challenge_USCORESubscriptions *GetAllSubsriptionsbyIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Challenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 268; } /* = unique id SOAP_TYPE__ns3__GetAllSubsriptionsbyIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllSubsriptionsbyIdResponse() { _ns3__GetAllSubsriptionsbyIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllSubsriptionsbyIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateChallengesSubscription
#define SOAP_TYPE__ns3__CreateChallengesSubscription (269)
/* ns3:CreateChallengesSubscription */
class SOAP_CMAC _ns3__CreateChallengesSubscription
{
public:
	ns6__Challenge_USCORESubscriptions *challengeSubDetails;	/* optional element of type ns6:Challenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 269; } /* = unique id SOAP_TYPE__ns3__CreateChallengesSubscription */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateChallengesSubscription() { _ns3__CreateChallengesSubscription::soap_default(NULL); }
	virtual ~_ns3__CreateChallengesSubscription() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateChallengesSubscriptionResponse
#define SOAP_TYPE__ns3__CreateChallengesSubscriptionResponse (270)
/* ns3:CreateChallengesSubscriptionResponse */
class SOAP_CMAC _ns3__CreateChallengesSubscriptionResponse
{
public:
	ns6__Challenge_USCORESubscriptions *CreateChallengesSubscriptionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Challenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 270; } /* = unique id SOAP_TYPE__ns3__CreateChallengesSubscriptionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateChallengesSubscriptionResponse() { _ns3__CreateChallengesSubscriptionResponse::soap_default(NULL); }
	virtual ~_ns3__CreateChallengesSubscriptionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateChallengesSubscription
#define SOAP_TYPE__ns3__UpdateChallengesSubscription (271)
/* ns3:UpdateChallengesSubscription */
class SOAP_CMAC _ns3__UpdateChallengesSubscription
{
public:
	ns6__Challenge_USCORESubscriptions *challengeSubDetails;	/* optional element of type ns6:Challenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 271; } /* = unique id SOAP_TYPE__ns3__UpdateChallengesSubscription */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateChallengesSubscription() { _ns3__UpdateChallengesSubscription::soap_default(NULL); }
	virtual ~_ns3__UpdateChallengesSubscription() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateChallengesSubscriptionResponse
#define SOAP_TYPE__ns3__UpdateChallengesSubscriptionResponse (272)
/* ns3:UpdateChallengesSubscriptionResponse */
class SOAP_CMAC _ns3__UpdateChallengesSubscriptionResponse
{
public:
	bool *UpdateChallengesSubscriptionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 272; } /* = unique id SOAP_TYPE__ns3__UpdateChallengesSubscriptionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateChallengesSubscriptionResponse() { _ns3__UpdateChallengesSubscriptionResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateChallengesSubscriptionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeSubscriptionById
#define SOAP_TYPE__ns3__GetChallengeSubscriptionById (273)
/* ns3:GetChallengeSubscriptionById */
class SOAP_CMAC _ns3__GetChallengeSubscriptionById
{
public:
	int *userID;	/* optional element of type xsd:int */
	int *challengeId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 273; } /* = unique id SOAP_TYPE__ns3__GetChallengeSubscriptionById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeSubscriptionById() { _ns3__GetChallengeSubscriptionById::soap_default(NULL); }
	virtual ~_ns3__GetChallengeSubscriptionById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetChallengeSubscriptionByIdResponse
#define SOAP_TYPE__ns3__GetChallengeSubscriptionByIdResponse (274)
/* ns3:GetChallengeSubscriptionByIdResponse */
class SOAP_CMAC _ns3__GetChallengeSubscriptionByIdResponse
{
public:
	ns6__Challenge_USCORESubscriptions *GetChallengeSubscriptionByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Challenge_Subscriptions */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 274; } /* = unique id SOAP_TYPE__ns3__GetChallengeSubscriptionByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetChallengeSubscriptionByIdResponse() { _ns3__GetChallengeSubscriptionByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetChallengeSubscriptionByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIDStatus
#define SOAP_TYPE__ns3__GetUserIDStatus (275)
/* ns3:GetUserIDStatus */
class SOAP_CMAC _ns3__GetUserIDStatus
{
public:
	int *UserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 275; } /* = unique id SOAP_TYPE__ns3__GetUserIDStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIDStatus() { _ns3__GetUserIDStatus::soap_default(NULL); }
	virtual ~_ns3__GetUserIDStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIDStatusResponse
#define SOAP_TYPE__ns3__GetUserIDStatusResponse (276)
/* ns3:GetUserIDStatusResponse */
class SOAP_CMAC _ns3__GetUserIDStatusResponse
{
public:
	bool *GetUserIDStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 276; } /* = unique id SOAP_TYPE__ns3__GetUserIDStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIDStatusResponse() { _ns3__GetUserIDStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserIDStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIDSubscriptionStatus
#define SOAP_TYPE__ns3__GetUserIDSubscriptionStatus (277)
/* ns3:GetUserIDSubscriptionStatus */
class SOAP_CMAC _ns3__GetUserIDSubscriptionStatus
{
public:
	int *UserID;	/* optional element of type xsd:int */
	int *challengeID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 277; } /* = unique id SOAP_TYPE__ns3__GetUserIDSubscriptionStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIDSubscriptionStatus() { _ns3__GetUserIDSubscriptionStatus::soap_default(NULL); }
	virtual ~_ns3__GetUserIDSubscriptionStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIDSubscriptionStatusResponse
#define SOAP_TYPE__ns3__GetUserIDSubscriptionStatusResponse (278)
/* ns3:GetUserIDSubscriptionStatusResponse */
class SOAP_CMAC _ns3__GetUserIDSubscriptionStatusResponse
{
public:
	bool *GetUserIDSubscriptionStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 278; } /* = unique id SOAP_TYPE__ns3__GetUserIDSubscriptionStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIDSubscriptionStatusResponse() { _ns3__GetUserIDSubscriptionStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserIDSubscriptionStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateHealthProfile
#define SOAP_TYPE__ns3__CreateHealthProfile (279)
/* ns3:CreateHealthProfile */
class SOAP_CMAC _ns3__CreateHealthProfile
{
public:
	class ns6__User_USCOREHealth_USCOREProfile *userHealthMasterDetails;	/* optional element of type ns6:User_Health_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 279; } /* = unique id SOAP_TYPE__ns3__CreateHealthProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateHealthProfile() { _ns3__CreateHealthProfile::soap_default(NULL); }
	virtual ~_ns3__CreateHealthProfile() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateHealthProfileResponse
#define SOAP_TYPE__ns3__CreateHealthProfileResponse (280)
/* ns3:CreateHealthProfileResponse */
class SOAP_CMAC _ns3__CreateHealthProfileResponse
{
public:
	ns6__User_USCOREHealth_USCOREProfile *CreateHealthProfileResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Health_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 280; } /* = unique id SOAP_TYPE__ns3__CreateHealthProfileResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateHealthProfileResponse() { _ns3__CreateHealthProfileResponse::soap_default(NULL); }
	virtual ~_ns3__CreateHealthProfileResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateHealthProfile
#define SOAP_TYPE__ns3__UpdateHealthProfile (281)
/* ns3:UpdateHealthProfile */
class SOAP_CMAC _ns3__UpdateHealthProfile
{
public:
	ns6__User_USCOREHealth_USCOREProfile *userHealthMasterDetails;	/* optional element of type ns6:User_Health_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 281; } /* = unique id SOAP_TYPE__ns3__UpdateHealthProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateHealthProfile() { _ns3__UpdateHealthProfile::soap_default(NULL); }
	virtual ~_ns3__UpdateHealthProfile() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateHealthProfileResponse
#define SOAP_TYPE__ns3__UpdateHealthProfileResponse (282)
/* ns3:UpdateHealthProfileResponse */
class SOAP_CMAC _ns3__UpdateHealthProfileResponse
{
public:
	bool *UpdateHealthProfileResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 282; } /* = unique id SOAP_TYPE__ns3__UpdateHealthProfileResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateHealthProfileResponse() { _ns3__UpdateHealthProfileResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateHealthProfileResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthProfileByUserId
#define SOAP_TYPE__ns3__GetHealthProfileByUserId (283)
/* ns3:GetHealthProfileByUserId */
class SOAP_CMAC _ns3__GetHealthProfileByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 283; } /* = unique id SOAP_TYPE__ns3__GetHealthProfileByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthProfileByUserId() { _ns3__GetHealthProfileByUserId::soap_default(NULL); }
	virtual ~_ns3__GetHealthProfileByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthProfileByUserIdResponse
#define SOAP_TYPE__ns3__GetHealthProfileByUserIdResponse (284)
/* ns3:GetHealthProfileByUserIdResponse */
class SOAP_CMAC _ns3__GetHealthProfileByUserIdResponse
{
public:
	ns6__User_USCOREHealth_USCOREProfile *GetHealthProfileByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Health_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 284; } /* = unique id SOAP_TYPE__ns3__GetHealthProfileByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthProfileByUserIdResponse() { _ns3__GetHealthProfileByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetHealthProfileByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateHealthCondition
#define SOAP_TYPE__ns3__CreateHealthCondition (285)
/* ns3:CreateHealthCondition */
class SOAP_CMAC _ns3__CreateHealthCondition
{
public:
	ns6__User_USCOREHealth_USCORECondition *userHealthConditionDetails;	/* optional element of type ns6:User_Health_Condition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 285; } /* = unique id SOAP_TYPE__ns3__CreateHealthCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateHealthCondition() { _ns3__CreateHealthCondition::soap_default(NULL); }
	virtual ~_ns3__CreateHealthCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateHealthConditionResponse
#define SOAP_TYPE__ns3__CreateHealthConditionResponse (286)
/* ns3:CreateHealthConditionResponse */
class SOAP_CMAC _ns3__CreateHealthConditionResponse
{
public:
	ns6__User_USCOREHealth_USCORECondition *CreateHealthConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Health_Condition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 286; } /* = unique id SOAP_TYPE__ns3__CreateHealthConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateHealthConditionResponse() { _ns3__CreateHealthConditionResponse::soap_default(NULL); }
	virtual ~_ns3__CreateHealthConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateHealthCondition
#define SOAP_TYPE__ns3__UpdateHealthCondition (287)
/* ns3:UpdateHealthCondition */
class SOAP_CMAC _ns3__UpdateHealthCondition
{
public:
	ns6__User_USCOREHealth_USCORECondition *userHealthCondition;	/* optional element of type ns6:User_Health_Condition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 287; } /* = unique id SOAP_TYPE__ns3__UpdateHealthCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateHealthCondition() { _ns3__UpdateHealthCondition::soap_default(NULL); }
	virtual ~_ns3__UpdateHealthCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateHealthConditionResponse
#define SOAP_TYPE__ns3__UpdateHealthConditionResponse (288)
/* ns3:UpdateHealthConditionResponse */
class SOAP_CMAC _ns3__UpdateHealthConditionResponse
{
public:
	bool *UpdateHealthConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 288; } /* = unique id SOAP_TYPE__ns3__UpdateHealthConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateHealthConditionResponse() { _ns3__UpdateHealthConditionResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateHealthConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateGoal
#define SOAP_TYPE__ns3__CreateGoal (289)
/* ns3:CreateGoal */
class SOAP_CMAC _ns3__CreateGoal
{
public:
	ns6__User_USCOREKeepWatch *goalsDetails;	/* optional element of type ns6:User_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 289; } /* = unique id SOAP_TYPE__ns3__CreateGoal */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateGoal() { _ns3__CreateGoal::soap_default(NULL); }
	virtual ~_ns3__CreateGoal() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateGoalResponse
#define SOAP_TYPE__ns3__CreateGoalResponse (290)
/* ns3:CreateGoalResponse */
class SOAP_CMAC _ns3__CreateGoalResponse
{
public:
	ns6__User_USCOREKeepWatch *CreateGoalResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 290; } /* = unique id SOAP_TYPE__ns3__CreateGoalResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateGoalResponse() { _ns3__CreateGoalResponse::soap_default(NULL); }
	virtual ~_ns3__CreateGoalResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateGoal
#define SOAP_TYPE__ns3__UpdateGoal (291)
/* ns3:UpdateGoal */
class SOAP_CMAC _ns3__UpdateGoal
{
public:
	ns6__User_USCOREKeepWatch *objGoal;	/* optional element of type ns6:User_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 291; } /* = unique id SOAP_TYPE__ns3__UpdateGoal */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateGoal() { _ns3__UpdateGoal::soap_default(NULL); }
	virtual ~_ns3__UpdateGoal() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateGoalResponse
#define SOAP_TYPE__ns3__UpdateGoalResponse (292)
/* ns3:UpdateGoalResponse */
class SOAP_CMAC _ns3__UpdateGoalResponse
{
public:
	bool *UpdateGoalResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 292; } /* = unique id SOAP_TYPE__ns3__UpdateGoalResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateGoalResponse() { _ns3__UpdateGoalResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateGoalResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllGoalsByUserId
#define SOAP_TYPE__ns3__GetAllGoalsByUserId (293)
/* ns3:GetAllGoalsByUserId */
class SOAP_CMAC _ns3__GetAllGoalsByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 293; } /* = unique id SOAP_TYPE__ns3__GetAllGoalsByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllGoalsByUserId() { _ns3__GetAllGoalsByUserId::soap_default(NULL); }
	virtual ~_ns3__GetAllGoalsByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllGoalsByUserIdResponse
#define SOAP_TYPE__ns3__GetAllGoalsByUserIdResponse (294)
/* ns3:GetAllGoalsByUserIdResponse */
class SOAP_CMAC _ns3__GetAllGoalsByUserIdResponse
{
public:
	class ns6__ArrayOfUser_USCOREKeepWatch *GetAllGoalsByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 294; } /* = unique id SOAP_TYPE__ns3__GetAllGoalsByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllGoalsByUserIdResponse() { _ns3__GetAllGoalsByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllGoalsByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalById
#define SOAP_TYPE__ns3__GetGoalById (295)
/* ns3:GetGoalById */
class SOAP_CMAC _ns3__GetGoalById
{
public:
	int *goalId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 295; } /* = unique id SOAP_TYPE__ns3__GetGoalById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalById() { _ns3__GetGoalById::soap_default(NULL); }
	virtual ~_ns3__GetGoalById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetGoalByIdResponse
#define SOAP_TYPE__ns3__GetGoalByIdResponse (296)
/* ns3:GetGoalByIdResponse */
class SOAP_CMAC _ns3__GetGoalByIdResponse
{
public:
	ns6__User_USCOREKeepWatch *GetGoalByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_KeepWatch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 296; } /* = unique id SOAP_TYPE__ns3__GetGoalByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetGoalByIdResponse() { _ns3__GetGoalByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetGoalByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthConditionById
#define SOAP_TYPE__ns3__GetHealthConditionById (297)
/* ns3:GetHealthConditionById */
class SOAP_CMAC _ns3__GetHealthConditionById
{
public:
	int *healthConditionId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 297; } /* = unique id SOAP_TYPE__ns3__GetHealthConditionById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthConditionById() { _ns3__GetHealthConditionById::soap_default(NULL); }
	virtual ~_ns3__GetHealthConditionById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetHealthConditionByIdResponse
#define SOAP_TYPE__ns3__GetHealthConditionByIdResponse (298)
/* ns3:GetHealthConditionByIdResponse */
class SOAP_CMAC _ns3__GetHealthConditionByIdResponse
{
public:
	ns6__User_USCOREHealth_USCORECondition *GetHealthConditionByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Health_Condition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 298; } /* = unique id SOAP_TYPE__ns3__GetHealthConditionByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetHealthConditionByIdResponse() { _ns3__GetHealthConditionByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetHealthConditionByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDropDownValuesByName
#define SOAP_TYPE__ns3__GetDropDownValuesByName (299)
/* ns3:GetDropDownValuesByName */
class SOAP_CMAC _ns3__GetDropDownValuesByName
{
public:
	std::string *dropDownName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 299; } /* = unique id SOAP_TYPE__ns3__GetDropDownValuesByName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDropDownValuesByName() { _ns3__GetDropDownValuesByName::soap_default(NULL); }
	virtual ~_ns3__GetDropDownValuesByName() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDropDownValuesByNameResponse
#define SOAP_TYPE__ns3__GetDropDownValuesByNameResponse (300)
/* ns3:GetDropDownValuesByNameResponse */
class SOAP_CMAC _ns3__GetDropDownValuesByNameResponse
{
public:
	class ns6__ArrayOfCommonEnumeratedValue *GetDropDownValuesByNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfCommonEnumeratedValue */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 300; } /* = unique id SOAP_TYPE__ns3__GetDropDownValuesByNameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDropDownValuesByNameResponse() { _ns3__GetDropDownValuesByNameResponse::soap_default(NULL); }
	virtual ~_ns3__GetDropDownValuesByNameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDropDownTextNameById
#define SOAP_TYPE__ns3__GetDropDownTextNameById (301)
/* ns3:GetDropDownTextNameById */
class SOAP_CMAC _ns3__GetDropDownTextNameById
{
public:
	int *dropdownValue;	/* optional element of type xsd:int */
	std::string *dropdownName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 301; } /* = unique id SOAP_TYPE__ns3__GetDropDownTextNameById */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDropDownTextNameById() { _ns3__GetDropDownTextNameById::soap_default(NULL); }
	virtual ~_ns3__GetDropDownTextNameById() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDropDownTextNameByIdResponse
#define SOAP_TYPE__ns3__GetDropDownTextNameByIdResponse (302)
/* ns3:GetDropDownTextNameByIdResponse */
class SOAP_CMAC _ns3__GetDropDownTextNameByIdResponse
{
public:
	class ns6__CommonEnumeratedValue *GetDropDownTextNameByIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:CommonEnumeratedValue */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 302; } /* = unique id SOAP_TYPE__ns3__GetDropDownTextNameByIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDropDownTextNameByIdResponse() { _ns3__GetDropDownTextNameByIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetDropDownTextNameByIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMeasurementValues
#define SOAP_TYPE__ns3__GetMeasurementValues (303)
/* ns3:GetMeasurementValues */
class SOAP_CMAC _ns3__GetMeasurementValues
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 303; } /* = unique id SOAP_TYPE__ns3__GetMeasurementValues */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMeasurementValues() { _ns3__GetMeasurementValues::soap_default(NULL); }
	virtual ~_ns3__GetMeasurementValues() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMeasurementValuesResponse
#define SOAP_TYPE__ns3__GetMeasurementValuesResponse (304)
/* ns3:GetMeasurementValuesResponse */
class SOAP_CMAC _ns3__GetMeasurementValuesResponse
{
public:
	class ns6__ArrayOfDefined_USCOREReadings *GetMeasurementValuesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfDefined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 304; } /* = unique id SOAP_TYPE__ns3__GetMeasurementValuesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMeasurementValuesResponse() { _ns3__GetMeasurementValuesResponse::soap_default(NULL); }
	virtual ~_ns3__GetMeasurementValuesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIdByMembershipId
#define SOAP_TYPE__ns3__GetUserIdByMembershipId (305)
/* ns3:GetUserIdByMembershipId */
class SOAP_CMAC _ns3__GetUserIdByMembershipId
{
public:
	std::string *membershipId;	/* optional element of type ns5:guid */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 305; } /* = unique id SOAP_TYPE__ns3__GetUserIdByMembershipId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIdByMembershipId() { _ns3__GetUserIdByMembershipId::soap_default(NULL); }
	virtual ~_ns3__GetUserIdByMembershipId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserIdByMembershipIdResponse
#define SOAP_TYPE__ns3__GetUserIdByMembershipIdResponse (306)
/* ns3:GetUserIdByMembershipIdResponse */
class SOAP_CMAC _ns3__GetUserIdByMembershipIdResponse
{
public:
	ns6__User_USCOREMaster *GetUserIdByMembershipIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 306; } /* = unique id SOAP_TYPE__ns3__GetUserIdByMembershipIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserIdByMembershipIdResponse() { _ns3__GetUserIdByMembershipIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserIdByMembershipIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrgIdByUserId
#define SOAP_TYPE__ns3__GetOrgIdByUserId (307)
/* ns3:GetOrgIdByUserId */
class SOAP_CMAC _ns3__GetOrgIdByUserId
{
public:
	int *UserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 307; } /* = unique id SOAP_TYPE__ns3__GetOrgIdByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrgIdByUserId() { _ns3__GetOrgIdByUserId::soap_default(NULL); }
	virtual ~_ns3__GetOrgIdByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrgIdByUserIdResponse
#define SOAP_TYPE__ns3__GetOrgIdByUserIdResponse (308)
/* ns3:GetOrgIdByUserIdResponse */
class SOAP_CMAC _ns3__GetOrgIdByUserIdResponse
{
public:
	ns6__User_USCORECompany_USCOREMapping *GetOrgIdByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Company_Mapping */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 308; } /* = unique id SOAP_TYPE__ns3__GetOrgIdByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrgIdByUserIdResponse() { _ns3__GetOrgIdByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrgIdByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserNameByMembershipId
#define SOAP_TYPE__ns3__GetUserNameByMembershipId (309)
/* ns3:GetUserNameByMembershipId */
class SOAP_CMAC _ns3__GetUserNameByMembershipId
{
public:
	std::string *membershipId;	/* optional element of type ns5:guid */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 309; } /* = unique id SOAP_TYPE__ns3__GetUserNameByMembershipId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserNameByMembershipId() { _ns3__GetUserNameByMembershipId::soap_default(NULL); }
	virtual ~_ns3__GetUserNameByMembershipId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserNameByMembershipIdResponse
#define SOAP_TYPE__ns3__GetUserNameByMembershipIdResponse (310)
/* ns3:GetUserNameByMembershipIdResponse */
class SOAP_CMAC _ns3__GetUserNameByMembershipIdResponse
{
public:
	std::string *GetUserNameByMembershipIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 310; } /* = unique id SOAP_TYPE__ns3__GetUserNameByMembershipIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserNameByMembershipIdResponse() { _ns3__GetUserNameByMembershipIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserNameByMembershipIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUserProfile
#define SOAP_TYPE__ns3__CreateUserProfile (311)
/* ns3:CreateUserProfile */
class SOAP_CMAC _ns3__CreateUserProfile
{
public:
	class ns6__User_USCOREProfile *userProfile;	/* optional element of type ns6:User_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 311; } /* = unique id SOAP_TYPE__ns3__CreateUserProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUserProfile() { _ns3__CreateUserProfile::soap_default(NULL); }
	virtual ~_ns3__CreateUserProfile() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateUserProfileResponse
#define SOAP_TYPE__ns3__CreateUserProfileResponse (312)
/* ns3:CreateUserProfileResponse */
class SOAP_CMAC _ns3__CreateUserProfileResponse
{
public:
	ns6__User_USCOREProfile *CreateUserProfileResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 312; } /* = unique id SOAP_TYPE__ns3__CreateUserProfileResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateUserProfileResponse() { _ns3__CreateUserProfileResponse::soap_default(NULL); }
	virtual ~_ns3__CreateUserProfileResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserProfileByUserId
#define SOAP_TYPE__ns3__GetUserProfileByUserId (313)
/* ns3:GetUserProfileByUserId */
class SOAP_CMAC _ns3__GetUserProfileByUserId
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 313; } /* = unique id SOAP_TYPE__ns3__GetUserProfileByUserId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserProfileByUserId() { _ns3__GetUserProfileByUserId::soap_default(NULL); }
	virtual ~_ns3__GetUserProfileByUserId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetUserProfileByUserIdResponse
#define SOAP_TYPE__ns3__GetUserProfileByUserIdResponse (314)
/* ns3:GetUserProfileByUserIdResponse */
class SOAP_CMAC _ns3__GetUserProfileByUserIdResponse
{
public:
	ns6__User_USCOREProfile *GetUserProfileByUserIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 314; } /* = unique id SOAP_TYPE__ns3__GetUserProfileByUserIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetUserProfileByUserIdResponse() { _ns3__GetUserProfileByUserIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetUserProfileByUserIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateUserProfile
#define SOAP_TYPE__ns3__UpdateUserProfile (315)
/* ns3:UpdateUserProfile */
class SOAP_CMAC _ns3__UpdateUserProfile
{
public:
	ns6__User_USCOREProfile *userProfile;	/* optional element of type ns6:User_Profile */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 315; } /* = unique id SOAP_TYPE__ns3__UpdateUserProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateUserProfile() { _ns3__UpdateUserProfile::soap_default(NULL); }
	virtual ~_ns3__UpdateUserProfile() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateUserProfileResponse
#define SOAP_TYPE__ns3__UpdateUserProfileResponse (316)
/* ns3:UpdateUserProfileResponse */
class SOAP_CMAC _ns3__UpdateUserProfileResponse
{
public:
	bool *UpdateUserProfileResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 316; } /* = unique id SOAP_TYPE__ns3__UpdateUserProfileResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateUserProfileResponse() { _ns3__UpdateUserProfileResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateUserProfileResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitAnnouncement
#define SOAP_TYPE__ns3__SubmitAnnouncement (317)
/* ns3:SubmitAnnouncement */
class SOAP_CMAC _ns3__SubmitAnnouncement
{
public:
	ns6__Announcement *announcement;	/* optional element of type ns6:Announcement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 317; } /* = unique id SOAP_TYPE__ns3__SubmitAnnouncement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitAnnouncement() { _ns3__SubmitAnnouncement::soap_default(NULL); }
	virtual ~_ns3__SubmitAnnouncement() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitAnnouncementResponse
#define SOAP_TYPE__ns3__SubmitAnnouncementResponse (318)
/* ns3:SubmitAnnouncementResponse */
class SOAP_CMAC _ns3__SubmitAnnouncementResponse
{
public:
	ns6__Announcement *SubmitAnnouncementResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Announcement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 318; } /* = unique id SOAP_TYPE__ns3__SubmitAnnouncementResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitAnnouncementResponse() { _ns3__SubmitAnnouncementResponse::soap_default(NULL); }
	virtual ~_ns3__SubmitAnnouncementResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitOrganization
#define SOAP_TYPE__ns3__SubmitOrganization (319)
/* ns3:SubmitOrganization */
class SOAP_CMAC _ns3__SubmitOrganization
{
public:
	ns6__Organization_USCOREMaster *organizationDetails;	/* optional element of type ns6:Organization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 319; } /* = unique id SOAP_TYPE__ns3__SubmitOrganization */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitOrganization() { _ns3__SubmitOrganization::soap_default(NULL); }
	virtual ~_ns3__SubmitOrganization() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitOrganizationResponse
#define SOAP_TYPE__ns3__SubmitOrganizationResponse (320)
/* ns3:SubmitOrganizationResponse */
class SOAP_CMAC _ns3__SubmitOrganizationResponse
{
public:
	ns6__Organization_USCOREMaster *SubmitOrganizationResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 320; } /* = unique id SOAP_TYPE__ns3__SubmitOrganizationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitOrganizationResponse() { _ns3__SubmitOrganizationResponse::soap_default(NULL); }
	virtual ~_ns3__SubmitOrganizationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationDetails
#define SOAP_TYPE__ns3__GetOrganizationDetails (321)
/* ns3:GetOrganizationDetails */
class SOAP_CMAC _ns3__GetOrganizationDetails
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 321; } /* = unique id SOAP_TYPE__ns3__GetOrganizationDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationDetails() { _ns3__GetOrganizationDetails::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetOrganizationDetailsResponse
#define SOAP_TYPE__ns3__GetOrganizationDetailsResponse (322)
/* ns3:GetOrganizationDetailsResponse */
class SOAP_CMAC _ns3__GetOrganizationDetailsResponse
{
public:
	class ns6__ArrayOfOrganization_USCOREMaster *GetOrganizationDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfOrganization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 322; } /* = unique id SOAP_TYPE__ns3__GetOrganizationDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetOrganizationDetailsResponse() { _ns3__GetOrganizationDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__GetOrganizationDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyID
#define SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyID (323)
/* ns3:UpdateAnnouncementDetailsbyID */
class SOAP_CMAC _ns3__UpdateAnnouncementDetailsbyID
{
public:
	ns6__Announcement *announcement;	/* optional element of type ns6:Announcement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 323; } /* = unique id SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateAnnouncementDetailsbyID() { _ns3__UpdateAnnouncementDetailsbyID::soap_default(NULL); }
	virtual ~_ns3__UpdateAnnouncementDetailsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyIDResponse
#define SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyIDResponse (324)
/* ns3:UpdateAnnouncementDetailsbyIDResponse */
class SOAP_CMAC _ns3__UpdateAnnouncementDetailsbyIDResponse
{
public:
	bool *UpdateAnnouncementDetailsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 324; } /* = unique id SOAP_TYPE__ns3__UpdateAnnouncementDetailsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateAnnouncementDetailsbyIDResponse() { _ns3__UpdateAnnouncementDetailsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateAnnouncementDetailsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationDetails
#define SOAP_TYPE__ns3__UpdateOrganizationDetails (325)
/* ns3:UpdateOrganizationDetails */
class SOAP_CMAC _ns3__UpdateOrganizationDetails
{
public:
	ns6__Organization_USCOREMaster *orgDetails;	/* optional element of type ns6:Organization_Master */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 325; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationDetails() { _ns3__UpdateOrganizationDetails::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateOrganizationDetailsResponse
#define SOAP_TYPE__ns3__UpdateOrganizationDetailsResponse (326)
/* ns3:UpdateOrganizationDetailsResponse */
class SOAP_CMAC _ns3__UpdateOrganizationDetailsResponse
{
public:
	bool *UpdateOrganizationDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 326; } /* = unique id SOAP_TYPE__ns3__UpdateOrganizationDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateOrganizationDetailsResponse() { _ns3__UpdateOrganizationDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateOrganizationDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateLocationDetails
#define SOAP_TYPE__ns3__UpdateLocationDetails (327)
/* ns3:UpdateLocationDetails */
class SOAP_CMAC _ns3__UpdateLocationDetails
{
public:
	class ns6__Organization_USCORELocations *locationDetails;	/* optional element of type ns6:Organization_Locations */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 327; } /* = unique id SOAP_TYPE__ns3__UpdateLocationDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateLocationDetails() { _ns3__UpdateLocationDetails::soap_default(NULL); }
	virtual ~_ns3__UpdateLocationDetails() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateLocationDetailsResponse
#define SOAP_TYPE__ns3__UpdateLocationDetailsResponse (328)
/* ns3:UpdateLocationDetailsResponse */
class SOAP_CMAC _ns3__UpdateLocationDetailsResponse
{
public:
	bool *UpdateLocationDetailsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 328; } /* = unique id SOAP_TYPE__ns3__UpdateLocationDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateLocationDetailsResponse() { _ns3__UpdateLocationDetailsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateLocationDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitOrgnizationLocation
#define SOAP_TYPE__ns3__SubmitOrgnizationLocation (329)
/* ns3:SubmitOrgnizationLocation */
class SOAP_CMAC _ns3__SubmitOrgnizationLocation
{
public:
	ns6__Organization_USCORELocations *organization_USCORELocation;	/* optional element of type ns6:Organization_Locations */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 329; } /* = unique id SOAP_TYPE__ns3__SubmitOrgnizationLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitOrgnizationLocation() { _ns3__SubmitOrgnizationLocation::soap_default(NULL); }
	virtual ~_ns3__SubmitOrgnizationLocation() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SubmitOrgnizationLocationResponse
#define SOAP_TYPE__ns3__SubmitOrgnizationLocationResponse (330)
/* ns3:SubmitOrgnizationLocationResponse */
class SOAP_CMAC _ns3__SubmitOrgnizationLocationResponse
{
public:
	ns6__Organization_USCORELocations *SubmitOrgnizationLocationResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Locations */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 330; } /* = unique id SOAP_TYPE__ns3__SubmitOrgnizationLocationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SubmitOrgnizationLocationResponse() { _ns3__SubmitOrgnizationLocationResponse::soap_default(NULL); }
	virtual ~_ns3__SubmitOrgnizationLocationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllAnnouncementbyOrgID
#define SOAP_TYPE__ns3__GetAllAnnouncementbyOrgID (331)
/* ns3:GetAllAnnouncementbyOrgID */
class SOAP_CMAC _ns3__GetAllAnnouncementbyOrgID
{
public:
	int *orgID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 331; } /* = unique id SOAP_TYPE__ns3__GetAllAnnouncementbyOrgID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllAnnouncementbyOrgID() { _ns3__GetAllAnnouncementbyOrgID::soap_default(NULL); }
	virtual ~_ns3__GetAllAnnouncementbyOrgID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllAnnouncementbyOrgIDResponse
#define SOAP_TYPE__ns3__GetAllAnnouncementbyOrgIDResponse (332)
/* ns3:GetAllAnnouncementbyOrgIDResponse */
class SOAP_CMAC _ns3__GetAllAnnouncementbyOrgIDResponse
{
public:
	class ns6__ArrayOfAnnouncement *GetAllAnnouncementbyOrgIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfAnnouncement */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 332; } /* = unique id SOAP_TYPE__ns3__GetAllAnnouncementbyOrgIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllAnnouncementbyOrgIDResponse() { _ns3__GetAllAnnouncementbyOrgIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllAnnouncementbyOrgIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateReadings
#define SOAP_TYPE__ns3__CreateReadings (333)
/* ns3:CreateReadings */
class SOAP_CMAC _ns3__CreateReadings
{
public:
	class ns6__Defined_USCOREReadings *readings;	/* optional element of type ns6:Defined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 333; } /* = unique id SOAP_TYPE__ns3__CreateReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateReadings() { _ns3__CreateReadings::soap_default(NULL); }
	virtual ~_ns3__CreateReadings() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateReadingsResponse
#define SOAP_TYPE__ns3__CreateReadingsResponse (334)
/* ns3:CreateReadingsResponse */
class SOAP_CMAC _ns3__CreateReadingsResponse
{
public:
	ns6__Defined_USCOREReadings *CreateReadingsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Defined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 334; } /* = unique id SOAP_TYPE__ns3__CreateReadingsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateReadingsResponse() { _ns3__CreateReadingsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateReadingsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadings
#define SOAP_TYPE__ns3__GetAllReadings (335)
/* ns3:GetAllReadings */
class SOAP_CMAC _ns3__GetAllReadings
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 335; } /* = unique id SOAP_TYPE__ns3__GetAllReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadings() { _ns3__GetAllReadings::soap_default(NULL); }
	virtual ~_ns3__GetAllReadings() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingsResponse
#define SOAP_TYPE__ns3__GetAllReadingsResponse (336)
/* ns3:GetAllReadingsResponse */
class SOAP_CMAC _ns3__GetAllReadingsResponse
{
public:
	ns6__ArrayOfDefined_USCOREReadings *GetAllReadingsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfDefined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 336; } /* = unique id SOAP_TYPE__ns3__GetAllReadingsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingsResponse() { _ns3__GetAllReadingsResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingsbyStatus
#define SOAP_TYPE__ns3__GetAllReadingsbyStatus (337)
/* ns3:GetAllReadingsbyStatus */
class SOAP_CMAC _ns3__GetAllReadingsbyStatus
{
public:
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 337; } /* = unique id SOAP_TYPE__ns3__GetAllReadingsbyStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingsbyStatus() { _ns3__GetAllReadingsbyStatus::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingsbyStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingsbyStatusResponse
#define SOAP_TYPE__ns3__GetAllReadingsbyStatusResponse (338)
/* ns3:GetAllReadingsbyStatusResponse */
class SOAP_CMAC _ns3__GetAllReadingsbyStatusResponse
{
public:
	ns6__ArrayOfDefined_USCOREReadings *GetAllReadingsbyStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfDefined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 338; } /* = unique id SOAP_TYPE__ns3__GetAllReadingsbyStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingsbyStatusResponse() { _ns3__GetAllReadingsbyStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingsbyStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingsbyID
#define SOAP_TYPE__ns3__GetAllReadingsbyID (339)
/* ns3:GetAllReadingsbyID */
class SOAP_CMAC _ns3__GetAllReadingsbyID
{
public:
	int *ReadID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 339; } /* = unique id SOAP_TYPE__ns3__GetAllReadingsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingsbyID() { _ns3__GetAllReadingsbyID::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllReadingsbyIDResponse
#define SOAP_TYPE__ns3__GetAllReadingsbyIDResponse (340)
/* ns3:GetAllReadingsbyIDResponse */
class SOAP_CMAC _ns3__GetAllReadingsbyIDResponse
{
public:
	ns6__Defined_USCOREReadings *GetAllReadingsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Defined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 340; } /* = unique id SOAP_TYPE__ns3__GetAllReadingsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllReadingsbyIDResponse() { _ns3__GetAllReadingsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllReadingsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateReadingDetailsbyID
#define SOAP_TYPE__ns3__UpdateReadingDetailsbyID (341)
/* ns3:UpdateReadingDetailsbyID */
class SOAP_CMAC _ns3__UpdateReadingDetailsbyID
{
public:
	ns6__Defined_USCOREReadings *readings;	/* optional element of type ns6:Defined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 341; } /* = unique id SOAP_TYPE__ns3__UpdateReadingDetailsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateReadingDetailsbyID() { _ns3__UpdateReadingDetailsbyID::soap_default(NULL); }
	virtual ~_ns3__UpdateReadingDetailsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateReadingDetailsbyIDResponse
#define SOAP_TYPE__ns3__UpdateReadingDetailsbyIDResponse (342)
/* ns3:UpdateReadingDetailsbyIDResponse */
class SOAP_CMAC _ns3__UpdateReadingDetailsbyIDResponse
{
public:
	bool *UpdateReadingDetailsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 342; } /* = unique id SOAP_TYPE__ns3__UpdateReadingDetailsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateReadingDetailsbyIDResponse() { _ns3__UpdateReadingDetailsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateReadingDetailsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChildReadingsbyID
#define SOAP_TYPE__ns3__GetAllChildReadingsbyID (343)
/* ns3:GetAllChildReadingsbyID */
class SOAP_CMAC _ns3__GetAllChildReadingsbyID
{
public:
	int *readingID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 343; } /* = unique id SOAP_TYPE__ns3__GetAllChildReadingsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChildReadingsbyID() { _ns3__GetAllChildReadingsbyID::soap_default(NULL); }
	virtual ~_ns3__GetAllChildReadingsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllChildReadingsbyIDResponse
#define SOAP_TYPE__ns3__GetAllChildReadingsbyIDResponse (344)
/* ns3:GetAllChildReadingsbyIDResponse */
class SOAP_CMAC _ns3__GetAllChildReadingsbyIDResponse
{
public:
	ns6__ArrayOfDefined_USCOREReadings *GetAllChildReadingsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfDefined_Readings */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 344; } /* = unique id SOAP_TYPE__ns3__GetAllChildReadingsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllChildReadingsbyIDResponse() { _ns3__GetAllChildReadingsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllChildReadingsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateReadingRecords
#define SOAP_TYPE__ns3__CreateReadingRecords (345)
/* ns3:CreateReadingRecords */
class SOAP_CMAC _ns3__CreateReadingRecords
{
public:
	class ns6__Reading_USCORERecords *readings;	/* optional element of type ns6:Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 345; } /* = unique id SOAP_TYPE__ns3__CreateReadingRecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateReadingRecords() { _ns3__CreateReadingRecords::soap_default(NULL); }
	virtual ~_ns3__CreateReadingRecords() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateReadingRecordsResponse
#define SOAP_TYPE__ns3__CreateReadingRecordsResponse (346)
/* ns3:CreateReadingRecordsResponse */
class SOAP_CMAC _ns3__CreateReadingRecordsResponse
{
public:
	ns6__Reading_USCORERecords *CreateReadingRecordsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 346; } /* = unique id SOAP_TYPE__ns3__CreateReadingRecordsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateReadingRecordsResponse() { _ns3__CreateReadingRecordsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateReadingRecordsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecords
#define SOAP_TYPE__ns3__GetReadingRecords (347)
/* ns3:GetReadingRecords */
class SOAP_CMAC _ns3__GetReadingRecords
{
public:
	int *readingID;	/* optional element of type xsd:int */
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 347; } /* = unique id SOAP_TYPE__ns3__GetReadingRecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecords() { _ns3__GetReadingRecords::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecords() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordsResponse
#define SOAP_TYPE__ns3__GetReadingRecordsResponse (348)
/* ns3:GetReadingRecordsResponse */
class SOAP_CMAC _ns3__GetReadingRecordsResponse
{
public:
	ns6__Reading_USCORERecords *GetReadingRecordsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 348; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordsResponse() { _ns3__GetReadingRecordsResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentID
#define SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentID (349)
/* ns3:GetReadingRecordByDateTimeAndParentID */
class SOAP_CMAC _ns3__GetReadingRecordByDateTimeAndParentID
{
public:
	std::string *readingTime;	/* optional element of type ns5:duration */
	time_t *readingDate;	/* optional element of type xsd:dateTime */
	int *parentId;	/* optional element of type xsd:int */
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 349; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordByDateTimeAndParentID() { _ns3__GetReadingRecordByDateTimeAndParentID::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordByDateTimeAndParentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentIDResponse
#define SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentIDResponse (350)
/* ns3:GetReadingRecordByDateTimeAndParentIDResponse */
class SOAP_CMAC _ns3__GetReadingRecordByDateTimeAndParentIDResponse
{
public:
	ns6__ArrayOfReadingNames *GetReadingRecordByDateTimeAndParentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfReadingNames */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 350; } /* = unique id SOAP_TYPE__ns3__GetReadingRecordByDateTimeAndParentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetReadingRecordByDateTimeAndParentIDResponse() { _ns3__GetReadingRecordByDateTimeAndParentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetReadingRecordByDateTimeAndParentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateReadingRecord
#define SOAP_TYPE__ns3__UpdateReadingRecord (351)
/* ns3:UpdateReadingRecord */
class SOAP_CMAC _ns3__UpdateReadingRecord
{
public:
	ns6__Reading_USCORERecords *readings;	/* optional element of type ns6:Reading_Records */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 351; } /* = unique id SOAP_TYPE__ns3__UpdateReadingRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateReadingRecord() { _ns3__UpdateReadingRecord::soap_default(NULL); }
	virtual ~_ns3__UpdateReadingRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateReadingRecordResponse
#define SOAP_TYPE__ns3__UpdateReadingRecordResponse (352)
/* ns3:UpdateReadingRecordResponse */
class SOAP_CMAC _ns3__UpdateReadingRecordResponse
{
public:
	bool *UpdateReadingRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 352; } /* = unique id SOAP_TYPE__ns3__UpdateReadingRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateReadingRecordResponse() { _ns3__UpdateReadingRecordResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateReadingRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateAllergies
#define SOAP_TYPE__ns3__CreateAllergies (353)
/* ns3:CreateAllergies */
class SOAP_CMAC _ns3__CreateAllergies
{
public:
	class ns6__User_USCOREAllergies *userAllergies;	/* optional element of type ns6:User_Allergies */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 353; } /* = unique id SOAP_TYPE__ns3__CreateAllergies */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateAllergies() { _ns3__CreateAllergies::soap_default(NULL); }
	virtual ~_ns3__CreateAllergies() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateAllergiesResponse
#define SOAP_TYPE__ns3__CreateAllergiesResponse (354)
/* ns3:CreateAllergiesResponse */
class SOAP_CMAC _ns3__CreateAllergiesResponse
{
public:
	ns6__User_USCOREAllergies *CreateAllergiesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Allergies */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 354; } /* = unique id SOAP_TYPE__ns3__CreateAllergiesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateAllergiesResponse() { _ns3__CreateAllergiesResponse::soap_default(NULL); }
	virtual ~_ns3__CreateAllergiesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateAllergies
#define SOAP_TYPE__ns3__UpdateAllergies (355)
/* ns3:UpdateAllergies */
class SOAP_CMAC _ns3__UpdateAllergies
{
public:
	ns6__User_USCOREAllergies *userAllergies;	/* optional element of type ns6:User_Allergies */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 355; } /* = unique id SOAP_TYPE__ns3__UpdateAllergies */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateAllergies() { _ns3__UpdateAllergies::soap_default(NULL); }
	virtual ~_ns3__UpdateAllergies() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateAllergiesResponse
#define SOAP_TYPE__ns3__UpdateAllergiesResponse (356)
/* ns3:UpdateAllergiesResponse */
class SOAP_CMAC _ns3__UpdateAllergiesResponse
{
public:
	bool *UpdateAllergiesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 356; } /* = unique id SOAP_TYPE__ns3__UpdateAllergiesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateAllergiesResponse() { _ns3__UpdateAllergiesResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateAllergiesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatus
#define SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatus (357)
/* ns3:GetAllergiesbyUserIDandStatus */
class SOAP_CMAC _ns3__GetAllergiesbyUserIDandStatus
{
public:
	int *userID;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 357; } /* = unique id SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergiesbyUserIDandStatus() { _ns3__GetAllergiesbyUserIDandStatus::soap_default(NULL); }
	virtual ~_ns3__GetAllergiesbyUserIDandStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatusResponse
#define SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatusResponse (358)
/* ns3:GetAllergiesbyUserIDandStatusResponse */
class SOAP_CMAC _ns3__GetAllergiesbyUserIDandStatusResponse
{
public:
	class ns6__ArrayOfUser_USCOREAllergies *GetAllergiesbyUserIDandStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Allergies */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 358; } /* = unique id SOAP_TYPE__ns3__GetAllergiesbyUserIDandStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergiesbyUserIDandStatusResponse() { _ns3__GetAllergiesbyUserIDandStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllergiesbyUserIDandStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergiesbyID
#define SOAP_TYPE__ns3__GetAllergiesbyID (359)
/* ns3:GetAllergiesbyID */
class SOAP_CMAC _ns3__GetAllergiesbyID
{
public:
	int *allergyID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 359; } /* = unique id SOAP_TYPE__ns3__GetAllergiesbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergiesbyID() { _ns3__GetAllergiesbyID::soap_default(NULL); }
	virtual ~_ns3__GetAllergiesbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllergiesbyIDResponse
#define SOAP_TYPE__ns3__GetAllergiesbyIDResponse (360)
/* ns3:GetAllergiesbyIDResponse */
class SOAP_CMAC _ns3__GetAllergiesbyIDResponse
{
public:
	ns6__User_USCOREAllergies *GetAllergiesbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Allergies */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 360; } /* = unique id SOAP_TYPE__ns3__GetAllergiesbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllergiesbyIDResponse() { _ns3__GetAllergiesbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllergiesbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateMedications
#define SOAP_TYPE__ns3__CreateMedications (361)
/* ns3:CreateMedications */
class SOAP_CMAC _ns3__CreateMedications
{
public:
	class ns6__User_USCOREMedications *userMedicationss;	/* optional element of type ns6:User_Medications */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 361; } /* = unique id SOAP_TYPE__ns3__CreateMedications */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateMedications() { _ns3__CreateMedications::soap_default(NULL); }
	virtual ~_ns3__CreateMedications() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateMedicationsResponse
#define SOAP_TYPE__ns3__CreateMedicationsResponse (362)
/* ns3:CreateMedicationsResponse */
class SOAP_CMAC _ns3__CreateMedicationsResponse
{
public:
	ns6__User_USCOREMedications *CreateMedicationsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Medications */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 362; } /* = unique id SOAP_TYPE__ns3__CreateMedicationsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateMedicationsResponse() { _ns3__CreateMedicationsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateMedicationsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateMedications
#define SOAP_TYPE__ns3__UpdateMedications (363)
/* ns3:UpdateMedications */
class SOAP_CMAC _ns3__UpdateMedications
{
public:
	ns6__User_USCOREMedications *userMedicationss;	/* optional element of type ns6:User_Medications */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 363; } /* = unique id SOAP_TYPE__ns3__UpdateMedications */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateMedications() { _ns3__UpdateMedications::soap_default(NULL); }
	virtual ~_ns3__UpdateMedications() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateMedicationsResponse
#define SOAP_TYPE__ns3__UpdateMedicationsResponse (364)
/* ns3:UpdateMedicationsResponse */
class SOAP_CMAC _ns3__UpdateMedicationsResponse
{
public:
	bool *UpdateMedicationsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 364; } /* = unique id SOAP_TYPE__ns3__UpdateMedicationsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateMedicationsResponse() { _ns3__UpdateMedicationsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateMedicationsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatus
#define SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatus (365)
/* ns3:GetMedicationsbyUserIDandStatus */
class SOAP_CMAC _ns3__GetMedicationsbyUserIDandStatus
{
public:
	int *userID;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 365; } /* = unique id SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedicationsbyUserIDandStatus() { _ns3__GetMedicationsbyUserIDandStatus::soap_default(NULL); }
	virtual ~_ns3__GetMedicationsbyUserIDandStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatusResponse
#define SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatusResponse (366)
/* ns3:GetMedicationsbyUserIDandStatusResponse */
class SOAP_CMAC _ns3__GetMedicationsbyUserIDandStatusResponse
{
public:
	class ns6__ArrayOfUser_USCOREMedications *GetMedicationsbyUserIDandStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Medications */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 366; } /* = unique id SOAP_TYPE__ns3__GetMedicationsbyUserIDandStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedicationsbyUserIDandStatusResponse() { _ns3__GetMedicationsbyUserIDandStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetMedicationsbyUserIDandStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedicationsbyId
#define SOAP_TYPE__ns3__GetMedicationsbyId (367)
/* ns3:GetMedicationsbyId */
class SOAP_CMAC _ns3__GetMedicationsbyId
{
public:
	int *medicationID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 367; } /* = unique id SOAP_TYPE__ns3__GetMedicationsbyId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedicationsbyId() { _ns3__GetMedicationsbyId::soap_default(NULL); }
	virtual ~_ns3__GetMedicationsbyId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetMedicationsbyIdResponse
#define SOAP_TYPE__ns3__GetMedicationsbyIdResponse (368)
/* ns3:GetMedicationsbyIdResponse */
class SOAP_CMAC _ns3__GetMedicationsbyIdResponse
{
public:
	ns6__User_USCOREMedications *GetMedicationsbyIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Medications */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 368; } /* = unique id SOAP_TYPE__ns3__GetMedicationsbyIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetMedicationsbyIdResponse() { _ns3__GetMedicationsbyIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetMedicationsbyIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllIncidents
#define SOAP_TYPE__ns3__GetAllIncidents (369)
/* ns3:GetAllIncidents */
class SOAP_CMAC _ns3__GetAllIncidents
{
public:
	int *userId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 369; } /* = unique id SOAP_TYPE__ns3__GetAllIncidents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllIncidents() { _ns3__GetAllIncidents::soap_default(NULL); }
	virtual ~_ns3__GetAllIncidents() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetAllIncidentsResponse
#define SOAP_TYPE__ns3__GetAllIncidentsResponse (370)
/* ns3:GetAllIncidentsResponse */
class SOAP_CMAC _ns3__GetAllIncidentsResponse
{
public:
	class ns6__ArrayOfUser_USCOREIncidents *GetAllIncidentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 370; } /* = unique id SOAP_TYPE__ns3__GetAllIncidentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetAllIncidentsResponse() { _ns3__GetAllIncidentsResponse::soap_default(NULL); }
	virtual ~_ns3__GetAllIncidentsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateIncidents
#define SOAP_TYPE__ns3__CreateIncidents (371)
/* ns3:CreateIncidents */
class SOAP_CMAC _ns3__CreateIncidents
{
public:
	class ns6__User_USCOREIncidents *userIncidents;	/* optional element of type ns6:User_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 371; } /* = unique id SOAP_TYPE__ns3__CreateIncidents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateIncidents() { _ns3__CreateIncidents::soap_default(NULL); }
	virtual ~_ns3__CreateIncidents() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateIncidentsResponse
#define SOAP_TYPE__ns3__CreateIncidentsResponse (372)
/* ns3:CreateIncidentsResponse */
class SOAP_CMAC _ns3__CreateIncidentsResponse
{
public:
	ns6__User_USCOREIncidents *CreateIncidentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 372; } /* = unique id SOAP_TYPE__ns3__CreateIncidentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateIncidentsResponse() { _ns3__CreateIncidentsResponse::soap_default(NULL); }
	virtual ~_ns3__CreateIncidentsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateIncidents
#define SOAP_TYPE__ns3__UpdateIncidents (373)
/* ns3:UpdateIncidents */
class SOAP_CMAC _ns3__UpdateIncidents
{
public:
	ns6__User_USCOREIncidents *userIncidents;	/* optional element of type ns6:User_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 373; } /* = unique id SOAP_TYPE__ns3__UpdateIncidents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateIncidents() { _ns3__UpdateIncidents::soap_default(NULL); }
	virtual ~_ns3__UpdateIncidents() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateIncidentsResponse
#define SOAP_TYPE__ns3__UpdateIncidentsResponse (374)
/* ns3:UpdateIncidentsResponse */
class SOAP_CMAC _ns3__UpdateIncidentsResponse
{
public:
	bool *UpdateIncidentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 374; } /* = unique id SOAP_TYPE__ns3__UpdateIncidentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateIncidentsResponse() { _ns3__UpdateIncidentsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateIncidentsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatus
#define SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatus (375)
/* ns3:GetIncidentsbyUserIDandStatus */
class SOAP_CMAC _ns3__GetIncidentsbyUserIDandStatus
{
public:
	int *userID;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 375; } /* = unique id SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentsbyUserIDandStatus() { _ns3__GetIncidentsbyUserIDandStatus::soap_default(NULL); }
	virtual ~_ns3__GetIncidentsbyUserIDandStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatusResponse
#define SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatusResponse (376)
/* ns3:GetIncidentsbyUserIDandStatusResponse */
class SOAP_CMAC _ns3__GetIncidentsbyUserIDandStatusResponse
{
public:
	ns6__User_USCOREIncidents *GetIncidentsbyUserIDandStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 376; } /* = unique id SOAP_TYPE__ns3__GetIncidentsbyUserIDandStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentsbyUserIDandStatusResponse() { _ns3__GetIncidentsbyUserIDandStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetIncidentsbyUserIDandStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentsbyID
#define SOAP_TYPE__ns3__GetIncidentsbyID (377)
/* ns3:GetIncidentsbyID */
class SOAP_CMAC _ns3__GetIncidentsbyID
{
public:
	int *incidentsID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 377; } /* = unique id SOAP_TYPE__ns3__GetIncidentsbyID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentsbyID() { _ns3__GetIncidentsbyID::soap_default(NULL); }
	virtual ~_ns3__GetIncidentsbyID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetIncidentsbyIDResponse
#define SOAP_TYPE__ns3__GetIncidentsbyIDResponse (378)
/* ns3:GetIncidentsbyIDResponse */
class SOAP_CMAC _ns3__GetIncidentsbyIDResponse
{
public:
	ns6__User_USCOREIncidents *GetIncidentsbyIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Incidents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 378; } /* = unique id SOAP_TYPE__ns3__GetIncidentsbyIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetIncidentsbyIDResponse() { _ns3__GetIncidentsbyIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetIncidentsbyIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLocationDetailsByOrgId
#define SOAP_TYPE__ns3__GetLocationDetailsByOrgId (379)
/* ns3:GetLocationDetailsByOrgId */
class SOAP_CMAC _ns3__GetLocationDetailsByOrgId
{
public:
	int *orgID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 379; } /* = unique id SOAP_TYPE__ns3__GetLocationDetailsByOrgId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLocationDetailsByOrgId() { _ns3__GetLocationDetailsByOrgId::soap_default(NULL); }
	virtual ~_ns3__GetLocationDetailsByOrgId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLocationDetailsByOrgIdResponse
#define SOAP_TYPE__ns3__GetLocationDetailsByOrgIdResponse (380)
/* ns3:GetLocationDetailsByOrgIdResponse */
class SOAP_CMAC _ns3__GetLocationDetailsByOrgIdResponse
{
public:
	class ns6__ArrayOfOrganization_USCORELocations *GetLocationDetailsByOrgIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfOrganization_Locations */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 380; } /* = unique id SOAP_TYPE__ns3__GetLocationDetailsByOrgIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLocationDetailsByOrgIdResponse() { _ns3__GetLocationDetailsByOrgIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetLocationDetailsByOrgIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SaveDocuments
#define SOAP_TYPE__ns3__SaveDocuments (381)
/* ns3:SaveDocuments */
class SOAP_CMAC _ns3__SaveDocuments
{
public:
	class ns6__User_USCOREDocuments *userDocuments;	/* optional element of type ns6:User_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 381; } /* = unique id SOAP_TYPE__ns3__SaveDocuments */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SaveDocuments() { _ns3__SaveDocuments::soap_default(NULL); }
	virtual ~_ns3__SaveDocuments() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SaveDocumentsResponse
#define SOAP_TYPE__ns3__SaveDocumentsResponse (382)
/* ns3:SaveDocumentsResponse */
class SOAP_CMAC _ns3__SaveDocumentsResponse
{
public:
	ns6__User_USCOREDocuments *SaveDocumentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 382; } /* = unique id SOAP_TYPE__ns3__SaveDocumentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SaveDocumentsResponse() { _ns3__SaveDocumentsResponse::soap_default(NULL); }
	virtual ~_ns3__SaveDocumentsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentssbyUserID
#define SOAP_TYPE__ns3__GetDocumentssbyUserID (383)
/* ns3:GetDocumentssbyUserID */
class SOAP_CMAC _ns3__GetDocumentssbyUserID
{
public:
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 383; } /* = unique id SOAP_TYPE__ns3__GetDocumentssbyUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentssbyUserID() { _ns3__GetDocumentssbyUserID::soap_default(NULL); }
	virtual ~_ns3__GetDocumentssbyUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentssbyUserIDResponse
#define SOAP_TYPE__ns3__GetDocumentssbyUserIDResponse (384)
/* ns3:GetDocumentssbyUserIDResponse */
class SOAP_CMAC _ns3__GetDocumentssbyUserIDResponse
{
public:
	ns6__User_USCOREDocuments *GetDocumentssbyUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 384; } /* = unique id SOAP_TYPE__ns3__GetDocumentssbyUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentssbyUserIDResponse() { _ns3__GetDocumentssbyUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDocumentssbyUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserID
#define SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserID (385)
/* ns3:GetDocumentsbyIncidentIDandUserID */
class SOAP_CMAC _ns3__GetDocumentsbyIncidentIDandUserID
{
public:
	int *incidentID;	/* optional element of type xsd:int */
	int *UserID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 385; } /* = unique id SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentsbyIncidentIDandUserID() { _ns3__GetDocumentsbyIncidentIDandUserID::soap_default(NULL); }
	virtual ~_ns3__GetDocumentsbyIncidentIDandUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserIDResponse
#define SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserIDResponse (386)
/* ns3:GetDocumentsbyIncidentIDandUserIDResponse */
class SOAP_CMAC _ns3__GetDocumentsbyIncidentIDandUserIDResponse
{
public:
	class ns6__ArrayOfUser_USCOREDocuments *GetDocumentsbyIncidentIDandUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 386; } /* = unique id SOAP_TYPE__ns3__GetDocumentsbyIncidentIDandUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentsbyIncidentIDandUserIDResponse() { _ns3__GetDocumentsbyIncidentIDandUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDocumentsbyIncidentIDandUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentbyDocumentID
#define SOAP_TYPE__ns3__GetDocumentbyDocumentID (387)
/* ns3:GetDocumentbyDocumentID */
class SOAP_CMAC _ns3__GetDocumentbyDocumentID
{
public:
	int *docID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 387; } /* = unique id SOAP_TYPE__ns3__GetDocumentbyDocumentID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentbyDocumentID() { _ns3__GetDocumentbyDocumentID::soap_default(NULL); }
	virtual ~_ns3__GetDocumentbyDocumentID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDocumentbyDocumentIDResponse
#define SOAP_TYPE__ns3__GetDocumentbyDocumentIDResponse (388)
/* ns3:GetDocumentbyDocumentIDResponse */
class SOAP_CMAC _ns3__GetDocumentbyDocumentIDResponse
{
public:
	ns6__User_USCOREDocuments *GetDocumentbyDocumentIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 388; } /* = unique id SOAP_TYPE__ns3__GetDocumentbyDocumentIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDocumentbyDocumentIDResponse() { _ns3__GetDocumentbyDocumentIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDocumentbyDocumentIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateDocuments
#define SOAP_TYPE__ns3__UpdateDocuments (389)
/* ns3:UpdateDocuments */
class SOAP_CMAC _ns3__UpdateDocuments
{
public:
	ns6__User_USCOREDocuments *documentsDetails;	/* optional element of type ns6:User_Documents */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 389; } /* = unique id SOAP_TYPE__ns3__UpdateDocuments */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateDocuments() { _ns3__UpdateDocuments::soap_default(NULL); }
	virtual ~_ns3__UpdateDocuments() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateDocumentsResponse
#define SOAP_TYPE__ns3__UpdateDocumentsResponse (390)
/* ns3:UpdateDocumentsResponse */
class SOAP_CMAC _ns3__UpdateDocumentsResponse
{
public:
	bool *UpdateDocumentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 390; } /* = unique id SOAP_TYPE__ns3__UpdateDocumentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateDocumentsResponse() { _ns3__UpdateDocumentsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateDocumentsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLocationbyLocationId
#define SOAP_TYPE__ns3__GetLocationbyLocationId (391)
/* ns3:GetLocationbyLocationId */
class SOAP_CMAC _ns3__GetLocationbyLocationId
{
public:
	int *locationId;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 391; } /* = unique id SOAP_TYPE__ns3__GetLocationbyLocationId */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLocationbyLocationId() { _ns3__GetLocationbyLocationId::soap_default(NULL); }
	virtual ~_ns3__GetLocationbyLocationId() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetLocationbyLocationIdResponse
#define SOAP_TYPE__ns3__GetLocationbyLocationIdResponse (392)
/* ns3:GetLocationbyLocationIdResponse */
class SOAP_CMAC _ns3__GetLocationbyLocationIdResponse
{
public:
	ns6__Organization_USCORELocations *GetLocationbyLocationIdResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:Organization_Locations */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 392; } /* = unique id SOAP_TYPE__ns3__GetLocationbyLocationIdResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetLocationbyLocationIdResponse() { _ns3__GetLocationbyLocationIdResponse::soap_default(NULL); }
	virtual ~_ns3__GetLocationbyLocationIdResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateDependent
#define SOAP_TYPE__ns3__CreateDependent (393)
/* ns3:CreateDependent */
class SOAP_CMAC _ns3__CreateDependent
{
public:
	ns6__User_USCOREDependent *userDependent;	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 393; } /* = unique id SOAP_TYPE__ns3__CreateDependent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateDependent() { _ns3__CreateDependent::soap_default(NULL); }
	virtual ~_ns3__CreateDependent() { }
};
#endif

#ifndef SOAP_TYPE__ns3__CreateDependentResponse
#define SOAP_TYPE__ns3__CreateDependentResponse (394)
/* ns3:CreateDependentResponse */
class SOAP_CMAC _ns3__CreateDependentResponse
{
public:
	ns6__User_USCOREDependent *CreateDependentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 394; } /* = unique id SOAP_TYPE__ns3__CreateDependentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__CreateDependentResponse() { _ns3__CreateDependentResponse::soap_default(NULL); }
	virtual ~_ns3__CreateDependentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyUserID
#define SOAP_TYPE__ns3__GetDependentsbyUserID (395)
/* ns3:GetDependentsbyUserID */
class SOAP_CMAC _ns3__GetDependentsbyUserID
{
public:
	int *userID;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 395; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyUserID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyUserID() { _ns3__GetDependentsbyUserID::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyUserID() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyUserIDResponse
#define SOAP_TYPE__ns3__GetDependentsbyUserIDResponse (396)
/* ns3:GetDependentsbyUserIDResponse */
class SOAP_CMAC _ns3__GetDependentsbyUserIDResponse
{
public:
	ns6__User_USCOREDependent *GetDependentsbyUserIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 396; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyUserIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyUserIDResponse() { _ns3__GetDependentsbyUserIDResponse::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyUserIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyUserIDandStatus
#define SOAP_TYPE__ns3__GetDependentsbyUserIDandStatus (397)
/* ns3:GetDependentsbyUserIDandStatus */
class SOAP_CMAC _ns3__GetDependentsbyUserIDandStatus
{
public:
	int *userID;	/* optional element of type xsd:int */
	bool *status;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 397; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyUserIDandStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyUserIDandStatus() { _ns3__GetDependentsbyUserIDandStatus::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyUserIDandStatus() { }
};
#endif

#ifndef SOAP_TYPE__ns3__GetDependentsbyUserIDandStatusResponse
#define SOAP_TYPE__ns3__GetDependentsbyUserIDandStatusResponse (398)
/* ns3:GetDependentsbyUserIDandStatusResponse */
class SOAP_CMAC _ns3__GetDependentsbyUserIDandStatusResponse
{
public:
	class ns6__ArrayOfUser_USCOREDependent *GetDependentsbyUserIDandStatusResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:ArrayOfUser_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 398; } /* = unique id SOAP_TYPE__ns3__GetDependentsbyUserIDandStatusResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__GetDependentsbyUserIDandStatusResponse() { _ns3__GetDependentsbyUserIDandStatusResponse::soap_default(NULL); }
	virtual ~_ns3__GetDependentsbyUserIDandStatusResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateDependents
#define SOAP_TYPE__ns3__UpdateDependents (399)
/* ns3:UpdateDependents */
class SOAP_CMAC _ns3__UpdateDependents
{
public:
	ns6__User_USCOREDependent *userDependents;	/* optional element of type ns6:User_Dependent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 399; } /* = unique id SOAP_TYPE__ns3__UpdateDependents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateDependents() { _ns3__UpdateDependents::soap_default(NULL); }
	virtual ~_ns3__UpdateDependents() { }
};
#endif

#ifndef SOAP_TYPE__ns3__UpdateDependentsResponse
#define SOAP_TYPE__ns3__UpdateDependentsResponse (400)
/* ns3:UpdateDependentsResponse */
class SOAP_CMAC _ns3__UpdateDependentsResponse
{
public:
	bool *UpdateDependentsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 400; } /* = unique id SOAP_TYPE__ns3__UpdateDependentsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__UpdateDependentsResponse() { _ns3__UpdateDependentsResponse::soap_default(NULL); }
	virtual ~_ns3__UpdateDependentsResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ProcessExecutionFault
#define SOAP_TYPE_ns4__ProcessExecutionFault (401)
/* ns4:ProcessExecutionFault */
class SOAP_CMAC ns4__ProcessExecutionFault : public xsd__anyType
{
public:
	std::string *Message;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 401; } /* = unique id SOAP_TYPE_ns4__ProcessExecutionFault */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ProcessExecutionFault() { ns4__ProcessExecutionFault::soap_default(NULL); }
	virtual ~ns4__ProcessExecutionFault() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfAnnouncement
#define SOAP_TYPE_ns6__ArrayOfAnnouncement (404)
/* ns6:ArrayOfAnnouncement */
class SOAP_CMAC ns6__ArrayOfAnnouncement : public xsd__anyType
{
public:
	std::vector<ns6__Announcement * >Announcement;	/* optional element of type ns6:Announcement */
public:
	virtual int soap_type() const { return 404; } /* = unique id SOAP_TYPE_ns6__ArrayOfAnnouncement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfAnnouncement() { ns6__ArrayOfAnnouncement::soap_default(NULL); }
	virtual ~ns6__ArrayOfAnnouncement() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfChallenge
#define SOAP_TYPE_ns6__ArrayOfChallenge (405)
/* ns6:ArrayOfChallenge */
class SOAP_CMAC ns6__ArrayOfChallenge : public xsd__anyType
{
public:
	std::vector<ns6__Challenge * >Challenge;	/* optional element of type ns6:Challenge */
public:
	virtual int soap_type() const { return 405; } /* = unique id SOAP_TYPE_ns6__ArrayOfChallenge */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfChallenge() { ns6__ArrayOfChallenge::soap_default(NULL); }
	virtual ~ns6__ArrayOfChallenge() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfChallenge_USCORESubscriptions
#define SOAP_TYPE_ns6__ArrayOfChallenge_USCORESubscriptions (407)
/* ns6:ArrayOfChallenge_Subscriptions */
class SOAP_CMAC ns6__ArrayOfChallenge_USCORESubscriptions : public xsd__anyType
{
public:
	std::vector<ns6__Challenge_USCORESubscriptions * >Challenge_USCORESubscriptions;	/* optional element of type ns6:Challenge_Subscriptions */
public:
	virtual int soap_type() const { return 407; } /* = unique id SOAP_TYPE_ns6__ArrayOfChallenge_USCORESubscriptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfChallenge_USCORESubscriptions() { ns6__ArrayOfChallenge_USCORESubscriptions::soap_default(NULL); }
	virtual ~ns6__ArrayOfChallenge_USCORESubscriptions() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfCustom_USCOREReading_USCORERecords
#define SOAP_TYPE_ns6__ArrayOfCustom_USCOREReading_USCORERecords (410)
/* ns6:ArrayOfCustom_Reading_Records */
class SOAP_CMAC ns6__ArrayOfCustom_USCOREReading_USCORERecords : public xsd__anyType
{
public:
	std::vector<ns6__Custom_USCOREReading_USCORERecords * >Custom_USCOREReading_USCORERecords;	/* optional element of type ns6:Custom_Reading_Records */
public:
	virtual int soap_type() const { return 410; } /* = unique id SOAP_TYPE_ns6__ArrayOfCustom_USCOREReading_USCORERecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfCustom_USCOREReading_USCORERecords() { ns6__ArrayOfCustom_USCOREReading_USCORERecords::soap_default(NULL); }
	virtual ~ns6__ArrayOfCustom_USCOREReading_USCORERecords() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfDefined_USCOREReadings
#define SOAP_TYPE_ns6__ArrayOfDefined_USCOREReadings (414)
/* ns6:ArrayOfDefined_Readings */
class SOAP_CMAC ns6__ArrayOfDefined_USCOREReadings : public xsd__anyType
{
public:
	std::vector<ns6__Defined_USCOREReadings * >Defined_USCOREReadings;	/* optional element of type ns6:Defined_Readings */
public:
	virtual int soap_type() const { return 414; } /* = unique id SOAP_TYPE_ns6__ArrayOfDefined_USCOREReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfDefined_USCOREReadings() { ns6__ArrayOfDefined_USCOREReadings::soap_default(NULL); }
	virtual ~ns6__ArrayOfDefined_USCOREReadings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfMeasurement_USCORESafe_USCORERanges
#define SOAP_TYPE_ns6__ArrayOfMeasurement_USCORESafe_USCORERanges (416)
/* ns6:ArrayOfMeasurement_Safe_Ranges */
class SOAP_CMAC ns6__ArrayOfMeasurement_USCORESafe_USCORERanges : public xsd__anyType
{
public:
	std::vector<class ns6__Measurement_USCORESafe_USCORERanges * >Measurement_USCORESafe_USCORERanges;	/* optional element of type ns6:Measurement_Safe_Ranges */
public:
	virtual int soap_type() const { return 416; } /* = unique id SOAP_TYPE_ns6__ArrayOfMeasurement_USCORESafe_USCORERanges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfMeasurement_USCORESafe_USCORERanges() { ns6__ArrayOfMeasurement_USCORESafe_USCORERanges::soap_default(NULL); }
	virtual ~ns6__ArrayOfMeasurement_USCORESafe_USCORERanges() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfReading_USCORERecords
#define SOAP_TYPE_ns6__ArrayOfReading_USCORERecords (418)
/* ns6:ArrayOfReading_Records */
class SOAP_CMAC ns6__ArrayOfReading_USCORERecords : public xsd__anyType
{
public:
	std::vector<ns6__Reading_USCORERecords * >Reading_USCORERecords;	/* optional element of type ns6:Reading_Records */
public:
	virtual int soap_type() const { return 418; } /* = unique id SOAP_TYPE_ns6__ArrayOfReading_USCORERecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfReading_USCORERecords() { ns6__ArrayOfReading_USCORERecords::soap_default(NULL); }
	virtual ~ns6__ArrayOfReading_USCORERecords() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCORECustom_USCOREReadings
#define SOAP_TYPE_ns6__ArrayOfUser_USCORECustom_USCOREReadings (420)
/* ns6:ArrayOfUser_Custom_Readings */
class SOAP_CMAC ns6__ArrayOfUser_USCORECustom_USCOREReadings : public xsd__anyType
{
public:
	std::vector<ns6__User_USCORECustom_USCOREReadings * >User_USCORECustom_USCOREReadings;	/* optional element of type ns6:User_Custom_Readings */
public:
	virtual int soap_type() const { return 420; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCORECustom_USCOREReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCORECustom_USCOREReadings() { ns6__ArrayOfUser_USCORECustom_USCOREReadings::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCORECustom_USCOREReadings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREAllergies
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREAllergies (421)
/* ns6:ArrayOfUser_Allergies */
class SOAP_CMAC ns6__ArrayOfUser_USCOREAllergies : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREAllergies * >User_USCOREAllergies;	/* optional element of type ns6:User_Allergies */
public:
	virtual int soap_type() const { return 421; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREAllergies */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREAllergies() { ns6__ArrayOfUser_USCOREAllergies::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREAllergies() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCORECompany_USCOREMapping
#define SOAP_TYPE_ns6__ArrayOfUser_USCORECompany_USCOREMapping (423)
/* ns6:ArrayOfUser_Company_Mapping */
class SOAP_CMAC ns6__ArrayOfUser_USCORECompany_USCOREMapping : public xsd__anyType
{
public:
	std::vector<ns6__User_USCORECompany_USCOREMapping * >User_USCORECompany_USCOREMapping;	/* optional element of type ns6:User_Company_Mapping */
public:
	virtual int soap_type() const { return 423; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCORECompany_USCOREMapping */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCORECompany_USCOREMapping() { ns6__ArrayOfUser_USCORECompany_USCOREMapping::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCORECompany_USCOREMapping() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREContacts
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREContacts (426)
/* ns6:ArrayOfUser_Contacts */
class SOAP_CMAC ns6__ArrayOfUser_USCOREContacts : public xsd__anyType
{
public:
	std::vector<class ns6__User_USCOREContacts * >User_USCOREContacts;	/* optional element of type ns6:User_Contacts */
public:
	virtual int soap_type() const { return 426; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREContacts */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREContacts() { ns6__ArrayOfUser_USCOREContacts::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREContacts() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREDependent
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREDependent (428)
/* ns6:ArrayOfUser_Dependent */
class SOAP_CMAC ns6__ArrayOfUser_USCOREDependent : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREDependent * >User_USCOREDependent;	/* optional element of type ns6:User_Dependent */
public:
	virtual int soap_type() const { return 428; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREDependent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREDependent() { ns6__ArrayOfUser_USCOREDependent::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREDependent() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREDocuments
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREDocuments (430)
/* ns6:ArrayOfUser_Documents */
class SOAP_CMAC ns6__ArrayOfUser_USCOREDocuments : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREDocuments * >User_USCOREDocuments;	/* optional element of type ns6:User_Documents */
public:
	virtual int soap_type() const { return 430; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREDocuments */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREDocuments() { ns6__ArrayOfUser_USCOREDocuments::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREDocuments() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCORECondition
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCORECondition (433)
/* ns6:ArrayOfUser_Health_Condition */
class SOAP_CMAC ns6__ArrayOfUser_USCOREHealth_USCORECondition : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREHealth_USCORECondition * >User_USCOREHealth_USCORECondition;	/* optional element of type ns6:User_Health_Condition */
public:
	virtual int soap_type() const { return 433; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCORECondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREHealth_USCORECondition() { ns6__ArrayOfUser_USCOREHealth_USCORECondition::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREHealth_USCORECondition() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCOREProfile
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCOREProfile (436)
/* ns6:ArrayOfUser_Health_Profile */
class SOAP_CMAC ns6__ArrayOfUser_USCOREHealth_USCOREProfile : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREHealth_USCOREProfile * >User_USCOREHealth_USCOREProfile;	/* optional element of type ns6:User_Health_Profile */
public:
	virtual int soap_type() const { return 436; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREHealth_USCOREProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREHealth_USCOREProfile() { ns6__ArrayOfUser_USCOREHealth_USCOREProfile::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREHealth_USCOREProfile() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREIncidents
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREIncidents (438)
/* ns6:ArrayOfUser_Incidents */
class SOAP_CMAC ns6__ArrayOfUser_USCOREIncidents : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREIncidents * >User_USCOREIncidents;	/* optional element of type ns6:User_Incidents */
public:
	virtual int soap_type() const { return 438; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREIncidents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREIncidents() { ns6__ArrayOfUser_USCOREIncidents::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREIncidents() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREKeepWatch
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREKeepWatch (439)
/* ns6:ArrayOfUser_KeepWatch */
class SOAP_CMAC ns6__ArrayOfUser_USCOREKeepWatch : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREKeepWatch * >User_USCOREKeepWatch;	/* optional element of type ns6:User_KeepWatch */
public:
	virtual int soap_type() const { return 439; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREKeepWatch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREKeepWatch() { ns6__ArrayOfUser_USCOREKeepWatch::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREKeepWatch() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREMedications
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREMedications (441)
/* ns6:ArrayOfUser_Medications */
class SOAP_CMAC ns6__ArrayOfUser_USCOREMedications : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREMedications * >User_USCOREMedications;	/* optional element of type ns6:User_Medications */
public:
	virtual int soap_type() const { return 441; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREMedications */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREMedications() { ns6__ArrayOfUser_USCOREMedications::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREMedications() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREProfile
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREProfile (443)
/* ns6:ArrayOfUser_Profile */
class SOAP_CMAC ns6__ArrayOfUser_USCOREProfile : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREProfile * >User_USCOREProfile;	/* optional element of type ns6:User_Profile */
public:
	virtual int soap_type() const { return 443; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREProfile() { ns6__ArrayOfUser_USCOREProfile::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREProfile() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREService_USCOREProvider
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREService_USCOREProvider (445)
/* ns6:ArrayOfUser_Service_Provider */
class SOAP_CMAC ns6__ArrayOfUser_USCOREService_USCOREProvider : public xsd__anyType
{
public:
	std::vector<class ns6__User_USCOREService_USCOREProvider * >User_USCOREService_USCOREProvider;	/* optional element of type ns6:User_Service_Provider */
public:
	virtual int soap_type() const { return 445; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREService_USCOREProvider */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREService_USCOREProvider() { ns6__ArrayOfUser_USCOREService_USCOREProvider::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREService_USCOREProvider() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCORESettings
#define SOAP_TYPE_ns6__ArrayOfUser_USCORESettings (447)
/* ns6:ArrayOfUser_Settings */
class SOAP_CMAC ns6__ArrayOfUser_USCORESettings : public xsd__anyType
{
public:
	std::vector<ns6__User_USCORESettings * >User_USCORESettings;	/* optional element of type ns6:User_Settings */
public:
	virtual int soap_type() const { return 447; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCORESettings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCORESettings() { ns6__ArrayOfUser_USCORESettings::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCORESettings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCORESharing
#define SOAP_TYPE_ns6__ArrayOfUser_USCORESharing (449)
/* ns6:ArrayOfUser_Sharing */
class SOAP_CMAC ns6__ArrayOfUser_USCORESharing : public xsd__anyType
{
public:
	std::vector<ns6__User_USCORESharing * >User_USCORESharing;	/* optional element of type ns6:User_Sharing */
public:
	virtual int soap_type() const { return 449; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCORESharing */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCORESharing() { ns6__ArrayOfUser_USCORESharing::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCORESharing() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfOrganization_USCORELocations
#define SOAP_TYPE_ns6__ArrayOfOrganization_USCORELocations (451)
/* ns6:ArrayOfOrganization_Locations */
class SOAP_CMAC ns6__ArrayOfOrganization_USCORELocations : public xsd__anyType
{
public:
	std::vector<ns6__Organization_USCORELocations * >Organization_USCORELocations;	/* optional element of type ns6:Organization_Locations */
public:
	virtual int soap_type() const { return 451; } /* = unique id SOAP_TYPE_ns6__ArrayOfOrganization_USCORELocations */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfOrganization_USCORELocations() { ns6__ArrayOfOrganization_USCORELocations::soap_default(NULL); }
	virtual ~ns6__ArrayOfOrganization_USCORELocations() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfOrganization_USCORELogins
#define SOAP_TYPE_ns6__ArrayOfOrganization_USCORELogins (452)
/* ns6:ArrayOfOrganization_Logins */
class SOAP_CMAC ns6__ArrayOfOrganization_USCORELogins : public xsd__anyType
{
public:
	std::vector<ns6__Organization_USCORELogins * >Organization_USCORELogins;	/* optional element of type ns6:Organization_Logins */
public:
	virtual int soap_type() const { return 452; } /* = unique id SOAP_TYPE_ns6__ArrayOfOrganization_USCORELogins */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfOrganization_USCORELogins() { ns6__ArrayOfOrganization_USCORELogins::soap_default(NULL); }
	virtual ~ns6__ArrayOfOrganization_USCORELogins() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfOrganization_USCORESettings
#define SOAP_TYPE_ns6__ArrayOfOrganization_USCORESettings (454)
/* ns6:ArrayOfOrganization_Settings */
class SOAP_CMAC ns6__ArrayOfOrganization_USCORESettings : public xsd__anyType
{
public:
	std::vector<ns6__Organization_USCORESettings * >Organization_USCORESettings;	/* optional element of type ns6:Organization_Settings */
public:
	virtual int soap_type() const { return 454; } /* = unique id SOAP_TYPE_ns6__ArrayOfOrganization_USCORESettings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfOrganization_USCORESettings() { ns6__ArrayOfOrganization_USCORESettings::soap_default(NULL); }
	virtual ~ns6__ArrayOfOrganization_USCORESettings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUser_USCOREMaster
#define SOAP_TYPE_ns6__ArrayOfUser_USCOREMaster (456)
/* ns6:ArrayOfUser_Master */
class SOAP_CMAC ns6__ArrayOfUser_USCOREMaster : public xsd__anyType
{
public:
	std::vector<ns6__User_USCOREMaster * >User_USCOREMaster;	/* optional element of type ns6:User_Master */
public:
	virtual int soap_type() const { return 456; } /* = unique id SOAP_TYPE_ns6__ArrayOfUser_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUser_USCOREMaster() { ns6__ArrayOfUser_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__ArrayOfUser_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfGoalDetails
#define SOAP_TYPE_ns6__ArrayOfGoalDetails (457)
/* ns6:ArrayOfGoalDetails */
class SOAP_CMAC ns6__ArrayOfGoalDetails : public xsd__anyType
{
public:
	std::vector<class ns6__GoalDetails * >GoalDetails;	/* optional element of type ns6:GoalDetails */
public:
	virtual int soap_type() const { return 457; } /* = unique id SOAP_TYPE_ns6__ArrayOfGoalDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfGoalDetails() { ns6__ArrayOfGoalDetails::soap_default(NULL); }
	virtual ~ns6__ArrayOfGoalDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__GoalDetails
#define SOAP_TYPE_ns6__GoalDetails (458)
/* ns6:GoalDetails */
class SOAP_CMAC ns6__GoalDetails : public xsd__anyType
{
public:
	std::string *Email;	/* optional element of type xsd:string */
	int *GoalId;	/* optional element of type xsd:int */
	bool *IsLowerTheBetter;	/* optional element of type xsd:boolean */
	time_t *LatestCreatedDate;	/* optional element of type xsd:dateTime */
	std::string *Lower;	/* optional element of type xsd:string */
	std::string *Mobile;	/* optional element of type xsd:string */
	std::string *Parameter;	/* optional element of type xsd:string */
	int *Reading_USCOREId;	/* optional element of type xsd:int */
	float *Start_USCOREValue;	/* optional element of type xsd:float */
	time_t *Target_USCOREDate;	/* optional element of type xsd:dateTime */
	float *Target_USCOREValue;	/* optional element of type xsd:float */
public:
	virtual int soap_type() const { return 458; } /* = unique id SOAP_TYPE_ns6__GoalDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__GoalDetails() { ns6__GoalDetails::soap_default(NULL); }
	virtual ~ns6__GoalDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfReadingNames
#define SOAP_TYPE_ns6__ArrayOfReadingNames (459)
/* ns6:ArrayOfReadingNames */
class SOAP_CMAC ns6__ArrayOfReadingNames : public xsd__anyType
{
public:
	std::vector<ns6__ReadingNames * >ReadingNames;	/* optional element of type ns6:ReadingNames */
public:
	virtual int soap_type() const { return 459; } /* = unique id SOAP_TYPE_ns6__ArrayOfReadingNames */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfReadingNames() { ns6__ArrayOfReadingNames::soap_default(NULL); }
	virtual ~ns6__ArrayOfReadingNames() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ReadingNames
#define SOAP_TYPE_ns6__ReadingNames (460)
/* ns6:ReadingNames */
class SOAP_CMAC ns6__ReadingNames : public xsd__anyType
{
public:
	bool *CanIgnore;	/* optional element of type xsd:boolean */
	std::string *Comments;	/* optional element of type xsd:string */
	std::string *Default_USCOREValue;	/* optional element of type xsd:string */
	std::string *HasChild;	/* optional element of type xsd:string */
	bool *LowerTheBetter;	/* optional element of type xsd:boolean */
	int *MeasurementBy;	/* optional element of type xsd:int */
	std::string *MeasurementContext;	/* optional element of type xsd:string */
	bool *Measurement_USCOREContext;	/* optional element of type xsd:boolean */
	std::string *NormalRange;	/* optional element of type xsd:string */
	int *Parent_USCOREReadingId;	/* optional element of type xsd:int */
	time_t *ReadingDate;	/* optional element of type xsd:dateTime */
	int *ReadingID;	/* optional element of type xsd:int */
	std::string *ReadingName;	/* optional element of type xsd:string */
	int *ReadingRecordId;	/* optional element of type xsd:int */
	std::string *ReadingTime;	/* optional element of type ns5:duration */
	std::string *ReadingType;	/* optional element of type xsd:string */
	double *ReadingValue;	/* optional element of type xsd:double */
	std::string *TargetMaxValue;	/* optional element of type xsd:string */
	std::string *TargetMinValue;	/* optional element of type xsd:string */
	bool *TargetRange;	/* optional element of type xsd:boolean */
	std::string *TargetValue;	/* optional element of type xsd:string */
	std::string *Unit_USCOREName;	/* optional element of type xsd:string */
	std::string *WebsiteReference;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 460; } /* = unique id SOAP_TYPE_ns6__ReadingNames */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ReadingNames() { ns6__ReadingNames::soap_default(NULL); }
	virtual ~ns6__ReadingNames() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfConditionDetails
#define SOAP_TYPE_ns6__ArrayOfConditionDetails (461)
/* ns6:ArrayOfConditionDetails */
class SOAP_CMAC ns6__ArrayOfConditionDetails : public xsd__anyType
{
public:
	std::vector<class ns6__ConditionDetails * >ConditionDetails;	/* optional element of type ns6:ConditionDetails */
public:
	virtual int soap_type() const { return 461; } /* = unique id SOAP_TYPE_ns6__ArrayOfConditionDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfConditionDetails() { ns6__ArrayOfConditionDetails::soap_default(NULL); }
	virtual ~ns6__ArrayOfConditionDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ConditionDetails
#define SOAP_TYPE_ns6__ConditionDetails (462)
/* ns6:ConditionDetails */
class SOAP_CMAC ns6__ConditionDetails : public xsd__anyType
{
public:
	std::string *ConditionName;	/* optional element of type xsd:string */
	std::string *ConditionType;	/* optional element of type xsd:string */
	int *Condition_USCOREId;	/* optional element of type xsd:int */
	int *Defined_USCOREConditionId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 462; } /* = unique id SOAP_TYPE_ns6__ConditionDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ConditionDetails() { ns6__ConditionDetails::soap_default(NULL); }
	virtual ~ns6__ConditionDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfMedicationDetails
#define SOAP_TYPE_ns6__ArrayOfMedicationDetails (463)
/* ns6:ArrayOfMedicationDetails */
class SOAP_CMAC ns6__ArrayOfMedicationDetails : public xsd__anyType
{
public:
	std::vector<class ns6__MedicationDetails * >MedicationDetails;	/* optional element of type ns6:MedicationDetails */
public:
	virtual int soap_type() const { return 463; } /* = unique id SOAP_TYPE_ns6__ArrayOfMedicationDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfMedicationDetails() { ns6__ArrayOfMedicationDetails::soap_default(NULL); }
	virtual ~ns6__ArrayOfMedicationDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__MedicationDetails
#define SOAP_TYPE_ns6__MedicationDetails (464)
/* ns6:MedicationDetails */
class SOAP_CMAC ns6__MedicationDetails : public xsd__anyType
{
public:
	bool *LifeLong;	/* optional element of type xsd:boolean */
	int *MedicationId;	/* optional element of type xsd:int */
	std::string *MedicationName;	/* optional element of type xsd:string */
	std::string *MedicationPurpose;	/* optional element of type xsd:string */
	time_t *StartDate;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 464; } /* = unique id SOAP_TYPE_ns6__MedicationDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__MedicationDetails() { ns6__MedicationDetails::soap_default(NULL); }
	virtual ~ns6__MedicationDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfChallengesRecordExtrafield
#define SOAP_TYPE_ns6__ArrayOfChallengesRecordExtrafield (465)
/* ns6:ArrayOfChallengesRecordExtrafield */
class SOAP_CMAC ns6__ArrayOfChallengesRecordExtrafield : public xsd__anyType
{
public:
	std::vector<class ns6__ChallengesRecordExtrafield * >ChallengesRecordExtrafield;	/* optional element of type ns6:ChallengesRecordExtrafield */
public:
	virtual int soap_type() const { return 465; } /* = unique id SOAP_TYPE_ns6__ArrayOfChallengesRecordExtrafield */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfChallengesRecordExtrafield() { ns6__ArrayOfChallengesRecordExtrafield::soap_default(NULL); }
	virtual ~ns6__ArrayOfChallengesRecordExtrafield() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ChallengesRecordExtrafield
#define SOAP_TYPE_ns6__ChallengesRecordExtrafield (466)
/* ns6:ChallengesRecordExtrafield */
class SOAP_CMAC ns6__ChallengesRecordExtrafield : public xsd__anyType
{
public:
	int *ChallengeStatus;	/* optional element of type xsd:int */
	int *Challenge_USCOREId;	/* optional element of type xsd:int */
	std::string *Challnge_USCOREStatus;	/* optional element of type xsd:string */
	std::string *CreatedBy;	/* optional element of type xsd:string */
	time_t *EndDate;	/* optional element of type xsd:dateTime */
	int *IsSubscribed;	/* optional element of type xsd:int */
	int *Measurement;	/* optional element of type xsd:int */
	std::string *Name;	/* optional element of type xsd:string */
	std::string *ReadingName;	/* optional element of type xsd:string */
	std::string *Reward;	/* optional element of type xsd:string */
	time_t *StartDate;	/* optional element of type xsd:dateTime */
	std::string *SubscribedStatus;	/* optional element of type xsd:string */
	int *TotalChallengeSubscribed;	/* optional element of type xsd:int */
	int *TotalChallengeWithdrawn;	/* optional element of type xsd:int */
	int *User_USCOREId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 466; } /* = unique id SOAP_TYPE_ns6__ChallengesRecordExtrafield */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ChallengesRecordExtrafield() { ns6__ChallengesRecordExtrafield::soap_default(NULL); }
	virtual ~ns6__ChallengesRecordExtrafield() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfShareDetails
#define SOAP_TYPE_ns6__ArrayOfShareDetails (467)
/* ns6:ArrayOfShareDetails */
class SOAP_CMAC ns6__ArrayOfShareDetails : public xsd__anyType
{
public:
	std::vector<class ns6__ShareDetails * >ShareDetails;	/* optional element of type ns6:ShareDetails */
public:
	virtual int soap_type() const { return 467; } /* = unique id SOAP_TYPE_ns6__ArrayOfShareDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfShareDetails() { ns6__ArrayOfShareDetails::soap_default(NULL); }
	virtual ~ns6__ArrayOfShareDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ShareDetails
#define SOAP_TYPE_ns6__ShareDetails (468)
/* ns6:ShareDetails */
class SOAP_CMAC ns6__ShareDetails : public xsd__anyType
{
public:
	time_t *ShareCreationDate;	/* optional element of type xsd:dateTime */
	std::string *ShareName;	/* optional element of type xsd:string */
	int *UserId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 468; } /* = unique id SOAP_TYPE_ns6__ShareDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ShareDetails() { ns6__ShareDetails::soap_default(NULL); }
	virtual ~ns6__ShareDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfApplicationLog
#define SOAP_TYPE_ns6__ArrayOfApplicationLog (469)
/* ns6:ArrayOfApplicationLog */
class SOAP_CMAC ns6__ArrayOfApplicationLog : public xsd__anyType
{
public:
	std::vector<class ns6__ApplicationLog * >ApplicationLog;	/* optional element of type ns6:ApplicationLog */
public:
	virtual int soap_type() const { return 469; } /* = unique id SOAP_TYPE_ns6__ArrayOfApplicationLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfApplicationLog() { ns6__ArrayOfApplicationLog::soap_default(NULL); }
	virtual ~ns6__ArrayOfApplicationLog() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfUnits_USCOREMaster
#define SOAP_TYPE_ns6__ArrayOfUnits_USCOREMaster (471)
/* ns6:ArrayOfUnits_Master */
class SOAP_CMAC ns6__ArrayOfUnits_USCOREMaster : public xsd__anyType
{
public:
	std::vector<class ns6__Units_USCOREMaster * >Units_USCOREMaster;	/* optional element of type ns6:Units_Master */
public:
	virtual int soap_type() const { return 471; } /* = unique id SOAP_TYPE_ns6__ArrayOfUnits_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfUnits_USCOREMaster() { ns6__ArrayOfUnits_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__ArrayOfUnits_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfCommonEnumeratedValue
#define SOAP_TYPE_ns6__ArrayOfCommonEnumeratedValue (472)
/* ns6:ArrayOfCommonEnumeratedValue */
class SOAP_CMAC ns6__ArrayOfCommonEnumeratedValue : public xsd__anyType
{
public:
	std::vector<ns6__CommonEnumeratedValue * >CommonEnumeratedValue;	/* optional element of type ns6:CommonEnumeratedValue */
public:
	virtual int soap_type() const { return 472; } /* = unique id SOAP_TYPE_ns6__ArrayOfCommonEnumeratedValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfCommonEnumeratedValue() { ns6__ArrayOfCommonEnumeratedValue::soap_default(NULL); }
	virtual ~ns6__ArrayOfCommonEnumeratedValue() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfOrganization_USCOREMaster
#define SOAP_TYPE_ns6__ArrayOfOrganization_USCOREMaster (475)
/* ns6:ArrayOfOrganization_Master */
class SOAP_CMAC ns6__ArrayOfOrganization_USCOREMaster : public xsd__anyType
{
public:
	std::vector<ns6__Organization_USCOREMaster * >Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
public:
	virtual int soap_type() const { return 475; } /* = unique id SOAP_TYPE_ns6__ArrayOfOrganization_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfOrganization_USCOREMaster() { ns6__ArrayOfOrganization_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__ArrayOfOrganization_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns7__StructuralObject
#define SOAP_TYPE_ns7__StructuralObject (477)
/* Primitive ns7:StructuralObject schema type: */
class SOAP_CMAC ns7__StructuralObject : public xsd__anyType
{
public:
	std::string *ns5__Id;	/* optional attribute */
	std::string *ns5__Ref;	/* optional attribute */
public:
	virtual int soap_type() const { return 477; } /* = unique id SOAP_TYPE_ns7__StructuralObject */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__StructuralObject() { ns7__StructuralObject::soap_default(NULL); }
	virtual ~ns7__StructuralObject() { }
};
#endif

#ifndef SOAP_TYPE_ns7__RelatedEnd
#define SOAP_TYPE_ns7__RelatedEnd (480)
/* Primitive ns7:RelatedEnd schema type: */
class SOAP_CMAC ns7__RelatedEnd : public xsd__anyType
{
public:
	virtual int soap_type() const { return 480; } /* = unique id SOAP_TYPE_ns7__RelatedEnd */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__RelatedEnd() { ns7__RelatedEnd::soap_default(NULL); }
	virtual ~ns7__RelatedEnd() { }
};
#endif

#ifndef SOAP_TYPE_ns8__EntityKey
#define SOAP_TYPE_ns8__EntityKey (490)
/* ns8:EntityKey */
class SOAP_CMAC ns8__EntityKey : public xsd__anyType
{
public:
	std::string *EntityContainerName;	/* optional element of type xsd:string */
	class ns8__ArrayOfEntityKeyMember *EntityKeyValues;	/* optional element of type ns8:ArrayOfEntityKeyMember */
	std::string *EntitySetName;	/* optional element of type xsd:string */
	std::string *ns5__Id;	/* optional attribute */
	std::string *ns5__Ref;	/* optional attribute */
public:
	virtual int soap_type() const { return 490; } /* = unique id SOAP_TYPE_ns8__EntityKey */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns8__EntityKey() { ns8__EntityKey::soap_default(NULL); }
	virtual ~ns8__EntityKey() { }
};
#endif

#ifndef SOAP_TYPE_ns8__ArrayOfEntityKeyMember
#define SOAP_TYPE_ns8__ArrayOfEntityKeyMember (491)
/* ns8:ArrayOfEntityKeyMember */
class SOAP_CMAC ns8__ArrayOfEntityKeyMember : public xsd__anyType
{
public:
	std::vector<class ns8__EntityKeyMember * >EntityKeyMember;	/* optional element of type ns8:EntityKeyMember */
public:
	virtual int soap_type() const { return 491; } /* = unique id SOAP_TYPE_ns8__ArrayOfEntityKeyMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns8__ArrayOfEntityKeyMember() { ns8__ArrayOfEntityKeyMember::soap_default(NULL); }
	virtual ~ns8__ArrayOfEntityKeyMember() { }
};
#endif

#ifndef SOAP_TYPE_ns8__EntityKeyMember
#define SOAP_TYPE_ns8__EntityKeyMember (492)
/* ns8:EntityKeyMember */
class SOAP_CMAC ns8__EntityKeyMember : public xsd__anyType
{
public:
	std::string *Key;	/* optional element of type xsd:string */
	xsd__anyType *Value;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 492; } /* = unique id SOAP_TYPE_ns8__EntityKeyMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns8__EntityKeyMember() { ns8__EntityKeyMember::soap_default(NULL); }
	virtual ~ns8__EntityKeyMember() { }
};
#endif

#ifndef SOAP_TYPE__ns8__DataTable
#define SOAP_TYPE__ns8__DataTable (493)
/* ns8:DataTable */
class SOAP_CMAC _ns8__DataTable
{
public:
	std::vector<char * >__any;
	char *__any_;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 493; } /* = unique id SOAP_TYPE__ns8__DataTable */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns8__DataTable() { _ns8__DataTable::soap_default(NULL); }
	virtual ~_ns8__DataTable() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityObject
#define SOAP_TYPE_ns7__EntityObject (476)
/* ns7:EntityObject */
class SOAP_CMAC ns7__EntityObject : public ns7__StructuralObject
{
public:
	ns8__EntityKey *EntityKey;	/* optional element of type ns8:EntityKey */
public:
	virtual int soap_type() const { return 476; } /* = unique id SOAP_TYPE_ns7__EntityObject */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityObject() { ns7__EntityObject::soap_default(NULL); }
	virtual ~ns7__EntityObject() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReference
#define SOAP_TYPE_ns7__EntityReference (479)
/* ns7:EntityReference */
class SOAP_CMAC ns7__EntityReference : public ns7__RelatedEnd
{
public:
	ns8__EntityKey *EntityKey;	/* optional element of type ns8:EntityKey */
public:
	virtual int soap_type() const { return 479; } /* = unique id SOAP_TYPE_ns7__EntityReference */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReference() { ns7__EntityReference::soap_default(NULL); }
	virtual ~ns7__EntityReference() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Announcement
#define SOAP_TYPE_ns6__Announcement (402)
/* ns6:Announcement */
class SOAP_CMAC ns6__Announcement : public ns7__EntityObject
{
public:
	std::string *Announcement_USCOREContent;	/* optional element of type xsd:string */
	int *Announcement_USCOREId;	/* optional element of type xsd:int */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	time_t *Expiry_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	class ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	bool *Status;	/* optional element of type xsd:boolean */
	std::string *Title;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 402; } /* = unique id SOAP_TYPE_ns6__Announcement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Announcement() { ns6__Announcement::soap_default(NULL); }
	virtual ~ns6__Announcement() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Organization_USCOREMaster
#define SOAP_TYPE_ns6__Organization_USCOREMaster (403)
/* ns6:Organization_Master */
class SOAP_CMAC ns6__Organization_USCOREMaster : public ns7__EntityObject
{
public:
	ns6__ArrayOfAnnouncement *Announcements;	/* optional element of type ns6:ArrayOfAnnouncement */
	ns6__ArrayOfChallenge *Challenges;	/* optional element of type ns6:ArrayOfChallenge */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	xsd__base64Binary *Logo_USCOREFile;	/* optional element of type xsd:base64Binary */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	LONG64 *Number_USCOREEmployees;	/* optional element of type xsd:long */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__ArrayOfOrganization_USCORELocations *Organization_USCORELocations;	/* optional element of type ns6:ArrayOfOrganization_Locations */
	ns6__ArrayOfOrganization_USCORELogins *Organization_USCORELogins;	/* optional element of type ns6:ArrayOfOrganization_Logins */
	std::string *Organization_USCORELong_USCOREName;	/* optional element of type xsd:string */
	ns6__ArrayOfOrganization_USCORESettings *Organization_USCORESettings;	/* optional element of type ns6:ArrayOfOrganization_Settings */
	std::string *Organization_USCOREShort_USCOREName;	/* optional element of type xsd:string */
	std::string *Organization_USCOREURL;	/* optional element of type xsd:string */
	std::string *Parent_USCORECompany;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	ns6__ArrayOfUser_USCORECompany_USCOREMapping *User_USCORECompany_USCOREMapping;	/* optional element of type ns6:ArrayOfUser_Company_Mapping */
	ns6__ArrayOfUser_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:ArrayOfUser_Master */
public:
	virtual int soap_type() const { return 403; } /* = unique id SOAP_TYPE_ns6__Organization_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Organization_USCOREMaster() { ns6__Organization_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__Organization_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Challenge
#define SOAP_TYPE_ns6__Challenge (406)
/* ns6:Challenge */
class SOAP_CMAC ns6__Challenge : public ns7__EntityObject
{
public:
	int *ChallengeStatus;	/* optional element of type xsd:int */
	int *Challenge_USCOREId;	/* optional element of type xsd:int */
	ns6__ArrayOfChallenge_USCORESubscriptions *Challenge_USCORESubscriptions;	/* optional element of type ns6:ArrayOfChallenge_Subscriptions */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Emails;	/* optional element of type xsd:string */
	time_t *EndDate;	/* optional element of type xsd:dateTime */
	int *Measurement;	/* optional element of type xsd:int */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Name;	/* optional element of type xsd:string */
	bool *OpenToAll;	/* optional element of type xsd:boolean */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	int *Percent_USCORETarget_USCOREReduction;	/* optional element of type xsd:int */
	int *Percent_USCORETarget_USCOREValue;	/* optional element of type xsd:int */
	std::string *Reward;	/* optional element of type xsd:string */
	time_t *StartDate;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	class ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 406; } /* = unique id SOAP_TYPE_ns6__Challenge */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Challenge() { ns6__Challenge::soap_default(NULL); }
	virtual ~ns6__Challenge() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Challenge_USCORESubscriptions
#define SOAP_TYPE_ns6__Challenge_USCORESubscriptions (408)
/* ns6:Challenge_Subscriptions */
class SOAP_CMAC ns6__Challenge_USCORESubscriptions : public ns7__EntityObject
{
public:
	ns6__Challenge *Challenge;	/* optional element of type ns6:Challenge */
	class ns7__EntityReferenceOfChallengeNO7CylSe *ChallengeReference;	/* optional element of type ns7:EntityReferenceOfChallengeNO7CylSe */
	int *Challenge_USCOREId;	/* optional element of type xsd:int */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	int *IsSubscribed;	/* optional element of type xsd:int */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	time_t *Subscription_USCOREDate;	/* optional element of type xsd:dateTime */
	LONG64 *Subscription_USCOREID;	/* optional element of type xsd:long */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 408; } /* = unique id SOAP_TYPE_ns6__Challenge_USCORESubscriptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Challenge_USCORESubscriptions() { ns6__Challenge_USCORESubscriptions::soap_default(NULL); }
	virtual ~ns6__Challenge_USCORESubscriptions() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREMaster
#define SOAP_TYPE_ns6__User_USCOREMaster (409)
/* ns6:User_Master */
class SOAP_CMAC ns6__User_USCOREMaster : public ns7__EntityObject
{
public:
	bool *Access_USCOREStatus;	/* optional element of type xsd:boolean */
	ns6__ArrayOfChallenge_USCORESubscriptions *Challenge_USCORESubscriptions;	/* optional element of type ns6:ArrayOfChallenge_Subscriptions */
	ns6__ArrayOfChallenge *Challenges;	/* optional element of type ns6:ArrayOfChallenge */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDateTime;	/* optional element of type xsd:dateTime */
	ns6__ArrayOfCustom_USCOREReading_USCORERecords *Custom_USCOREReading_USCORERecords;	/* optional element of type ns6:ArrayOfCustom_Reading_Records */
	bool *Dependent_USCOREStatus;	/* optional element of type xsd:boolean */
	std::string *Login_USCOREType;	/* optional element of type xsd:string */
	std::string *Membership_USCOREUser_USCOREId;	/* optional element of type ns5:guid */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	int *Parent_USCOREUserId;	/* optional element of type xsd:int */
	ns6__ArrayOfReading_USCORERecords *Reading_USCORERecords;	/* optional element of type ns6:ArrayOfReading_Records */
	bool *Status;	/* optional element of type xsd:boolean */
	ns6__ArrayOfUser_USCOREAllergies *User_USCOREAllergies;	/* optional element of type ns6:ArrayOfUser_Allergies */
	std::string *User_USCORECategory;	/* optional element of type xsd:string */
	ns6__ArrayOfUser_USCORECompany_USCOREMapping *User_USCORECompany_USCOREMapping;	/* optional element of type ns6:ArrayOfUser_Company_Mapping */
	ns6__ArrayOfUser_USCOREContacts *User_USCOREContacts;	/* optional element of type ns6:ArrayOfUser_Contacts */
	ns6__ArrayOfUser_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings;	/* optional element of type ns6:ArrayOfUser_Custom_Readings */
	ns6__ArrayOfUser_USCOREDependent *User_USCOREDependent;	/* optional element of type ns6:ArrayOfUser_Dependent */
	ns6__ArrayOfUser_USCOREDocuments *User_USCOREDocuments;	/* optional element of type ns6:ArrayOfUser_Documents */
	ns6__ArrayOfUser_USCOREHealth_USCORECondition *User_USCOREHealth_USCORECondition;	/* optional element of type ns6:ArrayOfUser_Health_Condition */
	ns6__ArrayOfUser_USCOREHealth_USCOREProfile *User_USCOREHealth_USCOREProfile;	/* optional element of type ns6:ArrayOfUser_Health_Profile */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__ArrayOfUser_USCOREIncidents *User_USCOREIncidents;	/* optional element of type ns6:ArrayOfUser_Incidents */
	ns6__ArrayOfUser_USCOREKeepWatch *User_USCOREKeepWatch;	/* optional element of type ns6:ArrayOfUser_KeepWatch */
	ns6__ArrayOfUser_USCOREMedications *User_USCOREMedications;	/* optional element of type ns6:ArrayOfUser_Medications */
	ns6__ArrayOfUser_USCOREProfile *User_USCOREProfile;	/* optional element of type ns6:ArrayOfUser_Profile */
	ns6__ArrayOfUser_USCOREService_USCOREProvider *User_USCOREService_USCOREProvider;	/* optional element of type ns6:ArrayOfUser_Service_Provider */
	ns6__ArrayOfUser_USCORESettings *User_USCORESettings;	/* optional element of type ns6:ArrayOfUser_Settings */
	ns6__ArrayOfUser_USCORESharing *User_USCORESharing;	/* optional element of type ns6:ArrayOfUser_Sharing */
public:
	virtual int soap_type() const { return 409; } /* = unique id SOAP_TYPE_ns6__User_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREMaster() { ns6__User_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__User_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Custom_USCOREReading_USCORERecords
#define SOAP_TYPE_ns6__Custom_USCOREReading_USCORERecords (411)
/* ns6:Custom_Reading_Records */
class SOAP_CMAC ns6__Custom_USCOREReading_USCORERecords : public ns7__EntityObject
{
public:
	std::string *Comments;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	int *Custom_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	int *Custom_USCOREReading_USCORERecordsId;	/* optional element of type xsd:int */
	bool *Lower_USCOREThe_USCOREBetter;	/* optional element of type xsd:boolean */
	int *Measurement_USCOREBy;	/* optional element of type xsd:int */
	std::string *Measurement_USCOREContext;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *NormalRange;	/* optional element of type xsd:string */
	int *Parent_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	time_t *Reading_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Reading_USCOREName;	/* optional element of type xsd:string */
	std::string *Reading_USCORETime;	/* optional element of type ns5:duration */
	double *Reading_USCOREValue;	/* optional element of type xsd:double */
	std::string *Target_USCOREMax_USCOREValue;	/* optional element of type xsd:string */
	std::string *Target_USCOREMin_USCOREValue;	/* optional element of type xsd:string */
	bool *Target_USCORERange;	/* optional element of type xsd:boolean */
	std::string *Target_USCOREValue;	/* optional element of type xsd:string */
	ns6__User_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings;	/* optional element of type ns6:User_Custom_Readings */
	ns6__User_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings1;	/* optional element of type ns6:User_Custom_Readings */
	class ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe *User_USCORECustom_USCOREReadings1Reference;	/* optional element of type ns7:EntityReferenceOfUser_Custom_ReadingsNO7CylSe */
	ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe *User_USCORECustom_USCOREReadingsReference;	/* optional element of type ns7:EntityReferenceOfUser_Custom_ReadingsNO7CylSe */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
	std::string *Website_USCOREReference;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 411; } /* = unique id SOAP_TYPE_ns6__Custom_USCOREReading_USCORERecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Custom_USCOREReading_USCORERecords() { ns6__Custom_USCOREReading_USCORERecords::soap_default(NULL); }
	virtual ~ns6__Custom_USCOREReading_USCORERecords() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCORECustom_USCOREReadings
#define SOAP_TYPE_ns6__User_USCORECustom_USCOREReadings (412)
/* ns6:User_Custom_Readings */
class SOAP_CMAC ns6__User_USCORECustom_USCOREReadings : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	int *Custom_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	ns6__ArrayOfCustom_USCOREReading_USCORERecords *Custom_USCOREReading_USCORERecords;	/* optional element of type ns6:ArrayOfCustom_Reading_Records */
	ns6__ArrayOfCustom_USCOREReading_USCORERecords *Custom_USCOREReading_USCORERecords1;	/* optional element of type ns6:ArrayOfCustom_Reading_Records */
	bool *HasChild;	/* optional element of type xsd:boolean */
	bool *Lower_USCOREBetter;	/* optional element of type xsd:boolean */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *NormalRange;	/* optional element of type xsd:string */
	int *Parent_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	std::string *Reading_USCOREDescription;	/* optional element of type xsd:string */
	std::string *Reading_USCOREGroup;	/* optional element of type xsd:string */
	std::string *Reading_USCOREName;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	int *Unit_USCOREId;	/* optional element of type xsd:int */
	ns6__Units_USCOREMaster *Units_USCOREMaster;	/* optional element of type ns6:Units_Master */
	class ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe *Units_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUnits_MasterNO7CylSe */
	ns6__ArrayOfUser_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings1;	/* optional element of type ns6:ArrayOfUser_Custom_Readings */
	ns6__User_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings2;	/* optional element of type ns6:User_Custom_Readings */
	ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe *User_USCORECustom_USCOREReadings2Reference;	/* optional element of type ns7:EntityReferenceOfUser_Custom_ReadingsNO7CylSe */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
	std::string *Website_USCOREReference;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 412; } /* = unique id SOAP_TYPE_ns6__User_USCORECustom_USCOREReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCORECustom_USCOREReadings() { ns6__User_USCORECustom_USCOREReadings::soap_default(NULL); }
	virtual ~ns6__User_USCORECustom_USCOREReadings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Units_USCOREMaster
#define SOAP_TYPE_ns6__Units_USCOREMaster (413)
/* ns6:Units_Master */
class SOAP_CMAC ns6__Units_USCOREMaster : public ns7__EntityObject
{
public:
	ns6__ArrayOfDefined_USCOREReadings *Defined_USCOREReadings;	/* optional element of type ns6:ArrayOfDefined_Readings */
	ns6__ArrayOfMeasurement_USCORESafe_USCORERanges *Measurement_USCORESafe_USCORERanges;	/* optional element of type ns6:ArrayOfMeasurement_Safe_Ranges */
	std::string *Unit_USCOREDesc;	/* optional element of type xsd:string */
	int *Unit_USCOREId;	/* optional element of type xsd:int */
	std::string *Unit_USCOREName;	/* optional element of type xsd:string */
	ns6__ArrayOfUser_USCORECustom_USCOREReadings *User_USCORECustom_USCOREReadings;	/* optional element of type ns6:ArrayOfUser_Custom_Readings */
public:
	virtual int soap_type() const { return 413; } /* = unique id SOAP_TYPE_ns6__Units_USCOREMaster */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Units_USCOREMaster() { ns6__Units_USCOREMaster::soap_default(NULL); }
	virtual ~ns6__Units_USCOREMaster() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Defined_USCOREReadings
#define SOAP_TYPE_ns6__Defined_USCOREReadings (415)
/* ns6:Defined_Readings */
class SOAP_CMAC ns6__Defined_USCOREReadings : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Default_USCOREValue;	/* optional element of type xsd:string */
	ns6__ArrayOfDefined_USCOREReadings *Defined_USCOREReadings1;	/* optional element of type ns6:ArrayOfDefined_Readings */
	ns6__Defined_USCOREReadings *Defined_USCOREReadings2;	/* optional element of type ns6:Defined_Readings */
	class ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe *Defined_USCOREReadings2Reference;	/* optional element of type ns7:EntityReferenceOfDefined_ReadingsNO7CylSe */
	bool *Disabled;	/* optional element of type xsd:boolean */
	std::string *Groups;	/* optional element of type xsd:string */
	bool *HasChild;	/* optional element of type xsd:boolean */
	bool *Measurement_USCOREContext;	/* optional element of type xsd:boolean */
	ns6__ArrayOfMeasurement_USCORESafe_USCORERanges *Measurement_USCORESafe_USCORERanges;	/* optional element of type ns6:ArrayOfMeasurement_Safe_Ranges */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *NormalRange;	/* optional element of type xsd:string */
	int *Parent_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	std::string *Reading_USCOREDesc;	/* optional element of type xsd:string */
	int *Reading_USCOREId;	/* optional element of type xsd:int */
	std::string *Reading_USCOREName;	/* optional element of type xsd:string */
	ns6__ArrayOfReading_USCORERecords *Reading_USCORERecords;	/* optional element of type ns6:ArrayOfReading_Records */
	ns6__ArrayOfReading_USCORERecords *Reading_USCORERecords1;	/* optional element of type ns6:ArrayOfReading_Records */
	std::string *Remarks;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	int *Unit_USCOREId;	/* optional element of type xsd:int */
	ns6__Units_USCOREMaster *Units_USCOREMaster;	/* optional element of type ns6:Units_Master */
	ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe *Units_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUnits_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 415; } /* = unique id SOAP_TYPE_ns6__Defined_USCOREReadings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Defined_USCOREReadings() { ns6__Defined_USCOREReadings::soap_default(NULL); }
	virtual ~ns6__Defined_USCOREReadings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Measurement_USCORESafe_USCORERanges
#define SOAP_TYPE_ns6__Measurement_USCORESafe_USCORERanges (417)
/* ns6:Measurement_Safe_Ranges */
class SOAP_CMAC ns6__Measurement_USCORESafe_USCORERanges : public ns7__EntityObject
{
public:
	int *Age_USCORERange_USCOREMax;	/* optional element of type xsd:int */
	int *Age_USCORERange_USCOREMin;	/* optional element of type xsd:int */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	ns6__Defined_USCOREReadings *Defined_USCOREReadings;	/* optional element of type ns6:Defined_Readings */
	ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe *Defined_USCOREReadingsReference;	/* optional element of type ns7:EntityReferenceOfDefined_ReadingsNO7CylSe */
	std::string *Gender;	/* optional element of type xsd:string */
	bool *Lower_USCOREthe_USCOREBetter;	/* optional element of type xsd:boolean */
	std::string *Protocol_USCOREReference;	/* optional element of type xsd:string */
	int *Reading_USCOREId;	/* optional element of type xsd:int */
	int *Safe_USCORERange_USCOREId;	/* optional element of type xsd:int */
	double *Safe_USCORERange_USCOREMax;	/* optional element of type xsd:double */
	double *Safe_USCORERange_USCOREMin;	/* optional element of type xsd:double */
	double *Target_USCOREValue;	/* optional element of type xsd:double */
	int *Unit_USCOREId;	/* optional element of type xsd:int */
	ns6__Units_USCOREMaster *Units_USCOREMaster;	/* optional element of type ns6:Units_Master */
	ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe *Units_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUnits_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 417; } /* = unique id SOAP_TYPE_ns6__Measurement_USCORESafe_USCORERanges */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Measurement_USCORESafe_USCORERanges() { ns6__Measurement_USCORESafe_USCORERanges::soap_default(NULL); }
	virtual ~ns6__Measurement_USCORESafe_USCORERanges() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Reading_USCORERecords
#define SOAP_TYPE_ns6__Reading_USCORERecords (419)
/* ns6:Reading_Records */
class SOAP_CMAC ns6__Reading_USCORERecords : public ns7__EntityObject
{
public:
	bool *Can_USCOREIgnore;	/* optional element of type xsd:boolean */
	std::string *Comments;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	ns6__Defined_USCOREReadings *Defined_USCOREReadings;	/* optional element of type ns6:Defined_Readings */
	ns6__Defined_USCOREReadings *Defined_USCOREReadings1;	/* optional element of type ns6:Defined_Readings */
	ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe *Defined_USCOREReadings1Reference;	/* optional element of type ns7:EntityReferenceOfDefined_ReadingsNO7CylSe */
	ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe *Defined_USCOREReadingsReference;	/* optional element of type ns7:EntityReferenceOfDefined_ReadingsNO7CylSe */
	int *Measurement_USCOREBy;	/* optional element of type xsd:int */
	std::string *Measurement_USCOREContext;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	int *Parent_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	int *ReadingRecord_USCOREId;	/* optional element of type xsd:int */
	time_t *Reading_USCOREDate;	/* optional element of type xsd:dateTime */
	int *Reading_USCOREId;	/* optional element of type xsd:int */
	std::string *Reading_USCORETime;	/* optional element of type ns5:duration */
	double *Reading_USCOREValue;	/* optional element of type xsd:double */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 419; } /* = unique id SOAP_TYPE_ns6__Reading_USCORERecords */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Reading_USCORERecords() { ns6__Reading_USCORERecords::soap_default(NULL); }
	virtual ~ns6__Reading_USCORERecords() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREAllergies
#define SOAP_TYPE_ns6__User_USCOREAllergies (422)
/* ns6:User_Allergies */
class SOAP_CMAC ns6__User_USCOREAllergies : public ns7__EntityObject
{
public:
	int *Allergy_USCOREId;	/* optional element of type xsd:int */
	std::string *Allergy_USCOREName;	/* optional element of type xsd:string */
	std::string *Allergy_USCOREStatus;	/* optional element of type xsd:string */
	std::string *Allergy_USCOREType;	/* optional element of type xsd:string */
	std::string *Comments;	/* optional element of type xsd:string */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *NoKnown_USCOREAllergy;	/* optional element of type xsd:boolean */
	bool *NoKnown_USCOREDrugAllergy;	/* optional element of type xsd:boolean */
	std::string *Other_USCOREAllergy_USCOREName;	/* optional element of type xsd:string */
	time_t *Start_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 422; } /* = unique id SOAP_TYPE_ns6__User_USCOREAllergies */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREAllergies() { ns6__User_USCOREAllergies::soap_default(NULL); }
	virtual ~ns6__User_USCOREAllergies() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCORECompany_USCOREMapping
#define SOAP_TYPE_ns6__User_USCORECompany_USCOREMapping (424)
/* ns6:User_Company_Mapping */
class SOAP_CMAC ns6__User_USCORECompany_USCOREMapping : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	time_t *Date_USCOREOf_USCOREJoining;	/* optional element of type xsd:dateTime */
	std::string *Employee_USCOREId;	/* optional element of type xsd:string */
	time_t *End_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Official_USCOREEmail;	/* optional element of type xsd:string */
	int *Org_USCORELocation_USCOREId;	/* optional element of type xsd:int */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCORELocations *Organization_USCORELocations;	/* optional element of type ns6:Organization_Locations */
	class ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe *Organization_USCORELocationsReference;	/* optional element of type ns7:EntityReferenceOfOrganization_LocationsNO7CylSe */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	time_t *Start_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
	int *User_USCOREOrganization_USCOREId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 424; } /* = unique id SOAP_TYPE_ns6__User_USCORECompany_USCOREMapping */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCORECompany_USCOREMapping() { ns6__User_USCORECompany_USCOREMapping::soap_default(NULL); }
	virtual ~ns6__User_USCORECompany_USCOREMapping() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Organization_USCORELocations
#define SOAP_TYPE_ns6__Organization_USCORELocations (425)
/* ns6:Organization_Locations */
class SOAP_CMAC ns6__Organization_USCORELocations : public ns7__EntityObject
{
public:
	std::string *Address;	/* optional element of type xsd:string */
	std::string *City;	/* optional element of type xsd:string */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	int *Location_USCOREId;	/* optional element of type xsd:int */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	LONG64 *No_USCOREOf_USCOREEmplyees_USCOREatLocation;	/* optional element of type xsd:long */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	std::string *Primary_USCOREContactEmail;	/* optional element of type xsd:string */
	std::string *Primary_USCOREContactPerson;	/* optional element of type xsd:string */
	std::string *Primary_USCOREContactPhone;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	std::string *Sub_USCORELocation;	/* optional element of type xsd:string */
	ns6__ArrayOfUser_USCORECompany_USCOREMapping *User_USCORECompany_USCOREMapping;	/* optional element of type ns6:ArrayOfUser_Company_Mapping */
public:
	virtual int soap_type() const { return 425; } /* = unique id SOAP_TYPE_ns6__Organization_USCORELocations */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Organization_USCORELocations() { ns6__Organization_USCORELocations::soap_default(NULL); }
	virtual ~ns6__Organization_USCORELocations() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREContacts
#define SOAP_TYPE_ns6__User_USCOREContacts (427)
/* ns6:User_Contacts */
class SOAP_CMAC ns6__User_USCOREContacts : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDateTime;	/* optional element of type xsd:dateTime */
	std::string *Dependant_USCOREEmail;	/* optional element of type xsd:string */
	int *Dependant_USCOREId;	/* optional element of type xsd:int */
	std::string *Dependant_USCOREName;	/* optional element of type xsd:string */
	std::string *Dependant_USCOREPhone;	/* optional element of type xsd:string */
	std::string *Dependant_USCORERelatioship;	/* optional element of type xsd:string */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 427; } /* = unique id SOAP_TYPE_ns6__User_USCOREContacts */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREContacts() { ns6__User_USCOREContacts::soap_default(NULL); }
	virtual ~ns6__User_USCOREContacts() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREDependent
#define SOAP_TYPE_ns6__User_USCOREDependent (429)
/* ns6:User_Dependent */
class SOAP_CMAC ns6__User_USCOREDependent : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	bool *Dep_USCOREBloodRelative;	/* optional element of type xsd:boolean */
	time_t *Dep_USCOREDOB;	/* optional element of type xsd:dateTime */
	std::string *Dep_USCOREEmail;	/* optional element of type xsd:string */
	bool *Dep_USCOREIndependentAccess_USCOREYN;	/* optional element of type xsd:boolean */
	std::string *Dep_USCOREInviteMsg;	/* optional element of type xsd:string */
	std::string *Dep_USCOREName;	/* optional element of type xsd:string */
	std::string *Dep_USCORERelationship;	/* optional element of type xsd:string */
	int *Dep_USCOREUserId;	/* optional element of type xsd:int */
	int *Dependant_USCOREId;	/* optional element of type xsd:int */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 429; } /* = unique id SOAP_TYPE_ns6__User_USCOREDependent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREDependent() { ns6__User_USCOREDependent::soap_default(NULL); }
	virtual ~ns6__User_USCOREDependent() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREDocuments
#define SOAP_TYPE_ns6__User_USCOREDocuments (431)
/* ns6:User_Documents */
class SOAP_CMAC ns6__User_USCOREDocuments : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	int *Document_USCOREId;	/* optional element of type xsd:int */
	LONG64 *Document_USCORESize;	/* optional element of type xsd:long */
	std::string *Document_USCORETitle;	/* optional element of type xsd:string */
	xsd__base64Binary *Documents;	/* optional element of type xsd:base64Binary */
	std::string *Extension;	/* optional element of type xsd:string */
	int *Incident_USCOREId;	/* optional element of type xsd:int */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREIncidents *User_USCOREIncidents;	/* optional element of type ns6:User_Incidents */
	class ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe *User_USCOREIncidentsReference;	/* optional element of type ns7:EntityReferenceOfUser_IncidentsNO7CylSe */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 431; } /* = unique id SOAP_TYPE_ns6__User_USCOREDocuments */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREDocuments() { ns6__User_USCOREDocuments::soap_default(NULL); }
	virtual ~ns6__User_USCOREDocuments() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREIncidents
#define SOAP_TYPE_ns6__User_USCOREIncidents (432)
/* ns6:User_Incidents */
class SOAP_CMAC ns6__User_USCOREIncidents : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Description;	/* optional element of type xsd:string */
	std::string *Doctor_USCOREName;	/* optional element of type xsd:string */
	xsd__base64Binary *Documents;	/* optional element of type xsd:base64Binary */
	time_t *From_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Hosp_USCOREProcedure;	/* optional element of type xsd:string */
	std::string *Hosp_USCOREReason;	/* optional element of type xsd:string */
	std::string *Hospital_USCORECity;	/* optional element of type xsd:string */
	std::string *Hospital_USCOREName;	/* optional element of type xsd:string */
	std::string *ICD_USCOREClass;	/* optional element of type xsd:string */
	int *Incident_USCOREId;	/* optional element of type xsd:int */
	std::string *Incident_USCOREType;	/* optional element of type xsd:string */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Out_USCORERoutine_USCOREAcute;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	time_t *To_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Treatment;	/* optional element of type xsd:string */
	ns6__ArrayOfUser_USCOREDocuments *User_USCOREDocuments;	/* optional element of type ns6:ArrayOfUser_Documents */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 432; } /* = unique id SOAP_TYPE_ns6__User_USCOREIncidents */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREIncidents() { ns6__User_USCOREIncidents::soap_default(NULL); }
	virtual ~ns6__User_USCOREIncidents() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREHealth_USCORECondition
#define SOAP_TYPE_ns6__User_USCOREHealth_USCORECondition (434)
/* ns6:User_Health_Condition */
class SOAP_CMAC ns6__User_USCOREHealth_USCORECondition : public ns7__EntityObject
{
public:
	int *Condition_USCOREId;	/* optional element of type xsd:int */
	std::string *Condition_USCOREStatus;	/* optional element of type xsd:string */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Custom_USCORECondition_USCOREName;	/* optional element of type xsd:string */
	class ns6__Defined_USCORECondition *Defined_USCORECondition;	/* optional element of type ns6:Defined_Condition */
	int *Defined_USCOREConditionId;	/* optional element of type xsd:int */
	class ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe *Defined_USCOREConditionReference;	/* optional element of type ns7:EntityReferenceOfDefined_ConditionNO7CylSe */
	int *Duration;	/* optional element of type xsd:int */
	std::string *Family_USCOREMembers_USCOREDiagnosed;	/* optional element of type xsd:string */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	bool *On_USCOREMedication;	/* optional element of type xsd:boolean */
	time_t *Start_USCOREMonthYear;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 434; } /* = unique id SOAP_TYPE_ns6__User_USCOREHealth_USCORECondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREHealth_USCORECondition() { ns6__User_USCOREHealth_USCORECondition::soap_default(NULL); }
	virtual ~ns6__User_USCOREHealth_USCORECondition() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Defined_USCORECondition
#define SOAP_TYPE_ns6__Defined_USCORECondition (435)
/* ns6:Defined_Condition */
class SOAP_CMAC ns6__Defined_USCORECondition : public ns7__EntityObject
{
public:
	std::string *Condition_USCOREName;	/* optional element of type xsd:string */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	int *Defined_USCOREConditionId;	/* optional element of type xsd:int */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	ns6__ArrayOfUser_USCOREHealth_USCORECondition *User_USCOREHealth_USCORECondition;	/* optional element of type ns6:ArrayOfUser_Health_Condition */
public:
	virtual int soap_type() const { return 435; } /* = unique id SOAP_TYPE_ns6__Defined_USCORECondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Defined_USCORECondition() { ns6__Defined_USCORECondition::soap_default(NULL); }
	virtual ~ns6__Defined_USCORECondition() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREHealth_USCOREProfile
#define SOAP_TYPE_ns6__User_USCOREHealth_USCOREProfile (437)
/* ns6:User_Health_Profile */
class SOAP_CMAC ns6__User_USCOREHealth_USCOREProfile : public ns7__EntityObject
{
public:
	time_t *CreatedDate;	/* optional element of type xsd:dateTime */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	std::string *Ethnicity;	/* optional element of type xsd:string */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Nature_USCOREOf_USCOREWork;	/* optional element of type xsd:string */
	bool *Parents_USCORERelated;	/* optional element of type xsd:boolean */
	std::string *Physical_USCOREActivity;	/* optional element of type xsd:string */
	int *Siblings;	/* optional element of type xsd:int */
	std::string *Smoking_USCOREStatus;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	std::string *Twin_USCOREStatus;	/* optional element of type xsd:string */
	int *User_USCOREHealth_USCOREId;	/* optional element of type xsd:int */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 437; } /* = unique id SOAP_TYPE_ns6__User_USCOREHealth_USCOREProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREHealth_USCOREProfile() { ns6__User_USCOREHealth_USCOREProfile::soap_default(NULL); }
	virtual ~ns6__User_USCOREHealth_USCOREProfile() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREKeepWatch
#define SOAP_TYPE_ns6__User_USCOREKeepWatch (440)
/* ns6:User_KeepWatch */
class SOAP_CMAC ns6__User_USCOREKeepWatch : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Email;	/* optional element of type xsd:string */
	bool *Email_USCOREAlert;	/* optional element of type xsd:boolean */
	std::string *Goal_USCOREName;	/* optional element of type xsd:string */
	int *KeepWatch_USCOREId;	/* optional element of type xsd:int */
	int *Linked_USCOREReading_USCOREId;	/* optional element of type xsd:int */
	bool *Lower_USCOREThe_USCOREBetter;	/* optional element of type xsd:boolean */
	std::string *Mobile;	/* optional element of type xsd:string */
	bool *Mobile_USCOREalert;	/* optional element of type xsd:boolean */
	time_t *Modified_USCOREDate;	/* optional element of type xsd:dateTime */
	std::string *Parameter;	/* optional element of type xsd:string */
	std::string *Parameter_USCOREOption;	/* optional element of type xsd:string */
	double *Start_USCOREValue;	/* optional element of type xsd:double */
	bool *Status;	/* optional element of type xsd:boolean */
	time_t *Target_USCOREDate;	/* optional element of type xsd:dateTime */
	double *Target_USCOREValue;	/* optional element of type xsd:double */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 440; } /* = unique id SOAP_TYPE_ns6__User_USCOREKeepWatch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREKeepWatch() { ns6__User_USCOREKeepWatch::soap_default(NULL); }
	virtual ~ns6__User_USCOREKeepWatch() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREMedications
#define SOAP_TYPE_ns6__User_USCOREMedications (442)
/* ns6:User_Medications */
class SOAP_CMAC ns6__User_USCOREMedications : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	int *Expected_USCOREDuration;	/* optional element of type xsd:int */
	bool *Immunization_USCOREYN;	/* optional element of type xsd:boolean */
	bool *Lifelong_USCOREYN;	/* optional element of type xsd:boolean */
	int *Medication_USCOREId;	/* optional element of type xsd:int */
	std::string *Medication_USCOREName;	/* optional element of type xsd:string */
	std::string *Medication_USCOREPurpose;	/* optional element of type xsd:string */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	bool *Self_USCOREAdminstered_USCOREYN;	/* optional element of type xsd:boolean */
	time_t *Start_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 442; } /* = unique id SOAP_TYPE_ns6__User_USCOREMedications */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREMedications() { ns6__User_USCOREMedications::soap_default(NULL); }
	virtual ~ns6__User_USCOREMedications() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREProfile
#define SOAP_TYPE_ns6__User_USCOREProfile (444)
/* ns6:User_Profile */
class SOAP_CMAC ns6__User_USCOREProfile : public ns7__EntityObject
{
public:
	std::string *Alternate_USCOREEmail;	/* optional element of type xsd:string */
	std::string *City;	/* optional element of type xsd:string */
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Current_USCOREEmployer;	/* optional element of type xsd:string */
	time_t *Date_USCOREOf_USCOREBirth;	/* optional element of type xsd:dateTime */
	std::string *Email;	/* optional element of type xsd:string */
	std::string *Emergency_USCOREContactPhone;	/* optional element of type xsd:string */
	std::string *First_USCOREname;	/* optional element of type xsd:string */
	std::string *FullName;	/* optional element of type xsd:string */
	std::string *Gender;	/* optional element of type xsd:string */
	std::string *Home_USCOREAddress;	/* optional element of type xsd:string */
	std::string *Insurer;	/* optional element of type xsd:string */
	std::string *Landline;	/* optional element of type xsd:string */
	std::string *Language_USCOREPrefered;	/* optional element of type xsd:string */
	std::string *Last_USCOREName;	/* optional element of type xsd:string */
	std::string *Mobile;	/* optional element of type xsd:string */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *NickName;	/* optional element of type xsd:string */
	xsd__base64Binary *Picture;	/* optional element of type xsd:base64Binary */
	std::string *PinCode;	/* optional element of type xsd:string */
	int *Profile_USCOREId;	/* optional element of type xsd:int */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 444; } /* = unique id SOAP_TYPE_ns6__User_USCOREProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREProfile() { ns6__User_USCOREProfile::soap_default(NULL); }
	virtual ~ns6__User_USCOREProfile() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCOREService_USCOREProvider
#define SOAP_TYPE_ns6__User_USCOREService_USCOREProvider (446)
/* ns6:User_Service_Provider */
class SOAP_CMAC ns6__User_USCOREService_USCOREProvider : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDateTime;	/* optional element of type xsd:dateTime */
	int *PKID;	/* optional element of type xsd:int */
	std::string *Sp_USCOREAddress;	/* optional element of type xsd:string */
	std::string *Sp_USCORECity;	/* optional element of type xsd:string */
	std::string *Sp_USCOREClassification;	/* optional element of type xsd:string */
	std::string *Sp_USCOREContactPhone;	/* optional element of type xsd:string */
	std::string *Sp_USCOREEmail;	/* optional element of type xsd:string */
	std::string *Sp_USCOREName;	/* optional element of type xsd:string */
	std::string *Sp_USCOREURL;	/* optional element of type xsd:string */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 446; } /* = unique id SOAP_TYPE_ns6__User_USCOREService_USCOREProvider */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCOREService_USCOREProvider() { ns6__User_USCOREService_USCOREProvider::soap_default(NULL); }
	virtual ~ns6__User_USCOREService_USCOREProvider() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCORESettings
#define SOAP_TYPE_ns6__User_USCORESettings (448)
/* ns6:User_Settings */
class SOAP_CMAC ns6__User_USCORESettings : public ns7__EntityObject
{
public:
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Setting_USCOREName;	/* optional element of type xsd:string */
	std::string *Setting_USCOREValue;	/* optional element of type xsd:string */
	bool *Status;	/* optional element of type xsd:boolean */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
	int *User_USCORESetting_USCOREId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 448; } /* = unique id SOAP_TYPE_ns6__User_USCORESettings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCORESettings() { ns6__User_USCORESettings::soap_default(NULL); }
	virtual ~ns6__User_USCORESettings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__User_USCORESharing
#define SOAP_TYPE_ns6__User_USCORESharing (450)
/* ns6:User_Sharing */
class SOAP_CMAC ns6__User_USCORESharing : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCOREDatetime;	/* optional element of type xsd:dateTime */
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	bool *Record_USCOREStatus;	/* optional element of type xsd:boolean */
	time_t *Share_USCOREAcceptance_USCOREDate;	/* optional element of type xsd:dateTime */
	time_t *Share_USCORECreation_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *Share_USCOREDemo_USCOREProfile_USCOREYN;	/* optional element of type xsd:boolean */
	std::string *Share_USCOREEmail;	/* optional element of type xsd:string */
	bool *Share_USCOREHealth_USCOREProfile_USCOREYN;	/* optional element of type xsd:boolean */
	bool *Share_USCOREHospitalizations_USCOREYN;	/* optional element of type xsd:boolean */
	int *Share_USCOREId;	/* optional element of type xsd:int */
	bool *Share_USCOREIndications_USCOREYN;	/* optional element of type xsd:boolean */
	bool *Share_USCOREKeepwatchOn;	/* optional element of type xsd:boolean */
	bool *Share_USCOREMedications_USCOREYN;	/* optional element of type xsd:boolean */
	std::string *Share_USCOREName;	/* optional element of type xsd:string */
	bool *Share_USCOREReadings_USCOREYN;	/* optional element of type xsd:boolean */
	std::string *Share_USCOREReasons;	/* optional element of type xsd:string */
	time_t *Share_USCORERemoval_USCOREDate;	/* optional element of type xsd:dateTime */
	bool *Share_USCOREReports_USCOREYN;	/* optional element of type xsd:boolean */
	std::string *Shared_USCOREUser_USCOREUserId;	/* optional element of type xsd:string */
	int *User_USCOREId;	/* optional element of type xsd:int */
	ns6__User_USCOREMaster *User_USCOREMaster;	/* optional element of type ns6:User_Master */
	ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe *User_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfUser_MasterNO7CylSe */
public:
	virtual int soap_type() const { return 450; } /* = unique id SOAP_TYPE_ns6__User_USCORESharing */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__User_USCORESharing() { ns6__User_USCORESharing::soap_default(NULL); }
	virtual ~ns6__User_USCORESharing() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Organization_USCORELogins
#define SOAP_TYPE_ns6__Organization_USCORELogins (453)
/* ns6:Organization_Logins */
class SOAP_CMAC ns6__Organization_USCORELogins : public ns7__EntityObject
{
public:
	std::string *Created_USCOREBy;	/* optional element of type xsd:string */
	time_t *Created_USCORETime;	/* optional element of type xsd:dateTime */
	std::string *Email;	/* optional element of type xsd:string */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	int *Organization_USCORELogin_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	std::string *Organization_USCOREUserId;	/* optional element of type ns5:guid */
	bool *Status;	/* optional element of type xsd:boolean */
	time_t *Valid_USCORETill;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 453; } /* = unique id SOAP_TYPE_ns6__Organization_USCORELogins */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Organization_USCORELogins() { ns6__Organization_USCORELogins::soap_default(NULL); }
	virtual ~ns6__Organization_USCORELogins() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Organization_USCORESettings
#define SOAP_TYPE_ns6__Organization_USCORESettings (455)
/* ns6:Organization_Settings */
class SOAP_CMAC ns6__Organization_USCORESettings : public ns7__EntityObject
{
public:
	std::string *Modified_USCOREBy;	/* optional element of type xsd:string */
	time_t *Modified_USCORETime;	/* optional element of type xsd:dateTime */
	int *Organization_USCOREId;	/* optional element of type xsd:int */
	ns6__Organization_USCOREMaster *Organization_USCOREMaster;	/* optional element of type ns6:Organization_Master */
	ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe *Organization_USCOREMasterReference;	/* optional element of type ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
	std::string *Setting_USCOREName;	/* optional element of type xsd:string */
	std::string *Setting_USCOREValue;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 455; } /* = unique id SOAP_TYPE_ns6__Organization_USCORESettings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Organization_USCORESettings() { ns6__Organization_USCORESettings::soap_default(NULL); }
	virtual ~ns6__Organization_USCORESettings() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ApplicationLog
#define SOAP_TYPE_ns6__ApplicationLog (470)
/* ns6:ApplicationLog */
class SOAP_CMAC ns6__ApplicationLog : public ns7__EntityObject
{
public:
	time_t *Date;	/* optional element of type xsd:dateTime */
	std::string *Exception;	/* optional element of type xsd:string */
	int *Id;	/* optional element of type xsd:int */
	std::string *Level;	/* optional element of type xsd:string */
	std::string *Logger;	/* optional element of type xsd:string */
	std::string *Message;	/* optional element of type xsd:string */
	std::string *Thread;	/* optional element of type xsd:string */
	std::string *User;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 470; } /* = unique id SOAP_TYPE_ns6__ApplicationLog */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ApplicationLog() { ns6__ApplicationLog::soap_default(NULL); }
	virtual ~ns6__ApplicationLog() { }
};
#endif

#ifndef SOAP_TYPE_ns6__CommonEnumeratedValue
#define SOAP_TYPE_ns6__CommonEnumeratedValue (473)
/* ns6:CommonEnumeratedValue */
class SOAP_CMAC ns6__CommonEnumeratedValue : public ns7__EntityObject
{
public:
	class ns6__CommonEnumeratedName *CommonEnumeratedName;	/* optional element of type ns6:CommonEnumeratedName */
	class ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe *CommonEnumeratedNameReference;	/* optional element of type ns7:EntityReferenceOfCommonEnumeratedNameNO7CylSe */
	int *DropDownOrder;	/* optional element of type xsd:int */
	int *DropDown_USCOREID;	/* optional element of type xsd:int */
	int *Id;	/* optional element of type xsd:int */
	std::string *TextField;	/* optional element of type xsd:string */
	int *Value;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 473; } /* = unique id SOAP_TYPE_ns6__CommonEnumeratedValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__CommonEnumeratedValue() { ns6__CommonEnumeratedValue::soap_default(NULL); }
	virtual ~ns6__CommonEnumeratedValue() { }
};
#endif

#ifndef SOAP_TYPE_ns6__CommonEnumeratedName
#define SOAP_TYPE_ns6__CommonEnumeratedName (474)
/* ns6:CommonEnumeratedName */
class SOAP_CMAC ns6__CommonEnumeratedName : public ns7__EntityObject
{
public:
	ns6__ArrayOfCommonEnumeratedValue *CommonEnumeratedValues;	/* optional element of type ns6:ArrayOfCommonEnumeratedValue */
	std::string *DropDownName;	/* optional element of type xsd:string */
	int *DropDown_USCOREId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 474; } /* = unique id SOAP_TYPE_ns6__CommonEnumeratedName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__CommonEnumeratedName() { ns6__CommonEnumeratedName::soap_default(NULL); }
	virtual ~ns6__CommonEnumeratedName() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfChallengeNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfChallengeNO7CylSe (478)
/* ns7:EntityReferenceOfChallengeNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfChallengeNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 478; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfChallengeNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfChallengeNO7CylSe() { ns7__EntityReferenceOfChallengeNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfChallengeNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe (481)
/* ns7:EntityReferenceOfDefined_ReadingsNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 481; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe() { ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfDefined_USCOREReadingsNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe (482)
/* ns7:EntityReferenceOfUnits_MasterNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 482; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe() { ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfUnits_USCOREMasterNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe (483)
/* ns7:EntityReferenceOfUser_MasterNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 483; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe() { ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfUser_USCOREMasterNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe (484)
/* ns7:EntityReferenceOfUser_Custom_ReadingsNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 484; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe() { ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfUser_USCORECustom_USCOREReadingsNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe (485)
/* ns7:EntityReferenceOfOrganization_MasterNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 485; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe() { ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfOrganization_USCOREMasterNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe (486)
/* ns7:EntityReferenceOfOrganization_LocationsNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 486; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe() { ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfOrganization_USCORELocationsNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe (487)
/* ns7:EntityReferenceOfUser_IncidentsNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 487; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe() { ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfUser_USCOREIncidentsNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe (488)
/* ns7:EntityReferenceOfDefined_ConditionNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 488; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe() { ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfDefined_USCOREConditionNO7CylSe() { }
};
#endif

#ifndef SOAP_TYPE_ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe
#define SOAP_TYPE_ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe (489)
/* ns7:EntityReferenceOfCommonEnumeratedNameNO7CylSe */
class SOAP_CMAC ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe : public ns7__EntityReference
{
public:
	virtual int soap_type() const { return 489; } /* = unique id SOAP_TYPE_ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe() { ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe::soap_default(NULL); }
	virtual ~ns7__EntityReferenceOfCommonEnumeratedNameNO7CylSe() { }
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (689)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	ns4__ProcessExecutionFault *ns4__ProcessExecutionFault_;	/* optional element of type ns4:ProcessExecutionFault */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 689; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef SOAP_TYPE___ns1__GetAnnouncmenteDetailsByTitle
#define SOAP_TYPE___ns1__GetAnnouncmenteDetailsByTitle (696)
/* Operation wrapper: */
struct __ns1__GetAnnouncmenteDetailsByTitle
{
public:
	_ns3__GetAnnouncmenteDetailsByTitle *ns3__GetAnnouncmenteDetailsByTitle;	/* optional element of type ns3:GetAnnouncmenteDetailsByTitle */
public:
	int soap_type() const { return 696; } /* = unique id SOAP_TYPE___ns1__GetAnnouncmenteDetailsByTitle */
};
#endif

#ifndef SOAP_TYPE___ns1__LoadAnnouncementbyId
#define SOAP_TYPE___ns1__LoadAnnouncementbyId (700)
/* Operation wrapper: */
struct __ns1__LoadAnnouncementbyId
{
public:
	_ns3__LoadAnnouncementbyId *ns3__LoadAnnouncementbyId;	/* optional element of type ns3:LoadAnnouncementbyId */
public:
	int soap_type() const { return 700; } /* = unique id SOAP_TYPE___ns1__LoadAnnouncementbyId */
};
#endif

#ifndef SOAP_TYPE___ns1__LoadOrganizationdetails_USCOREById
#define SOAP_TYPE___ns1__LoadOrganizationdetails_USCOREById (704)
/* Operation wrapper: */
struct __ns1__LoadOrganizationdetails_USCOREById
{
public:
	_ns3__LoadOrganizationdetails_USCOREById *ns3__LoadOrganizationdetails_USCOREById;	/* optional element of type ns3:LoadOrganizationdetails_ById */
public:
	int soap_type() const { return 704; } /* = unique id SOAP_TYPE___ns1__LoadOrganizationdetails_USCOREById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetBMIValue
#define SOAP_TYPE___ns1__GetBMIValue (708)
/* Operation wrapper: */
struct __ns1__GetBMIValue
{
public:
	_ns3__GetBMIValue *ns3__GetBMIValue;	/* optional element of type ns3:GetBMIValue */
public:
	int soap_type() const { return 708; } /* = unique id SOAP_TYPE___ns1__GetBMIValue */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingRecordsForDepUser
#define SOAP_TYPE___ns1__GetReadingRecordsForDepUser (712)
/* Operation wrapper: */
struct __ns1__GetReadingRecordsForDepUser
{
public:
	_ns3__GetReadingRecordsForDepUser *ns3__GetReadingRecordsForDepUser;	/* optional element of type ns3:GetReadingRecordsForDepUser */
public:
	int soap_type() const { return 712; } /* = unique id SOAP_TYPE___ns1__GetReadingRecordsForDepUser */
};
#endif

#ifndef SOAP_TYPE___ns1__GetNameByEmailID
#define SOAP_TYPE___ns1__GetNameByEmailID (716)
/* Operation wrapper: */
struct __ns1__GetNameByEmailID
{
public:
	_ns3__GetNameByEmailID *ns3__GetNameByEmailID;	/* optional element of type ns3:GetNameByEmailID */
public:
	int soap_type() const { return 716; } /* = unique id SOAP_TYPE___ns1__GetNameByEmailID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGoalDetailsByReadingIdAndUserId
#define SOAP_TYPE___ns1__GetGoalDetailsByReadingIdAndUserId (720)
/* Operation wrapper: */
struct __ns1__GetGoalDetailsByReadingIdAndUserId
{
public:
	_ns3__GetGoalDetailsByReadingIdAndUserId *ns3__GetGoalDetailsByReadingIdAndUserId;	/* optional element of type ns3:GetGoalDetailsByReadingIdAndUserId */
public:
	int soap_type() const { return 720; } /* = unique id SOAP_TYPE___ns1__GetGoalDetailsByReadingIdAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGoalDetailsByCustomReadingIdAndUserId
#define SOAP_TYPE___ns1__GetGoalDetailsByCustomReadingIdAndUserId (724)
/* Operation wrapper: */
struct __ns1__GetGoalDetailsByCustomReadingIdAndUserId
{
public:
	_ns3__GetGoalDetailsByCustomReadingIdAndUserId *ns3__GetGoalDetailsByCustomReadingIdAndUserId;	/* optional element of type ns3:GetGoalDetailsByCustomReadingIdAndUserId */
public:
	int soap_type() const { return 724; } /* = unique id SOAP_TYPE___ns1__GetGoalDetailsByCustomReadingIdAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllReadingRecordByUserIdAndReadingId
#define SOAP_TYPE___ns1__GetAllReadingRecordByUserIdAndReadingId (728)
/* Operation wrapper: */
struct __ns1__GetAllReadingRecordByUserIdAndReadingId
{
public:
	_ns3__GetAllReadingRecordByUserIdAndReadingId *ns3__GetAllReadingRecordByUserIdAndReadingId;	/* optional element of type ns3:GetAllReadingRecordByUserIdAndReadingId */
public:
	int soap_type() const { return 728; } /* = unique id SOAP_TYPE___ns1__GetAllReadingRecordByUserIdAndReadingId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCustomReadingRecordByUserIdAndReadingId
#define SOAP_TYPE___ns1__GetAllCustomReadingRecordByUserIdAndReadingId (732)
/* Operation wrapper: */
struct __ns1__GetAllCustomReadingRecordByUserIdAndReadingId
{
public:
	_ns3__GetAllCustomReadingRecordByUserIdAndReadingId *ns3__GetAllCustomReadingRecordByUserIdAndReadingId;	/* optional element of type ns3:GetAllCustomReadingRecordByUserIdAndReadingId */
public:
	int soap_type() const { return 732; } /* = unique id SOAP_TYPE___ns1__GetAllCustomReadingRecordByUserIdAndReadingId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGoalDetailsByUserIdAndStatus
#define SOAP_TYPE___ns1__GetGoalDetailsByUserIdAndStatus (736)
/* Operation wrapper: */
struct __ns1__GetGoalDetailsByUserIdAndStatus
{
public:
	_ns3__GetGoalDetailsByUserIdAndStatus *ns3__GetGoalDetailsByUserIdAndStatus;	/* optional element of type ns3:GetGoalDetailsByUserIdAndStatus */
public:
	int soap_type() const { return 736; } /* = unique id SOAP_TYPE___ns1__GetGoalDetailsByUserIdAndStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__InsertSettingValue
#define SOAP_TYPE___ns1__InsertSettingValue (740)
/* Operation wrapper: */
struct __ns1__InsertSettingValue
{
public:
	_ns3__InsertSettingValue *ns3__InsertSettingValue;	/* optional element of type ns3:InsertSettingValue */
public:
	int soap_type() const { return 740; } /* = unique id SOAP_TYPE___ns1__InsertSettingValue */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSettingValue
#define SOAP_TYPE___ns1__GetSettingValue (744)
/* Operation wrapper: */
struct __ns1__GetSettingValue
{
public:
	_ns3__GetSettingValue *ns3__GetSettingValue;	/* optional element of type ns3:GetSettingValue */
public:
	int soap_type() const { return 744; } /* = unique id SOAP_TYPE___ns1__GetSettingValue */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMembershipIdByUserId
#define SOAP_TYPE___ns1__GetMembershipIdByUserId (748)
/* Operation wrapper: */
struct __ns1__GetMembershipIdByUserId
{
public:
	_ns3__GetMembershipIdByUserId *ns3__GetMembershipIdByUserId;	/* optional element of type ns3:GetMembershipIdByUserId */
public:
	int soap_type() const { return 748; } /* = unique id SOAP_TYPE___ns1__GetMembershipIdByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllGoalByUserIDAndStatus
#define SOAP_TYPE___ns1__GetAllGoalByUserIDAndStatus (752)
/* Operation wrapper: */
struct __ns1__GetAllGoalByUserIDAndStatus
{
public:
	_ns3__GetAllGoalByUserIDAndStatus *ns3__GetAllGoalByUserIDAndStatus;	/* optional element of type ns3:GetAllGoalByUserIDAndStatus */
public:
	int soap_type() const { return 752; } /* = unique id SOAP_TYPE___ns1__GetAllGoalByUserIDAndStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__CheckGoalExistForThatReading
#define SOAP_TYPE___ns1__CheckGoalExistForThatReading (756)
/* Operation wrapper: */
struct __ns1__CheckGoalExistForThatReading
{
public:
	_ns3__CheckGoalExistForThatReading *ns3__CheckGoalExistForThatReading;	/* optional element of type ns3:CheckGoalExistForThatReading */
public:
	int soap_type() const { return 756; } /* = unique id SOAP_TYPE___ns1__CheckGoalExistForThatReading */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteOrganizationLogo
#define SOAP_TYPE___ns1__DeleteOrganizationLogo (760)
/* Operation wrapper: */
struct __ns1__DeleteOrganizationLogo
{
public:
	_ns3__DeleteOrganizationLogo *ns3__DeleteOrganizationLogo;	/* optional element of type ns3:DeleteOrganizationLogo */
public:
	int soap_type() const { return 760; } /* = unique id SOAP_TYPE___ns1__DeleteOrganizationLogo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingRecordByDateAndParentID
#define SOAP_TYPE___ns1__GetReadingRecordByDateAndParentID (764)
/* Operation wrapper: */
struct __ns1__GetReadingRecordByDateAndParentID
{
public:
	_ns3__GetReadingRecordByDateAndParentID *ns3__GetReadingRecordByDateAndParentID;	/* optional element of type ns3:GetReadingRecordByDateAndParentID */
public:
	int soap_type() const { return 764; } /* = unique id SOAP_TYPE___ns1__GetReadingRecordByDateAndParentID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCustomReadingRecordByDateAndUserId
#define SOAP_TYPE___ns1__GetAllCustomReadingRecordByDateAndUserId (768)
/* Operation wrapper: */
struct __ns1__GetAllCustomReadingRecordByDateAndUserId
{
public:
	_ns3__GetAllCustomReadingRecordByDateAndUserId *ns3__GetAllCustomReadingRecordByDateAndUserId;	/* optional element of type ns3:GetAllCustomReadingRecordByDateAndUserId */
public:
	int soap_type() const { return 768; } /* = unique id SOAP_TYPE___ns1__GetAllCustomReadingRecordByDateAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingRecordByDateAndParentID
#define SOAP_TYPE___ns1__GetCustomReadingRecordByDateAndParentID (772)
/* Operation wrapper: */
struct __ns1__GetCustomReadingRecordByDateAndParentID
{
public:
	_ns3__GetCustomReadingRecordByDateAndParentID *ns3__GetCustomReadingRecordByDateAndParentID;	/* optional element of type ns3:GetCustomReadingRecordByDateAndParentID */
public:
	int soap_type() const { return 772; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingRecordByDateAndParentID */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateUserSetting
#define SOAP_TYPE___ns1__UpdateUserSetting (776)
/* Operation wrapper: */
struct __ns1__UpdateUserSetting
{
public:
	_ns3__UpdateUserSetting *ns3__UpdateUserSetting;	/* optional element of type ns3:UpdateUserSetting */
public:
	int soap_type() const { return 776; } /* = unique id SOAP_TYPE___ns1__UpdateUserSetting */
};
#endif

#ifndef SOAP_TYPE___ns1__LoadSettingsDataByUserId
#define SOAP_TYPE___ns1__LoadSettingsDataByUserId (780)
/* Operation wrapper: */
struct __ns1__LoadSettingsDataByUserId
{
public:
	_ns3__LoadSettingsDataByUserId *ns3__LoadSettingsDataByUserId;	/* optional element of type ns3:LoadSettingsDataByUserId */
public:
	int soap_type() const { return 780; } /* = unique id SOAP_TYPE___ns1__LoadSettingsDataByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSettingValueById
#define SOAP_TYPE___ns1__GetSettingValueById (784)
/* Operation wrapper: */
struct __ns1__GetSettingValueById
{
public:
	_ns3__GetSettingValueById *ns3__GetSettingValueById;	/* optional element of type ns3:GetSettingValueById */
public:
	int soap_type() const { return 784; } /* = unique id SOAP_TYPE___ns1__GetSettingValueById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDWMAnnouncementForDashBoard
#define SOAP_TYPE___ns1__GetDWMAnnouncementForDashBoard (788)
/* Operation wrapper: */
struct __ns1__GetDWMAnnouncementForDashBoard
{
public:
	_ns3__GetDWMAnnouncementForDashBoard *ns3__GetDWMAnnouncementForDashBoard;	/* optional element of type ns3:GetDWMAnnouncementForDashBoard */
public:
	int soap_type() const { return 788; } /* = unique id SOAP_TYPE___ns1__GetDWMAnnouncementForDashBoard */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllHealthConditionDetailsByIdAndUserId
#define SOAP_TYPE___ns1__GetAllHealthConditionDetailsByIdAndUserId (792)
/* Operation wrapper: */
struct __ns1__GetAllHealthConditionDetailsByIdAndUserId
{
public:
	_ns3__GetAllHealthConditionDetailsByIdAndUserId *ns3__GetAllHealthConditionDetailsByIdAndUserId;	/* optional element of type ns3:GetAllHealthConditionDetailsByIdAndUserId */
public:
	int soap_type() const { return 792; } /* = unique id SOAP_TYPE___ns1__GetAllHealthConditionDetailsByIdAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLatestReadingRecordByUserIdAndReadingId
#define SOAP_TYPE___ns1__GetLatestReadingRecordByUserIdAndReadingId (796)
/* Operation wrapper: */
struct __ns1__GetLatestReadingRecordByUserIdAndReadingId
{
public:
	_ns3__GetLatestReadingRecordByUserIdAndReadingId *ns3__GetLatestReadingRecordByUserIdAndReadingId;	/* optional element of type ns3:GetLatestReadingRecordByUserIdAndReadingId */
public:
	int soap_type() const { return 796; } /* = unique id SOAP_TYPE___ns1__GetLatestReadingRecordByUserIdAndReadingId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLatestCustomReadingRecordByUserIdAndReadingId
#define SOAP_TYPE___ns1__GetLatestCustomReadingRecordByUserIdAndReadingId (800)
/* Operation wrapper: */
struct __ns1__GetLatestCustomReadingRecordByUserIdAndReadingId
{
public:
	_ns3__GetLatestCustomReadingRecordByUserIdAndReadingId *ns3__GetLatestCustomReadingRecordByUserIdAndReadingId;	/* optional element of type ns3:GetLatestCustomReadingRecordByUserIdAndReadingId */
public:
	int soap_type() const { return 800; } /* = unique id SOAP_TYPE___ns1__GetLatestCustomReadingRecordByUserIdAndReadingId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingDetailsByReadingName
#define SOAP_TYPE___ns1__GetCustomReadingDetailsByReadingName (804)
/* Operation wrapper: */
struct __ns1__GetCustomReadingDetailsByReadingName
{
public:
	_ns3__GetCustomReadingDetailsByReadingName *ns3__GetCustomReadingDetailsByReadingName;	/* optional element of type ns3:GetCustomReadingDetailsByReadingName */
public:
	int soap_type() const { return 804; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingDetailsByReadingName */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrganizationDetailsByOrganizationName
#define SOAP_TYPE___ns1__GetOrganizationDetailsByOrganizationName (808)
/* Operation wrapper: */
struct __ns1__GetOrganizationDetailsByOrganizationName
{
public:
	_ns3__GetOrganizationDetailsByOrganizationName *ns3__GetOrganizationDetailsByOrganizationName;	/* optional element of type ns3:GetOrganizationDetailsByOrganizationName */
public:
	int soap_type() const { return 808; } /* = unique id SOAP_TYPE___ns1__GetOrganizationDetailsByOrganizationName */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMedication
#define SOAP_TYPE___ns1__GetMedication (812)
/* Operation wrapper: */
struct __ns1__GetMedication
{
public:
	_ns3__GetMedication *ns3__GetMedication;	/* optional element of type ns3:GetMedication */
public:
	int soap_type() const { return 812; } /* = unique id SOAP_TYPE___ns1__GetMedication */
};
#endif

#ifndef SOAP_TYPE___ns1__GetIncidentDetailsByUserId
#define SOAP_TYPE___ns1__GetIncidentDetailsByUserId (816)
/* Operation wrapper: */
struct __ns1__GetIncidentDetailsByUserId
{
public:
	_ns3__GetIncidentDetailsByUserId *ns3__GetIncidentDetailsByUserId;	/* optional element of type ns3:GetIncidentDetailsByUserId */
public:
	int soap_type() const { return 816; } /* = unique id SOAP_TYPE___ns1__GetIncidentDetailsByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDashBoardDataWithFilterOption
#define SOAP_TYPE___ns1__GetDashBoardDataWithFilterOption (820)
/* Operation wrapper: */
struct __ns1__GetDashBoardDataWithFilterOption
{
public:
	_ns3__GetDashBoardDataWithFilterOption *ns3__GetDashBoardDataWithFilterOption;	/* optional element of type ns3:GetDashBoardDataWithFilterOption */
public:
	int soap_type() const { return 820; } /* = unique id SOAP_TYPE___ns1__GetDashBoardDataWithFilterOption */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChallengesbyUserIDForExport
#define SOAP_TYPE___ns1__GetAllChallengesbyUserIDForExport (824)
/* Operation wrapper: */
struct __ns1__GetAllChallengesbyUserIDForExport
{
public:
	_ns3__GetAllChallengesbyUserIDForExport *ns3__GetAllChallengesbyUserIDForExport;	/* optional element of type ns3:GetAllChallengesbyUserIDForExport */
public:
	int soap_type() const { return 824; } /* = unique id SOAP_TYPE___ns1__GetAllChallengesbyUserIDForExport */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCompletedChallengesForGrid
#define SOAP_TYPE___ns1__GetAllCompletedChallengesForGrid (828)
/* Operation wrapper: */
struct __ns1__GetAllCompletedChallengesForGrid
{
public:
	_ns3__GetAllCompletedChallengesForGrid *ns3__GetAllCompletedChallengesForGrid;	/* optional element of type ns3:GetAllCompletedChallengesForGrid */
public:
	int soap_type() const { return 828; } /* = unique id SOAP_TYPE___ns1__GetAllCompletedChallengesForGrid */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChallengesforConsumerForGrid
#define SOAP_TYPE___ns1__GetAllChallengesforConsumerForGrid (832)
/* Operation wrapper: */
struct __ns1__GetAllChallengesforConsumerForGrid
{
public:
	_ns3__GetAllChallengesforConsumerForGrid *ns3__GetAllChallengesforConsumerForGrid;	/* optional element of type ns3:GetAllChallengesforConsumerForGrid */
public:
	int soap_type() const { return 832; } /* = unique id SOAP_TYPE___ns1__GetAllChallengesforConsumerForGrid */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllergyDetailsbyUserID
#define SOAP_TYPE___ns1__GetAllergyDetailsbyUserID (836)
/* Operation wrapper: */
struct __ns1__GetAllergyDetailsbyUserID
{
public:
	_ns3__GetAllergyDetailsbyUserID *ns3__GetAllergyDetailsbyUserID;	/* optional element of type ns3:GetAllergyDetailsbyUserID */
public:
	int soap_type() const { return 836; } /* = unique id SOAP_TYPE___ns1__GetAllergyDetailsbyUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetShareDetailsByUserName
#define SOAP_TYPE___ns1__GetShareDetailsByUserName (840)
/* Operation wrapper: */
struct __ns1__GetShareDetailsByUserName
{
public:
	_ns3__GetShareDetailsByUserName *ns3__GetShareDetailsByUserName;	/* optional element of type ns3:GetShareDetailsByUserName */
public:
	int soap_type() const { return 840; } /* = unique id SOAP_TYPE___ns1__GetShareDetailsByUserName */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeDetailsForDashboard
#define SOAP_TYPE___ns1__GetChallengeDetailsForDashboard (844)
/* Operation wrapper: */
struct __ns1__GetChallengeDetailsForDashboard
{
public:
	_ns3__GetChallengeDetailsForDashboard *ns3__GetChallengeDetailsForDashboard;	/* optional element of type ns3:GetChallengeDetailsForDashboard */
public:
	int soap_type() const { return 844; } /* = unique id SOAP_TYPE___ns1__GetChallengeDetailsForDashboard */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeNameForDashboard
#define SOAP_TYPE___ns1__GetChallengeNameForDashboard (848)
/* Operation wrapper: */
struct __ns1__GetChallengeNameForDashboard
{
public:
	_ns3__GetChallengeNameForDashboard *ns3__GetChallengeNameForDashboard;	/* optional element of type ns3:GetChallengeNameForDashboard */
public:
	int soap_type() const { return 848; } /* = unique id SOAP_TYPE___ns1__GetChallengeNameForDashboard */
};
#endif

#ifndef SOAP_TYPE___ns1__GetActiveChallengeNameForDashboard
#define SOAP_TYPE___ns1__GetActiveChallengeNameForDashboard (852)
/* Operation wrapper: */
struct __ns1__GetActiveChallengeNameForDashboard
{
public:
	_ns3__GetActiveChallengeNameForDashboard *ns3__GetActiveChallengeNameForDashboard;	/* optional element of type ns3:GetActiveChallengeNameForDashboard */
public:
	int soap_type() const { return 852; } /* = unique id SOAP_TYPE___ns1__GetActiveChallengeNameForDashboard */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllOrgaAdminAsPerOrgID
#define SOAP_TYPE___ns1__GetAllOrgaAdminAsPerOrgID (856)
/* Operation wrapper: */
struct __ns1__GetAllOrgaAdminAsPerOrgID
{
public:
	_ns3__GetAllOrgaAdminAsPerOrgID *ns3__GetAllOrgaAdminAsPerOrgID;	/* optional element of type ns3:GetAllOrgaAdminAsPerOrgID */
public:
	int soap_type() const { return 856; } /* = unique id SOAP_TYPE___ns1__GetAllOrgaAdminAsPerOrgID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingName
#define SOAP_TYPE___ns1__GetCustomReadingName (860)
/* Operation wrapper: */
struct __ns1__GetCustomReadingName
{
public:
	_ns3__GetCustomReadingName *ns3__GetCustomReadingName;	/* optional element of type ns3:GetCustomReadingName */
public:
	int soap_type() const { return 860; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingName */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChildRecordAndUnitNameById
#define SOAP_TYPE___ns1__GetAllChildRecordAndUnitNameById (864)
/* Operation wrapper: */
struct __ns1__GetAllChildRecordAndUnitNameById
{
public:
	_ns3__GetAllChildRecordAndUnitNameById *ns3__GetAllChildRecordAndUnitNameById;	/* optional element of type ns3:GetAllChildRecordAndUnitNameById */
public:
	int soap_type() const { return 864; } /* = unique id SOAP_TYPE___ns1__GetAllChildRecordAndUnitNameById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetdRecordAndUnitNameById
#define SOAP_TYPE___ns1__GetdRecordAndUnitNameById (868)
/* Operation wrapper: */
struct __ns1__GetdRecordAndUnitNameById
{
public:
	_ns3__GetdRecordAndUnitNameById *ns3__GetdRecordAndUnitNameById;	/* optional element of type ns3:GetdRecordAndUnitNameById */
public:
	int soap_type() const { return 868; } /* = unique id SOAP_TYPE___ns1__GetdRecordAndUnitNameById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingRecordsAndUnitName
#define SOAP_TYPE___ns1__GetCustomReadingRecordsAndUnitName (872)
/* Operation wrapper: */
struct __ns1__GetCustomReadingRecordsAndUnitName
{
public:
	_ns3__GetCustomReadingRecordsAndUnitName *ns3__GetCustomReadingRecordsAndUnitName;	/* optional element of type ns3:GetCustomReadingRecordsAndUnitName */
public:
	int soap_type() const { return 872; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingRecordsAndUnitName */
};
#endif

#ifndef SOAP_TYPE___ns1__MakeUserActive
#define SOAP_TYPE___ns1__MakeUserActive (876)
/* Operation wrapper: */
struct __ns1__MakeUserActive
{
public:
	_ns3__MakeUserActive *ns3__MakeUserActive;	/* optional element of type ns3:MakeUserActive */
public:
	int soap_type() const { return 876; } /* = unique id SOAP_TYPE___ns1__MakeUserActive */
};
#endif

#ifndef SOAP_TYPE___ns1__MakeUserInActive
#define SOAP_TYPE___ns1__MakeUserInActive (880)
/* Operation wrapper: */
struct __ns1__MakeUserInActive
{
public:
	_ns3__MakeUserInActive *ns3__MakeUserInActive;	/* optional element of type ns3:MakeUserInActive */
public:
	int soap_type() const { return 880; } /* = unique id SOAP_TYPE___ns1__MakeUserInActive */
};
#endif

#ifndef SOAP_TYPE___ns1__GetEmployeeDeatilsAsPerOrgID
#define SOAP_TYPE___ns1__GetEmployeeDeatilsAsPerOrgID (884)
/* Operation wrapper: */
struct __ns1__GetEmployeeDeatilsAsPerOrgID
{
public:
	_ns3__GetEmployeeDeatilsAsPerOrgID *ns3__GetEmployeeDeatilsAsPerOrgID;	/* optional element of type ns3:GetEmployeeDeatilsAsPerOrgID */
public:
	int soap_type() const { return 884; } /* = unique id SOAP_TYPE___ns1__GetEmployeeDeatilsAsPerOrgID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateShareDetails
#define SOAP_TYPE___ns1__CreateShareDetails (888)
/* Operation wrapper: */
struct __ns1__CreateShareDetails
{
public:
	_ns3__CreateShareDetails *ns3__CreateShareDetails;	/* optional element of type ns3:CreateShareDetails */
public:
	int soap_type() const { return 888; } /* = unique id SOAP_TYPE___ns1__CreateShareDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateShareDetails
#define SOAP_TYPE___ns1__UpdateShareDetails (892)
/* Operation wrapper: */
struct __ns1__UpdateShareDetails
{
public:
	_ns3__UpdateShareDetails *ns3__UpdateShareDetails;	/* optional element of type ns3:UpdateShareDetails */
public:
	int soap_type() const { return 892; } /* = unique id SOAP_TYPE___ns1__UpdateShareDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__GetShareDetailsByUserId
#define SOAP_TYPE___ns1__GetShareDetailsByUserId (896)
/* Operation wrapper: */
struct __ns1__GetShareDetailsByUserId
{
public:
	_ns3__GetShareDetailsByUserId *ns3__GetShareDetailsByUserId;	/* optional element of type ns3:GetShareDetailsByUserId */
public:
	int soap_type() const { return 896; } /* = unique id SOAP_TYPE___ns1__GetShareDetailsByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSharedDetailsbyID
#define SOAP_TYPE___ns1__GetSharedDetailsbyID (900)
/* Operation wrapper: */
struct __ns1__GetSharedDetailsbyID
{
public:
	_ns3__GetSharedDetailsbyID *ns3__GetSharedDetailsbyID;	/* optional element of type ns3:GetSharedDetailsbyID */
public:
	int soap_type() const { return 900; } /* = unique id SOAP_TYPE___ns1__GetSharedDetailsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetConditionDetailsById
#define SOAP_TYPE___ns1__GetConditionDetailsById (904)
/* Operation wrapper: */
struct __ns1__GetConditionDetailsById
{
public:
	_ns3__GetConditionDetailsById *ns3__GetConditionDetailsById;	/* optional element of type ns3:GetConditionDetailsById */
public:
	int soap_type() const { return 904; } /* = unique id SOAP_TYPE___ns1__GetConditionDetailsById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLog
#define SOAP_TYPE___ns1__GetLog (908)
/* Operation wrapper: */
struct __ns1__GetLog
{
public:
	_ns3__GetLog *ns3__GetLog;	/* optional element of type ns3:GetLog */
public:
	int soap_type() const { return 908; } /* = unique id SOAP_TYPE___ns1__GetLog */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingNameAndCustomReadingNameById
#define SOAP_TYPE___ns1__GetReadingNameAndCustomReadingNameById (912)
/* Operation wrapper: */
struct __ns1__GetReadingNameAndCustomReadingNameById
{
public:
	_ns3__GetReadingNameAndCustomReadingNameById *ns3__GetReadingNameAndCustomReadingNameById;	/* optional element of type ns3:GetReadingNameAndCustomReadingNameById */
public:
	int soap_type() const { return 912; } /* = unique id SOAP_TYPE___ns1__GetReadingNameAndCustomReadingNameById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingRecordByDateTimeAndParentID
#define SOAP_TYPE___ns1__GetCustomReadingRecordByDateTimeAndParentID (916)
/* Operation wrapper: */
struct __ns1__GetCustomReadingRecordByDateTimeAndParentID
{
public:
	_ns3__GetCustomReadingRecordByDateTimeAndParentID *ns3__GetCustomReadingRecordByDateTimeAndParentID;	/* optional element of type ns3:GetCustomReadingRecordByDateTimeAndParentID */
public:
	int soap_type() const { return 916; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingRecordByDateTimeAndParentID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateCustomReadingRecords
#define SOAP_TYPE___ns1__CreateCustomReadingRecords (920)
/* Operation wrapper: */
struct __ns1__CreateCustomReadingRecords
{
public:
	_ns3__CreateCustomReadingRecords *ns3__CreateCustomReadingRecords;	/* optional element of type ns3:CreateCustomReadingRecords */
public:
	int soap_type() const { return 920; } /* = unique id SOAP_TYPE___ns1__CreateCustomReadingRecords */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingRecordsByDateAndUserId
#define SOAP_TYPE___ns1__GetReadingRecordsByDateAndUserId (924)
/* Operation wrapper: */
struct __ns1__GetReadingRecordsByDateAndUserId
{
public:
	_ns3__GetReadingRecordsByDateAndUserId *ns3__GetReadingRecordsByDateAndUserId;	/* optional element of type ns3:GetReadingRecordsByDateAndUserId */
public:
	int soap_type() const { return 924; } /* = unique id SOAP_TYPE___ns1__GetReadingRecordsByDateAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingRecordsByRecordId
#define SOAP_TYPE___ns1__GetCustomReadingRecordsByRecordId (928)
/* Operation wrapper: */
struct __ns1__GetCustomReadingRecordsByRecordId
{
public:
	_ns3__GetCustomReadingRecordsByRecordId *ns3__GetCustomReadingRecordsByRecordId;	/* optional element of type ns3:GetCustomReadingRecordsByRecordId */
public:
	int soap_type() const { return 928; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingRecordsByRecordId */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateCustomReadingRecord
#define SOAP_TYPE___ns1__UpdateCustomReadingRecord (932)
/* Operation wrapper: */
struct __ns1__UpdateCustomReadingRecord
{
public:
	_ns3__UpdateCustomReadingRecord *ns3__UpdateCustomReadingRecord;	/* optional element of type ns3:UpdateCustomReadingRecord */
public:
	int soap_type() const { return 932; } /* = unique id SOAP_TYPE___ns1__UpdateCustomReadingRecord */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrganizationNameByOrgId
#define SOAP_TYPE___ns1__GetOrganizationNameByOrgId (936)
/* Operation wrapper: */
struct __ns1__GetOrganizationNameByOrgId
{
public:
	_ns3__GetOrganizationNameByOrgId *ns3__GetOrganizationNameByOrgId;	/* optional element of type ns3:GetOrganizationNameByOrgId */
public:
	int soap_type() const { return 936; } /* = unique id SOAP_TYPE___ns1__GetOrganizationNameByOrgId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrganizationIdByUserId
#define SOAP_TYPE___ns1__GetOrganizationIdByUserId (940)
/* Operation wrapper: */
struct __ns1__GetOrganizationIdByUserId
{
public:
	_ns3__GetOrganizationIdByUserId *ns3__GetOrganizationIdByUserId;	/* optional element of type ns3:GetOrganizationIdByUserId */
public:
	int soap_type() const { return 940; } /* = unique id SOAP_TYPE___ns1__GetOrganizationIdByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengesByOrgID
#define SOAP_TYPE___ns1__GetChallengesByOrgID (944)
/* Operation wrapper: */
struct __ns1__GetChallengesByOrgID
{
public:
	_ns3__GetChallengesByOrgID *ns3__GetChallengesByOrgID;	/* optional element of type ns3:GetChallengesByOrgID */
public:
	int soap_type() const { return 944; } /* = unique id SOAP_TYPE___ns1__GetChallengesByOrgID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateCustomReadings
#define SOAP_TYPE___ns1__CreateCustomReadings (948)
/* Operation wrapper: */
struct __ns1__CreateCustomReadings
{
public:
	_ns3__CreateCustomReadings *ns3__CreateCustomReadings;	/* optional element of type ns3:CreateCustomReadings */
public:
	int soap_type() const { return 948; } /* = unique id SOAP_TYPE___ns1__CreateCustomReadings */
};
#endif

#ifndef SOAP_TYPE___ns1__LoadUnitsDetails
#define SOAP_TYPE___ns1__LoadUnitsDetails (952)
/* Operation wrapper: */
struct __ns1__LoadUnitsDetails
{
public:
	_ns3__LoadUnitsDetails *ns3__LoadUnitsDetails;	/* optional element of type ns3:LoadUnitsDetails */
public:
	int soap_type() const { return 952; } /* = unique id SOAP_TYPE___ns1__LoadUnitsDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingNameByUserId
#define SOAP_TYPE___ns1__GetCustomReadingNameByUserId (956)
/* Operation wrapper: */
struct __ns1__GetCustomReadingNameByUserId
{
public:
	_ns3__GetCustomReadingNameByUserId *ns3__GetCustomReadingNameByUserId;	/* optional element of type ns3:GetCustomReadingNameByUserId */
public:
	int soap_type() const { return 956; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingNameByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateCustomReadingDetails
#define SOAP_TYPE___ns1__UpdateCustomReadingDetails (960)
/* Operation wrapper: */
struct __ns1__UpdateCustomReadingDetails
{
public:
	_ns3__UpdateCustomReadingDetails *ns3__UpdateCustomReadingDetails;	/* optional element of type ns3:UpdateCustomReadingDetails */
public:
	int soap_type() const { return 960; } /* = unique id SOAP_TYPE___ns1__UpdateCustomReadingDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCustomReadingDetailsByUserId
#define SOAP_TYPE___ns1__GetCustomReadingDetailsByUserId (964)
/* Operation wrapper: */
struct __ns1__GetCustomReadingDetailsByUserId
{
public:
	_ns3__GetCustomReadingDetailsByUserId *ns3__GetCustomReadingDetailsByUserId;	/* optional element of type ns3:GetCustomReadingDetailsByUserId */
public:
	int soap_type() const { return 964; } /* = unique id SOAP_TYPE___ns1__GetCustomReadingDetailsByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__LoadCustomReadingsById
#define SOAP_TYPE___ns1__LoadCustomReadingsById (968)
/* Operation wrapper: */
struct __ns1__LoadCustomReadingsById
{
public:
	_ns3__LoadCustomReadingsById *ns3__LoadCustomReadingsById;	/* optional element of type ns3:LoadCustomReadingsById */
public:
	int soap_type() const { return 968; } /* = unique id SOAP_TYPE___ns1__LoadCustomReadingsById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallenges
#define SOAP_TYPE___ns1__GetChallenges (972)
/* Operation wrapper: */
struct __ns1__GetChallenges
{
public:
	_ns3__GetChallenges *ns3__GetChallenges;	/* optional element of type ns3:GetChallenges */
public:
	int soap_type() const { return 972; } /* = unique id SOAP_TYPE___ns1__GetChallenges */
};
#endif

#ifndef SOAP_TYPE___ns1__getAllCompletedChallenges
#define SOAP_TYPE___ns1__getAllCompletedChallenges (976)
/* Operation wrapper: */
struct __ns1__getAllCompletedChallenges
{
public:
	_ns3__getAllCompletedChallenges *ns3__getAllCompletedChallenges;	/* optional element of type ns3:getAllCompletedChallenges */
public:
	int soap_type() const { return 976; } /* = unique id SOAP_TYPE___ns1__getAllCompletedChallenges */
};
#endif

#ifndef SOAP_TYPE___ns1__getReadingName
#define SOAP_TYPE___ns1__getReadingName (980)
/* Operation wrapper: */
struct __ns1__getReadingName
{
public:
	_ns3__getReadingName *ns3__getReadingName;	/* optional element of type ns3:getReadingName */
public:
	int soap_type() const { return 980; } /* = unique id SOAP_TYPE___ns1__getReadingName */
};
#endif

#ifndef SOAP_TYPE___ns1__getChallengesSubscribedStatus
#define SOAP_TYPE___ns1__getChallengesSubscribedStatus (984)
/* Operation wrapper: */
struct __ns1__getChallengesSubscribedStatus
{
public:
	_ns3__getChallengesSubscribedStatus *ns3__getChallengesSubscribedStatus;	/* optional element of type ns3:getChallengesSubscribedStatus */
public:
	int soap_type() const { return 984; } /* = unique id SOAP_TYPE___ns1__getChallengesSubscribedStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChallengesSubScriptionsByChallengeID
#define SOAP_TYPE___ns1__GetAllChallengesSubScriptionsByChallengeID (988)
/* Operation wrapper: */
struct __ns1__GetAllChallengesSubScriptionsByChallengeID
{
public:
	_ns3__GetAllChallengesSubScriptionsByChallengeID *ns3__GetAllChallengesSubScriptionsByChallengeID;	/* optional element of type ns3:GetAllChallengesSubScriptionsByChallengeID */
public:
	int soap_type() const { return 988; } /* = unique id SOAP_TYPE___ns1__GetAllChallengesSubScriptionsByChallengeID */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteChallengesByChallengeID
#define SOAP_TYPE___ns1__DeleteChallengesByChallengeID (992)
/* Operation wrapper: */
struct __ns1__DeleteChallengesByChallengeID
{
public:
	_ns3__DeleteChallengesByChallengeID *ns3__DeleteChallengesByChallengeID;	/* optional element of type ns3:DeleteChallengesByChallengeID */
public:
	int soap_type() const { return 992; } /* = unique id SOAP_TYPE___ns1__DeleteChallengesByChallengeID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCloseChallengesforConsumer
#define SOAP_TYPE___ns1__GetAllCloseChallengesforConsumer (996)
/* Operation wrapper: */
struct __ns1__GetAllCloseChallengesforConsumer
{
public:
	_ns3__GetAllCloseChallengesforConsumer *ns3__GetAllCloseChallengesforConsumer;	/* optional element of type ns3:GetAllCloseChallengesforConsumer */
public:
	int soap_type() const { return 996; } /* = unique id SOAP_TYPE___ns1__GetAllCloseChallengesforConsumer */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteChallengesRecordbyChallnegeidForAdmin
#define SOAP_TYPE___ns1__DeleteChallengesRecordbyChallnegeidForAdmin (1000)
/* Operation wrapper: */
struct __ns1__DeleteChallengesRecordbyChallnegeidForAdmin
{
public:
	_ns3__DeleteChallengesRecordbyChallnegeidForAdmin *ns3__DeleteChallengesRecordbyChallnegeidForAdmin;	/* optional element of type ns3:DeleteChallengesRecordbyChallnegeidForAdmin */
public:
	int soap_type() const { return 1000; } /* = unique id SOAP_TYPE___ns1__DeleteChallengesRecordbyChallnegeidForAdmin */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeStatusViewByChallengeID
#define SOAP_TYPE___ns1__GetChallengeStatusViewByChallengeID (1004)
/* Operation wrapper: */
struct __ns1__GetChallengeStatusViewByChallengeID
{
public:
	_ns3__GetChallengeStatusViewByChallengeID *ns3__GetChallengeStatusViewByChallengeID;	/* optional element of type ns3:GetChallengeStatusViewByChallengeID */
public:
	int soap_type() const { return 1004; } /* = unique id SOAP_TYPE___ns1__GetChallengeStatusViewByChallengeID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeStatusWithRank
#define SOAP_TYPE___ns1__GetChallengeStatusWithRank (1008)
/* Operation wrapper: */
struct __ns1__GetChallengeStatusWithRank
{
public:
	_ns3__GetChallengeStatusWithRank *ns3__GetChallengeStatusWithRank;	/* optional element of type ns3:GetChallengeStatusWithRank */
public:
	int soap_type() const { return 1008; } /* = unique id SOAP_TYPE___ns1__GetChallengeStatusWithRank */
};
#endif

#ifndef SOAP_TYPE___ns1__GetEmployeeDetails
#define SOAP_TYPE___ns1__GetEmployeeDetails (1012)
/* Operation wrapper: */
struct __ns1__GetEmployeeDetails
{
public:
	_ns3__GetEmployeeDetails *ns3__GetEmployeeDetails;	/* optional element of type ns3:GetEmployeeDetails */
public:
	int soap_type() const { return 1012; } /* = unique id SOAP_TYPE___ns1__GetEmployeeDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__ValiDateAllExcelEmployee
#define SOAP_TYPE___ns1__ValiDateAllExcelEmployee (1016)
/* Operation wrapper: */
struct __ns1__ValiDateAllExcelEmployee
{
public:
	_ns3__ValiDateAllExcelEmployee *ns3__ValiDateAllExcelEmployee;	/* optional element of type ns3:ValiDateAllExcelEmployee */
public:
	int soap_type() const { return 1016; } /* = unique id SOAP_TYPE___ns1__ValiDateAllExcelEmployee */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateBulkEmployee
#define SOAP_TYPE___ns1__CreateBulkEmployee (1020)
/* Operation wrapper: */
struct __ns1__CreateBulkEmployee
{
public:
	_ns3__CreateBulkEmployee *ns3__CreateBulkEmployee;	/* optional element of type ns3:CreateBulkEmployee */
public:
	int soap_type() const { return 1020; } /* = unique id SOAP_TYPE___ns1__CreateBulkEmployee */
};
#endif

#ifndef SOAP_TYPE___ns1__CheckHealthRecordExistForChallengeCreat
#define SOAP_TYPE___ns1__CheckHealthRecordExistForChallengeCreat (1024)
/* Operation wrapper: */
struct __ns1__CheckHealthRecordExistForChallengeCreat
{
public:
	_ns3__CheckHealthRecordExistForChallengeCreat *ns3__CheckHealthRecordExistForChallengeCreat;	/* optional element of type ns3:CheckHealthRecordExistForChallengeCreat */
public:
	int soap_type() const { return 1024; } /* = unique id SOAP_TYPE___ns1__CheckHealthRecordExistForChallengeCreat */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllEmployeeAsPerOrgID
#define SOAP_TYPE___ns1__GetAllEmployeeAsPerOrgID (1028)
/* Operation wrapper: */
struct __ns1__GetAllEmployeeAsPerOrgID
{
public:
	_ns3__GetAllEmployeeAsPerOrgID *ns3__GetAllEmployeeAsPerOrgID;	/* optional element of type ns3:GetAllEmployeeAsPerOrgID */
public:
	int soap_type() const { return 1028; } /* = unique id SOAP_TYPE___ns1__GetAllEmployeeAsPerOrgID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetShareDetailsByEmailAndUserId
#define SOAP_TYPE___ns1__GetShareDetailsByEmailAndUserId (1032)
/* Operation wrapper: */
struct __ns1__GetShareDetailsByEmailAndUserId
{
public:
	_ns3__GetShareDetailsByEmailAndUserId *ns3__GetShareDetailsByEmailAndUserId;	/* optional element of type ns3:GetShareDetailsByEmailAndUserId */
public:
	int soap_type() const { return 1032; } /* = unique id SOAP_TYPE___ns1__GetShareDetailsByEmailAndUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateDependentWithLoginID
#define SOAP_TYPE___ns1__CreateDependentWithLoginID (1036)
/* Operation wrapper: */
struct __ns1__CreateDependentWithLoginID
{
public:
	_ns3__CreateDependentWithLoginID *ns3__CreateDependentWithLoginID;	/* optional element of type ns3:CreateDependentWithLoginID */
public:
	int soap_type() const { return 1036; } /* = unique id SOAP_TYPE___ns1__CreateDependentWithLoginID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDependentsbyDependentID
#define SOAP_TYPE___ns1__GetDependentsbyDependentID (1040)
/* Operation wrapper: */
struct __ns1__GetDependentsbyDependentID
{
public:
	_ns3__GetDependentsbyDependentID *ns3__GetDependentsbyDependentID;	/* optional element of type ns3:GetDependentsbyDependentID */
public:
	int soap_type() const { return 1040; } /* = unique id SOAP_TYPE___ns1__GetDependentsbyDependentID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetHealthProfileRecords
#define SOAP_TYPE___ns1__GetHealthProfileRecords (1044)
/* Operation wrapper: */
struct __ns1__GetHealthProfileRecords
{
public:
	_ns3__GetHealthProfileRecords *ns3__GetHealthProfileRecords;	/* optional element of type ns3:GetHealthProfileRecords */
public:
	int soap_type() const { return 1044; } /* = unique id SOAP_TYPE___ns1__GetHealthProfileRecords */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDependentsbyDepUserID
#define SOAP_TYPE___ns1__GetDependentsbyDepUserID (1048)
/* Operation wrapper: */
struct __ns1__GetDependentsbyDepUserID
{
public:
	_ns3__GetDependentsbyDepUserID *ns3__GetDependentsbyDepUserID;	/* optional element of type ns3:GetDependentsbyDepUserID */
public:
	int soap_type() const { return 1048; } /* = unique id SOAP_TYPE___ns1__GetDependentsbyDepUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDashBoardData
#define SOAP_TYPE___ns1__GetDashBoardData (1052)
/* Operation wrapper: */
struct __ns1__GetDashBoardData
{
public:
	_ns3__GetDashBoardData *ns3__GetDashBoardData;	/* optional element of type ns3:GetDashBoardData */
public:
	int soap_type() const { return 1052; } /* = unique id SOAP_TYPE___ns1__GetDashBoardData */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateOrganizationLogin
#define SOAP_TYPE___ns1__CreateOrganizationLogin (1056)
/* Operation wrapper: */
struct __ns1__CreateOrganizationLogin
{
public:
	_ns3__CreateOrganizationLogin *ns3__CreateOrganizationLogin;	/* optional element of type ns3:CreateOrganizationLogin */
public:
	int soap_type() const { return 1056; } /* = unique id SOAP_TYPE___ns1__CreateOrganizationLogin */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllOrganizationLogins
#define SOAP_TYPE___ns1__GetAllOrganizationLogins (1060)
/* Operation wrapper: */
struct __ns1__GetAllOrganizationLogins
{
public:
	_ns3__GetAllOrganizationLogins *ns3__GetAllOrganizationLogins;	/* optional element of type ns3:GetAllOrganizationLogins */
public:
	int soap_type() const { return 1060; } /* = unique id SOAP_TYPE___ns1__GetAllOrganizationLogins */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllLoginsByOrganizationId
#define SOAP_TYPE___ns1__GetAllLoginsByOrganizationId (1064)
/* Operation wrapper: */
struct __ns1__GetAllLoginsByOrganizationId
{
public:
	_ns3__GetAllLoginsByOrganizationId *ns3__GetAllLoginsByOrganizationId;	/* optional element of type ns3:GetAllLoginsByOrganizationId */
public:
	int soap_type() const { return 1064; } /* = unique id SOAP_TYPE___ns1__GetAllLoginsByOrganizationId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrganizationLogins
#define SOAP_TYPE___ns1__GetOrganizationLogins (1068)
/* Operation wrapper: */
struct __ns1__GetOrganizationLogins
{
public:
	_ns3__GetOrganizationLogins *ns3__GetOrganizationLogins;	/* optional element of type ns3:GetOrganizationLogins */
public:
	int soap_type() const { return 1068; } /* = unique id SOAP_TYPE___ns1__GetOrganizationLogins */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateOrganizationLogin
#define SOAP_TYPE___ns1__UpdateOrganizationLogin (1072)
/* Operation wrapper: */
struct __ns1__UpdateOrganizationLogin
{
public:
	_ns3__UpdateOrganizationLogin *ns3__UpdateOrganizationLogin;	/* optional element of type ns3:UpdateOrganizationLogin */
public:
	int soap_type() const { return 1072; } /* = unique id SOAP_TYPE___ns1__UpdateOrganizationLogin */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateOrganizationSetting
#define SOAP_TYPE___ns1__UpdateOrganizationSetting (1076)
/* Operation wrapper: */
struct __ns1__UpdateOrganizationSetting
{
public:
	_ns3__UpdateOrganizationSetting *ns3__UpdateOrganizationSetting;	/* optional element of type ns3:UpdateOrganizationSetting */
public:
	int soap_type() const { return 1076; } /* = unique id SOAP_TYPE___ns1__UpdateOrganizationSetting */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateChallenges
#define SOAP_TYPE___ns1__CreateChallenges (1080)
/* Operation wrapper: */
struct __ns1__CreateChallenges
{
public:
	_ns3__CreateChallenges *ns3__CreateChallenges;	/* optional element of type ns3:CreateChallenges */
public:
	int soap_type() const { return 1080; } /* = unique id SOAP_TYPE___ns1__CreateChallenges */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateUser
#define SOAP_TYPE___ns1__CreateUser (1084)
/* Operation wrapper: */
struct __ns1__CreateUser
{
public:
	_ns3__CreateUser *ns3__CreateUser;	/* optional element of type ns3:CreateUser */
public:
	int soap_type() const { return 1084; } /* = unique id SOAP_TYPE___ns1__CreateUser */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateUserMapping
#define SOAP_TYPE___ns1__CreateUserMapping (1088)
/* Operation wrapper: */
struct __ns1__CreateUserMapping
{
public:
	_ns3__CreateUserMapping *ns3__CreateUserMapping;	/* optional element of type ns3:CreateUserMapping */
public:
	int soap_type() const { return 1088; } /* = unique id SOAP_TYPE___ns1__CreateUserMapping */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateChallenges
#define SOAP_TYPE___ns1__UpdateChallenges (1092)
/* Operation wrapper: */
struct __ns1__UpdateChallenges
{
public:
	_ns3__UpdateChallenges *ns3__UpdateChallenges;	/* optional element of type ns3:UpdateChallenges */
public:
	int soap_type() const { return 1092; } /* = unique id SOAP_TYPE___ns1__UpdateChallenges */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteChallengesforEmp
#define SOAP_TYPE___ns1__DeleteChallengesforEmp (1096)
/* Operation wrapper: */
struct __ns1__DeleteChallengesforEmp
{
public:
	_ns3__DeleteChallengesforEmp *ns3__DeleteChallengesforEmp;	/* optional element of type ns3:DeleteChallengesforEmp */
public:
	int soap_type() const { return 1096; } /* = unique id SOAP_TYPE___ns1__DeleteChallengesforEmp */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeById
#define SOAP_TYPE___ns1__GetChallengeById (1100)
/* Operation wrapper: */
struct __ns1__GetChallengeById
{
public:
	_ns3__GetChallengeById *ns3__GetChallengeById;	/* optional element of type ns3:GetChallengeById */
public:
	int soap_type() const { return 1100; } /* = unique id SOAP_TYPE___ns1__GetChallengeById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChallengesbyUserID
#define SOAP_TYPE___ns1__GetAllChallengesbyUserID (1104)
/* Operation wrapper: */
struct __ns1__GetAllChallengesbyUserID
{
public:
	_ns3__GetAllChallengesbyUserID *ns3__GetAllChallengesbyUserID;	/* optional element of type ns3:GetAllChallengesbyUserID */
public:
	int soap_type() const { return 1104; } /* = unique id SOAP_TYPE___ns1__GetAllChallengesbyUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChallengesforConsumer
#define SOAP_TYPE___ns1__GetAllChallengesforConsumer (1108)
/* Operation wrapper: */
struct __ns1__GetAllChallengesforConsumer
{
public:
	_ns3__GetAllChallengesforConsumer *ns3__GetAllChallengesforConsumer;	/* optional element of type ns3:GetAllChallengesforConsumer */
public:
	int soap_type() const { return 1108; } /* = unique id SOAP_TYPE___ns1__GetAllChallengesforConsumer */
};
#endif

#ifndef SOAP_TYPE___ns1__GetIsSubscribedStatus
#define SOAP_TYPE___ns1__GetIsSubscribedStatus (1112)
/* Operation wrapper: */
struct __ns1__GetIsSubscribedStatus
{
public:
	_ns3__GetIsSubscribedStatus *ns3__GetIsSubscribedStatus;	/* optional element of type ns3:GetIsSubscribedStatus */
public:
	int soap_type() const { return 1112; } /* = unique id SOAP_TYPE___ns1__GetIsSubscribedStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserNameByUserId
#define SOAP_TYPE___ns1__GetUserNameByUserId (1116)
/* Operation wrapper: */
struct __ns1__GetUserNameByUserId
{
public:
	_ns3__GetUserNameByUserId *ns3__GetUserNameByUserId;	/* optional element of type ns3:GetUserNameByUserId */
public:
	int soap_type() const { return 1116; } /* = unique id SOAP_TYPE___ns1__GetUserNameByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeNameStatus
#define SOAP_TYPE___ns1__GetChallengeNameStatus (1120)
/* Operation wrapper: */
struct __ns1__GetChallengeNameStatus
{
public:
	_ns3__GetChallengeNameStatus *ns3__GetChallengeNameStatus;	/* optional element of type ns3:GetChallengeNameStatus */
public:
	int soap_type() const { return 1120; } /* = unique id SOAP_TYPE___ns1__GetChallengeNameStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllSubsriptionsbyId
#define SOAP_TYPE___ns1__GetAllSubsriptionsbyId (1124)
/* Operation wrapper: */
struct __ns1__GetAllSubsriptionsbyId
{
public:
	_ns3__GetAllSubsriptionsbyId *ns3__GetAllSubsriptionsbyId;	/* optional element of type ns3:GetAllSubsriptionsbyId */
public:
	int soap_type() const { return 1124; } /* = unique id SOAP_TYPE___ns1__GetAllSubsriptionsbyId */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateChallengesSubscription
#define SOAP_TYPE___ns1__CreateChallengesSubscription (1128)
/* Operation wrapper: */
struct __ns1__CreateChallengesSubscription
{
public:
	_ns3__CreateChallengesSubscription *ns3__CreateChallengesSubscription;	/* optional element of type ns3:CreateChallengesSubscription */
public:
	int soap_type() const { return 1128; } /* = unique id SOAP_TYPE___ns1__CreateChallengesSubscription */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateChallengesSubscription
#define SOAP_TYPE___ns1__UpdateChallengesSubscription (1132)
/* Operation wrapper: */
struct __ns1__UpdateChallengesSubscription
{
public:
	_ns3__UpdateChallengesSubscription *ns3__UpdateChallengesSubscription;	/* optional element of type ns3:UpdateChallengesSubscription */
public:
	int soap_type() const { return 1132; } /* = unique id SOAP_TYPE___ns1__UpdateChallengesSubscription */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChallengeSubscriptionById
#define SOAP_TYPE___ns1__GetChallengeSubscriptionById (1136)
/* Operation wrapper: */
struct __ns1__GetChallengeSubscriptionById
{
public:
	_ns3__GetChallengeSubscriptionById *ns3__GetChallengeSubscriptionById;	/* optional element of type ns3:GetChallengeSubscriptionById */
public:
	int soap_type() const { return 1136; } /* = unique id SOAP_TYPE___ns1__GetChallengeSubscriptionById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserIDStatus
#define SOAP_TYPE___ns1__GetUserIDStatus (1140)
/* Operation wrapper: */
struct __ns1__GetUserIDStatus
{
public:
	_ns3__GetUserIDStatus *ns3__GetUserIDStatus;	/* optional element of type ns3:GetUserIDStatus */
public:
	int soap_type() const { return 1140; } /* = unique id SOAP_TYPE___ns1__GetUserIDStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserIDSubscriptionStatus
#define SOAP_TYPE___ns1__GetUserIDSubscriptionStatus (1144)
/* Operation wrapper: */
struct __ns1__GetUserIDSubscriptionStatus
{
public:
	_ns3__GetUserIDSubscriptionStatus *ns3__GetUserIDSubscriptionStatus;	/* optional element of type ns3:GetUserIDSubscriptionStatus */
public:
	int soap_type() const { return 1144; } /* = unique id SOAP_TYPE___ns1__GetUserIDSubscriptionStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateHealthProfile
#define SOAP_TYPE___ns1__CreateHealthProfile (1148)
/* Operation wrapper: */
struct __ns1__CreateHealthProfile
{
public:
	_ns3__CreateHealthProfile *ns3__CreateHealthProfile;	/* optional element of type ns3:CreateHealthProfile */
public:
	int soap_type() const { return 1148; } /* = unique id SOAP_TYPE___ns1__CreateHealthProfile */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateHealthProfile
#define SOAP_TYPE___ns1__UpdateHealthProfile (1152)
/* Operation wrapper: */
struct __ns1__UpdateHealthProfile
{
public:
	_ns3__UpdateHealthProfile *ns3__UpdateHealthProfile;	/* optional element of type ns3:UpdateHealthProfile */
public:
	int soap_type() const { return 1152; } /* = unique id SOAP_TYPE___ns1__UpdateHealthProfile */
};
#endif

#ifndef SOAP_TYPE___ns1__GetHealthProfileByUserId
#define SOAP_TYPE___ns1__GetHealthProfileByUserId (1156)
/* Operation wrapper: */
struct __ns1__GetHealthProfileByUserId
{
public:
	_ns3__GetHealthProfileByUserId *ns3__GetHealthProfileByUserId;	/* optional element of type ns3:GetHealthProfileByUserId */
public:
	int soap_type() const { return 1156; } /* = unique id SOAP_TYPE___ns1__GetHealthProfileByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateHealthCondition
#define SOAP_TYPE___ns1__CreateHealthCondition (1160)
/* Operation wrapper: */
struct __ns1__CreateHealthCondition
{
public:
	_ns3__CreateHealthCondition *ns3__CreateHealthCondition;	/* optional element of type ns3:CreateHealthCondition */
public:
	int soap_type() const { return 1160; } /* = unique id SOAP_TYPE___ns1__CreateHealthCondition */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateHealthCondition
#define SOAP_TYPE___ns1__UpdateHealthCondition (1164)
/* Operation wrapper: */
struct __ns1__UpdateHealthCondition
{
public:
	_ns3__UpdateHealthCondition *ns3__UpdateHealthCondition;	/* optional element of type ns3:UpdateHealthCondition */
public:
	int soap_type() const { return 1164; } /* = unique id SOAP_TYPE___ns1__UpdateHealthCondition */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateGoal
#define SOAP_TYPE___ns1__CreateGoal (1168)
/* Operation wrapper: */
struct __ns1__CreateGoal
{
public:
	_ns3__CreateGoal *ns3__CreateGoal;	/* optional element of type ns3:CreateGoal */
public:
	int soap_type() const { return 1168; } /* = unique id SOAP_TYPE___ns1__CreateGoal */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateGoal
#define SOAP_TYPE___ns1__UpdateGoal (1172)
/* Operation wrapper: */
struct __ns1__UpdateGoal
{
public:
	_ns3__UpdateGoal *ns3__UpdateGoal;	/* optional element of type ns3:UpdateGoal */
public:
	int soap_type() const { return 1172; } /* = unique id SOAP_TYPE___ns1__UpdateGoal */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllGoalsByUserId
#define SOAP_TYPE___ns1__GetAllGoalsByUserId (1176)
/* Operation wrapper: */
struct __ns1__GetAllGoalsByUserId
{
public:
	_ns3__GetAllGoalsByUserId *ns3__GetAllGoalsByUserId;	/* optional element of type ns3:GetAllGoalsByUserId */
public:
	int soap_type() const { return 1176; } /* = unique id SOAP_TYPE___ns1__GetAllGoalsByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGoalById
#define SOAP_TYPE___ns1__GetGoalById (1180)
/* Operation wrapper: */
struct __ns1__GetGoalById
{
public:
	_ns3__GetGoalById *ns3__GetGoalById;	/* optional element of type ns3:GetGoalById */
public:
	int soap_type() const { return 1180; } /* = unique id SOAP_TYPE___ns1__GetGoalById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetHealthConditionById
#define SOAP_TYPE___ns1__GetHealthConditionById (1184)
/* Operation wrapper: */
struct __ns1__GetHealthConditionById
{
public:
	_ns3__GetHealthConditionById *ns3__GetHealthConditionById;	/* optional element of type ns3:GetHealthConditionById */
public:
	int soap_type() const { return 1184; } /* = unique id SOAP_TYPE___ns1__GetHealthConditionById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDropDownValuesByName
#define SOAP_TYPE___ns1__GetDropDownValuesByName (1188)
/* Operation wrapper: */
struct __ns1__GetDropDownValuesByName
{
public:
	_ns3__GetDropDownValuesByName *ns3__GetDropDownValuesByName;	/* optional element of type ns3:GetDropDownValuesByName */
public:
	int soap_type() const { return 1188; } /* = unique id SOAP_TYPE___ns1__GetDropDownValuesByName */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDropDownTextNameById
#define SOAP_TYPE___ns1__GetDropDownTextNameById (1192)
/* Operation wrapper: */
struct __ns1__GetDropDownTextNameById
{
public:
	_ns3__GetDropDownTextNameById *ns3__GetDropDownTextNameById;	/* optional element of type ns3:GetDropDownTextNameById */
public:
	int soap_type() const { return 1192; } /* = unique id SOAP_TYPE___ns1__GetDropDownTextNameById */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMeasurementValues
#define SOAP_TYPE___ns1__GetMeasurementValues (1196)
/* Operation wrapper: */
struct __ns1__GetMeasurementValues
{
public:
	_ns3__GetMeasurementValues *ns3__GetMeasurementValues;	/* optional element of type ns3:GetMeasurementValues */
public:
	int soap_type() const { return 1196; } /* = unique id SOAP_TYPE___ns1__GetMeasurementValues */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserIdByMembershipId
#define SOAP_TYPE___ns1__GetUserIdByMembershipId (1200)
/* Operation wrapper: */
struct __ns1__GetUserIdByMembershipId
{
public:
	_ns3__GetUserIdByMembershipId *ns3__GetUserIdByMembershipId;	/* optional element of type ns3:GetUserIdByMembershipId */
public:
	int soap_type() const { return 1200; } /* = unique id SOAP_TYPE___ns1__GetUserIdByMembershipId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrgIdByUserId
#define SOAP_TYPE___ns1__GetOrgIdByUserId (1204)
/* Operation wrapper: */
struct __ns1__GetOrgIdByUserId
{
public:
	_ns3__GetOrgIdByUserId *ns3__GetOrgIdByUserId;	/* optional element of type ns3:GetOrgIdByUserId */
public:
	int soap_type() const { return 1204; } /* = unique id SOAP_TYPE___ns1__GetOrgIdByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserNameByMembershipId
#define SOAP_TYPE___ns1__GetUserNameByMembershipId (1208)
/* Operation wrapper: */
struct __ns1__GetUserNameByMembershipId
{
public:
	_ns3__GetUserNameByMembershipId *ns3__GetUserNameByMembershipId;	/* optional element of type ns3:GetUserNameByMembershipId */
public:
	int soap_type() const { return 1208; } /* = unique id SOAP_TYPE___ns1__GetUserNameByMembershipId */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateUserProfile
#define SOAP_TYPE___ns1__CreateUserProfile (1212)
/* Operation wrapper: */
struct __ns1__CreateUserProfile
{
public:
	_ns3__CreateUserProfile *ns3__CreateUserProfile;	/* optional element of type ns3:CreateUserProfile */
public:
	int soap_type() const { return 1212; } /* = unique id SOAP_TYPE___ns1__CreateUserProfile */
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserProfileByUserId
#define SOAP_TYPE___ns1__GetUserProfileByUserId (1216)
/* Operation wrapper: */
struct __ns1__GetUserProfileByUserId
{
public:
	_ns3__GetUserProfileByUserId *ns3__GetUserProfileByUserId;	/* optional element of type ns3:GetUserProfileByUserId */
public:
	int soap_type() const { return 1216; } /* = unique id SOAP_TYPE___ns1__GetUserProfileByUserId */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateUserProfile
#define SOAP_TYPE___ns1__UpdateUserProfile (1220)
/* Operation wrapper: */
struct __ns1__UpdateUserProfile
{
public:
	_ns3__UpdateUserProfile *ns3__UpdateUserProfile;	/* optional element of type ns3:UpdateUserProfile */
public:
	int soap_type() const { return 1220; } /* = unique id SOAP_TYPE___ns1__UpdateUserProfile */
};
#endif

#ifndef SOAP_TYPE___ns1__SubmitAnnouncement
#define SOAP_TYPE___ns1__SubmitAnnouncement (1224)
/* Operation wrapper: */
struct __ns1__SubmitAnnouncement
{
public:
	_ns3__SubmitAnnouncement *ns3__SubmitAnnouncement;	/* optional element of type ns3:SubmitAnnouncement */
public:
	int soap_type() const { return 1224; } /* = unique id SOAP_TYPE___ns1__SubmitAnnouncement */
};
#endif

#ifndef SOAP_TYPE___ns1__SubmitOrganization
#define SOAP_TYPE___ns1__SubmitOrganization (1228)
/* Operation wrapper: */
struct __ns1__SubmitOrganization
{
public:
	_ns3__SubmitOrganization *ns3__SubmitOrganization;	/* optional element of type ns3:SubmitOrganization */
public:
	int soap_type() const { return 1228; } /* = unique id SOAP_TYPE___ns1__SubmitOrganization */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrganizationDetails
#define SOAP_TYPE___ns1__GetOrganizationDetails (1232)
/* Operation wrapper: */
struct __ns1__GetOrganizationDetails
{
public:
	_ns3__GetOrganizationDetails *ns3__GetOrganizationDetails;	/* optional element of type ns3:GetOrganizationDetails */
public:
	int soap_type() const { return 1232; } /* = unique id SOAP_TYPE___ns1__GetOrganizationDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateAnnouncementDetailsbyID
#define SOAP_TYPE___ns1__UpdateAnnouncementDetailsbyID (1236)
/* Operation wrapper: */
struct __ns1__UpdateAnnouncementDetailsbyID
{
public:
	_ns3__UpdateAnnouncementDetailsbyID *ns3__UpdateAnnouncementDetailsbyID;	/* optional element of type ns3:UpdateAnnouncementDetailsbyID */
public:
	int soap_type() const { return 1236; } /* = unique id SOAP_TYPE___ns1__UpdateAnnouncementDetailsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateOrganizationDetails
#define SOAP_TYPE___ns1__UpdateOrganizationDetails (1240)
/* Operation wrapper: */
struct __ns1__UpdateOrganizationDetails
{
public:
	_ns3__UpdateOrganizationDetails *ns3__UpdateOrganizationDetails;	/* optional element of type ns3:UpdateOrganizationDetails */
public:
	int soap_type() const { return 1240; } /* = unique id SOAP_TYPE___ns1__UpdateOrganizationDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateLocationDetails
#define SOAP_TYPE___ns1__UpdateLocationDetails (1244)
/* Operation wrapper: */
struct __ns1__UpdateLocationDetails
{
public:
	_ns3__UpdateLocationDetails *ns3__UpdateLocationDetails;	/* optional element of type ns3:UpdateLocationDetails */
public:
	int soap_type() const { return 1244; } /* = unique id SOAP_TYPE___ns1__UpdateLocationDetails */
};
#endif

#ifndef SOAP_TYPE___ns1__SubmitOrgnizationLocation
#define SOAP_TYPE___ns1__SubmitOrgnizationLocation (1248)
/* Operation wrapper: */
struct __ns1__SubmitOrgnizationLocation
{
public:
	_ns3__SubmitOrgnizationLocation *ns3__SubmitOrgnizationLocation;	/* optional element of type ns3:SubmitOrgnizationLocation */
public:
	int soap_type() const { return 1248; } /* = unique id SOAP_TYPE___ns1__SubmitOrgnizationLocation */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllAnnouncementbyOrgID
#define SOAP_TYPE___ns1__GetAllAnnouncementbyOrgID (1252)
/* Operation wrapper: */
struct __ns1__GetAllAnnouncementbyOrgID
{
public:
	_ns3__GetAllAnnouncementbyOrgID *ns3__GetAllAnnouncementbyOrgID;	/* optional element of type ns3:GetAllAnnouncementbyOrgID */
public:
	int soap_type() const { return 1252; } /* = unique id SOAP_TYPE___ns1__GetAllAnnouncementbyOrgID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateReadings
#define SOAP_TYPE___ns1__CreateReadings (1256)
/* Operation wrapper: */
struct __ns1__CreateReadings
{
public:
	_ns3__CreateReadings *ns3__CreateReadings;	/* optional element of type ns3:CreateReadings */
public:
	int soap_type() const { return 1256; } /* = unique id SOAP_TYPE___ns1__CreateReadings */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllReadings
#define SOAP_TYPE___ns1__GetAllReadings (1260)
/* Operation wrapper: */
struct __ns1__GetAllReadings
{
public:
	_ns3__GetAllReadings *ns3__GetAllReadings;	/* optional element of type ns3:GetAllReadings */
public:
	int soap_type() const { return 1260; } /* = unique id SOAP_TYPE___ns1__GetAllReadings */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllReadingsbyStatus
#define SOAP_TYPE___ns1__GetAllReadingsbyStatus (1264)
/* Operation wrapper: */
struct __ns1__GetAllReadingsbyStatus
{
public:
	_ns3__GetAllReadingsbyStatus *ns3__GetAllReadingsbyStatus;	/* optional element of type ns3:GetAllReadingsbyStatus */
public:
	int soap_type() const { return 1264; } /* = unique id SOAP_TYPE___ns1__GetAllReadingsbyStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllReadingsbyID
#define SOAP_TYPE___ns1__GetAllReadingsbyID (1268)
/* Operation wrapper: */
struct __ns1__GetAllReadingsbyID
{
public:
	_ns3__GetAllReadingsbyID *ns3__GetAllReadingsbyID;	/* optional element of type ns3:GetAllReadingsbyID */
public:
	int soap_type() const { return 1268; } /* = unique id SOAP_TYPE___ns1__GetAllReadingsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateReadingDetailsbyID
#define SOAP_TYPE___ns1__UpdateReadingDetailsbyID (1272)
/* Operation wrapper: */
struct __ns1__UpdateReadingDetailsbyID
{
public:
	_ns3__UpdateReadingDetailsbyID *ns3__UpdateReadingDetailsbyID;	/* optional element of type ns3:UpdateReadingDetailsbyID */
public:
	int soap_type() const { return 1272; } /* = unique id SOAP_TYPE___ns1__UpdateReadingDetailsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllChildReadingsbyID
#define SOAP_TYPE___ns1__GetAllChildReadingsbyID (1276)
/* Operation wrapper: */
struct __ns1__GetAllChildReadingsbyID
{
public:
	_ns3__GetAllChildReadingsbyID *ns3__GetAllChildReadingsbyID;	/* optional element of type ns3:GetAllChildReadingsbyID */
public:
	int soap_type() const { return 1276; } /* = unique id SOAP_TYPE___ns1__GetAllChildReadingsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateReadingRecords
#define SOAP_TYPE___ns1__CreateReadingRecords (1280)
/* Operation wrapper: */
struct __ns1__CreateReadingRecords
{
public:
	_ns3__CreateReadingRecords *ns3__CreateReadingRecords;	/* optional element of type ns3:CreateReadingRecords */
public:
	int soap_type() const { return 1280; } /* = unique id SOAP_TYPE___ns1__CreateReadingRecords */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingRecords
#define SOAP_TYPE___ns1__GetReadingRecords (1284)
/* Operation wrapper: */
struct __ns1__GetReadingRecords
{
public:
	_ns3__GetReadingRecords *ns3__GetReadingRecords;	/* optional element of type ns3:GetReadingRecords */
public:
	int soap_type() const { return 1284; } /* = unique id SOAP_TYPE___ns1__GetReadingRecords */
};
#endif

#ifndef SOAP_TYPE___ns1__GetReadingRecordByDateTimeAndParentID
#define SOAP_TYPE___ns1__GetReadingRecordByDateTimeAndParentID (1288)
/* Operation wrapper: */
struct __ns1__GetReadingRecordByDateTimeAndParentID
{
public:
	_ns3__GetReadingRecordByDateTimeAndParentID *ns3__GetReadingRecordByDateTimeAndParentID;	/* optional element of type ns3:GetReadingRecordByDateTimeAndParentID */
public:
	int soap_type() const { return 1288; } /* = unique id SOAP_TYPE___ns1__GetReadingRecordByDateTimeAndParentID */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateReadingRecord
#define SOAP_TYPE___ns1__UpdateReadingRecord (1292)
/* Operation wrapper: */
struct __ns1__UpdateReadingRecord
{
public:
	_ns3__UpdateReadingRecord *ns3__UpdateReadingRecord;	/* optional element of type ns3:UpdateReadingRecord */
public:
	int soap_type() const { return 1292; } /* = unique id SOAP_TYPE___ns1__UpdateReadingRecord */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateAllergies
#define SOAP_TYPE___ns1__CreateAllergies (1296)
/* Operation wrapper: */
struct __ns1__CreateAllergies
{
public:
	_ns3__CreateAllergies *ns3__CreateAllergies;	/* optional element of type ns3:CreateAllergies */
public:
	int soap_type() const { return 1296; } /* = unique id SOAP_TYPE___ns1__CreateAllergies */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateAllergies
#define SOAP_TYPE___ns1__UpdateAllergies (1300)
/* Operation wrapper: */
struct __ns1__UpdateAllergies
{
public:
	_ns3__UpdateAllergies *ns3__UpdateAllergies;	/* optional element of type ns3:UpdateAllergies */
public:
	int soap_type() const { return 1300; } /* = unique id SOAP_TYPE___ns1__UpdateAllergies */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllergiesbyUserIDandStatus
#define SOAP_TYPE___ns1__GetAllergiesbyUserIDandStatus (1304)
/* Operation wrapper: */
struct __ns1__GetAllergiesbyUserIDandStatus
{
public:
	_ns3__GetAllergiesbyUserIDandStatus *ns3__GetAllergiesbyUserIDandStatus;	/* optional element of type ns3:GetAllergiesbyUserIDandStatus */
public:
	int soap_type() const { return 1304; } /* = unique id SOAP_TYPE___ns1__GetAllergiesbyUserIDandStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllergiesbyID
#define SOAP_TYPE___ns1__GetAllergiesbyID (1308)
/* Operation wrapper: */
struct __ns1__GetAllergiesbyID
{
public:
	_ns3__GetAllergiesbyID *ns3__GetAllergiesbyID;	/* optional element of type ns3:GetAllergiesbyID */
public:
	int soap_type() const { return 1308; } /* = unique id SOAP_TYPE___ns1__GetAllergiesbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateMedications
#define SOAP_TYPE___ns1__CreateMedications (1312)
/* Operation wrapper: */
struct __ns1__CreateMedications
{
public:
	_ns3__CreateMedications *ns3__CreateMedications;	/* optional element of type ns3:CreateMedications */
public:
	int soap_type() const { return 1312; } /* = unique id SOAP_TYPE___ns1__CreateMedications */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateMedications
#define SOAP_TYPE___ns1__UpdateMedications (1316)
/* Operation wrapper: */
struct __ns1__UpdateMedications
{
public:
	_ns3__UpdateMedications *ns3__UpdateMedications;	/* optional element of type ns3:UpdateMedications */
public:
	int soap_type() const { return 1316; } /* = unique id SOAP_TYPE___ns1__UpdateMedications */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMedicationsbyUserIDandStatus
#define SOAP_TYPE___ns1__GetMedicationsbyUserIDandStatus (1320)
/* Operation wrapper: */
struct __ns1__GetMedicationsbyUserIDandStatus
{
public:
	_ns3__GetMedicationsbyUserIDandStatus *ns3__GetMedicationsbyUserIDandStatus;	/* optional element of type ns3:GetMedicationsbyUserIDandStatus */
public:
	int soap_type() const { return 1320; } /* = unique id SOAP_TYPE___ns1__GetMedicationsbyUserIDandStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetMedicationsbyId
#define SOAP_TYPE___ns1__GetMedicationsbyId (1324)
/* Operation wrapper: */
struct __ns1__GetMedicationsbyId
{
public:
	_ns3__GetMedicationsbyId *ns3__GetMedicationsbyId;	/* optional element of type ns3:GetMedicationsbyId */
public:
	int soap_type() const { return 1324; } /* = unique id SOAP_TYPE___ns1__GetMedicationsbyId */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllIncidents
#define SOAP_TYPE___ns1__GetAllIncidents (1328)
/* Operation wrapper: */
struct __ns1__GetAllIncidents
{
public:
	_ns3__GetAllIncidents *ns3__GetAllIncidents;	/* optional element of type ns3:GetAllIncidents */
public:
	int soap_type() const { return 1328; } /* = unique id SOAP_TYPE___ns1__GetAllIncidents */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateIncidents
#define SOAP_TYPE___ns1__CreateIncidents (1332)
/* Operation wrapper: */
struct __ns1__CreateIncidents
{
public:
	_ns3__CreateIncidents *ns3__CreateIncidents;	/* optional element of type ns3:CreateIncidents */
public:
	int soap_type() const { return 1332; } /* = unique id SOAP_TYPE___ns1__CreateIncidents */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateIncidents
#define SOAP_TYPE___ns1__UpdateIncidents (1336)
/* Operation wrapper: */
struct __ns1__UpdateIncidents
{
public:
	_ns3__UpdateIncidents *ns3__UpdateIncidents;	/* optional element of type ns3:UpdateIncidents */
public:
	int soap_type() const { return 1336; } /* = unique id SOAP_TYPE___ns1__UpdateIncidents */
};
#endif

#ifndef SOAP_TYPE___ns1__GetIncidentsbyUserIDandStatus
#define SOAP_TYPE___ns1__GetIncidentsbyUserIDandStatus (1340)
/* Operation wrapper: */
struct __ns1__GetIncidentsbyUserIDandStatus
{
public:
	_ns3__GetIncidentsbyUserIDandStatus *ns3__GetIncidentsbyUserIDandStatus;	/* optional element of type ns3:GetIncidentsbyUserIDandStatus */
public:
	int soap_type() const { return 1340; } /* = unique id SOAP_TYPE___ns1__GetIncidentsbyUserIDandStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__GetIncidentsbyID
#define SOAP_TYPE___ns1__GetIncidentsbyID (1344)
/* Operation wrapper: */
struct __ns1__GetIncidentsbyID
{
public:
	_ns3__GetIncidentsbyID *ns3__GetIncidentsbyID;	/* optional element of type ns3:GetIncidentsbyID */
public:
	int soap_type() const { return 1344; } /* = unique id SOAP_TYPE___ns1__GetIncidentsbyID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLocationDetailsByOrgId
#define SOAP_TYPE___ns1__GetLocationDetailsByOrgId (1348)
/* Operation wrapper: */
struct __ns1__GetLocationDetailsByOrgId
{
public:
	_ns3__GetLocationDetailsByOrgId *ns3__GetLocationDetailsByOrgId;	/* optional element of type ns3:GetLocationDetailsByOrgId */
public:
	int soap_type() const { return 1348; } /* = unique id SOAP_TYPE___ns1__GetLocationDetailsByOrgId */
};
#endif

#ifndef SOAP_TYPE___ns1__SaveDocuments
#define SOAP_TYPE___ns1__SaveDocuments (1352)
/* Operation wrapper: */
struct __ns1__SaveDocuments
{
public:
	_ns3__SaveDocuments *ns3__SaveDocuments;	/* optional element of type ns3:SaveDocuments */
public:
	int soap_type() const { return 1352; } /* = unique id SOAP_TYPE___ns1__SaveDocuments */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDocumentssbyUserID
#define SOAP_TYPE___ns1__GetDocumentssbyUserID (1356)
/* Operation wrapper: */
struct __ns1__GetDocumentssbyUserID
{
public:
	_ns3__GetDocumentssbyUserID *ns3__GetDocumentssbyUserID;	/* optional element of type ns3:GetDocumentssbyUserID */
public:
	int soap_type() const { return 1356; } /* = unique id SOAP_TYPE___ns1__GetDocumentssbyUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDocumentsbyIncidentIDandUserID
#define SOAP_TYPE___ns1__GetDocumentsbyIncidentIDandUserID (1360)
/* Operation wrapper: */
struct __ns1__GetDocumentsbyIncidentIDandUserID
{
public:
	_ns3__GetDocumentsbyIncidentIDandUserID *ns3__GetDocumentsbyIncidentIDandUserID;	/* optional element of type ns3:GetDocumentsbyIncidentIDandUserID */
public:
	int soap_type() const { return 1360; } /* = unique id SOAP_TYPE___ns1__GetDocumentsbyIncidentIDandUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDocumentbyDocumentID
#define SOAP_TYPE___ns1__GetDocumentbyDocumentID (1364)
/* Operation wrapper: */
struct __ns1__GetDocumentbyDocumentID
{
public:
	_ns3__GetDocumentbyDocumentID *ns3__GetDocumentbyDocumentID;	/* optional element of type ns3:GetDocumentbyDocumentID */
public:
	int soap_type() const { return 1364; } /* = unique id SOAP_TYPE___ns1__GetDocumentbyDocumentID */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateDocuments
#define SOAP_TYPE___ns1__UpdateDocuments (1368)
/* Operation wrapper: */
struct __ns1__UpdateDocuments
{
public:
	_ns3__UpdateDocuments *ns3__UpdateDocuments;	/* optional element of type ns3:UpdateDocuments */
public:
	int soap_type() const { return 1368; } /* = unique id SOAP_TYPE___ns1__UpdateDocuments */
};
#endif

#ifndef SOAP_TYPE___ns1__GetLocationbyLocationId
#define SOAP_TYPE___ns1__GetLocationbyLocationId (1372)
/* Operation wrapper: */
struct __ns1__GetLocationbyLocationId
{
public:
	_ns3__GetLocationbyLocationId *ns3__GetLocationbyLocationId;	/* optional element of type ns3:GetLocationbyLocationId */
public:
	int soap_type() const { return 1372; } /* = unique id SOAP_TYPE___ns1__GetLocationbyLocationId */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateDependent
#define SOAP_TYPE___ns1__CreateDependent (1376)
/* Operation wrapper: */
struct __ns1__CreateDependent
{
public:
	_ns3__CreateDependent *ns3__CreateDependent;	/* optional element of type ns3:CreateDependent */
public:
	int soap_type() const { return 1376; } /* = unique id SOAP_TYPE___ns1__CreateDependent */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDependentsbyUserID
#define SOAP_TYPE___ns1__GetDependentsbyUserID (1380)
/* Operation wrapper: */
struct __ns1__GetDependentsbyUserID
{
public:
	_ns3__GetDependentsbyUserID *ns3__GetDependentsbyUserID;	/* optional element of type ns3:GetDependentsbyUserID */
public:
	int soap_type() const { return 1380; } /* = unique id SOAP_TYPE___ns1__GetDependentsbyUserID */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDependentsbyUserIDandStatus
#define SOAP_TYPE___ns1__GetDependentsbyUserIDandStatus (1384)
/* Operation wrapper: */
struct __ns1__GetDependentsbyUserIDandStatus
{
public:
	_ns3__GetDependentsbyUserIDandStatus *ns3__GetDependentsbyUserIDandStatus;	/* optional element of type ns3:GetDependentsbyUserIDandStatus */
public:
	int soap_type() const { return 1384; } /* = unique id SOAP_TYPE___ns1__GetDependentsbyUserIDandStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__UpdateDependents
#define SOAP_TYPE___ns1__UpdateDependents (1388)
/* Operation wrapper: */
struct __ns1__UpdateDependents
{
public:
	_ns3__UpdateDependents *ns3__UpdateDependents;	/* optional element of type ns3:UpdateDependents */
public:
	int soap_type() const { return 1388; } /* = unique id SOAP_TYPE___ns1__UpdateDependents */
};
#endif

#ifndef SOAP_TYPE__wsu__Timestamp
#define SOAP_TYPE__wsu__Timestamp (1390)
/* wsu:Timestamp */
struct _wsu__Timestamp
{
public:
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Created;	/* optional element of type xsd:string */
	char *Expires;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 1390; } /* = unique id SOAP_TYPE__wsu__Timestamp */
};
typedef struct _wsu__Timestamp _wsu__Timestamp;
#endif

#ifndef SOAP_TYPE__wsse__UsernameToken
#define SOAP_TYPE__wsse__UsernameToken (1392)
/* wsse:UsernameToken */
struct _wsse__UsernameToken
{
public:
	char *Username;	/* optional element of type xsd:string */
	struct _wsse__Password *Password;	/* optional element of type wsse:Password */
	char *Nonce;	/* optional element of type xsd:string */
	char *wsu__Created;	/* optional element of type xsd:string */
	char *wsu__Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1392; } /* = unique id SOAP_TYPE__wsse__UsernameToken */
};
typedef struct _wsse__UsernameToken _wsse__UsernameToken;
#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken
#define SOAP_TYPE__wsse__BinarySecurityToken (1395)
/* Primitive wsse:BinarySecurityToken schema type: */
struct _wsse__BinarySecurityToken
{
public:
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1395; } /* = unique id SOAP_TYPE__wsse__BinarySecurityToken */
};
typedef struct _wsse__BinarySecurityToken _wsse__BinarySecurityToken;
#endif

#ifndef SOAP_TYPE__wsse__Reference
#define SOAP_TYPE__wsse__Reference (1396)
/* wsse:Reference */
struct _wsse__Reference
{
public:
	char *URI;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1396; } /* = unique id SOAP_TYPE__wsse__Reference */
};
typedef struct _wsse__Reference _wsse__Reference;
#endif

#ifndef SOAP_TYPE__wsse__Embedded
#define SOAP_TYPE__wsse__Embedded (1397)
/* wsse:Embedded */
struct _wsse__Embedded
{
public:
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1397; } /* = unique id SOAP_TYPE__wsse__Embedded */
};
typedef struct _wsse__Embedded _wsse__Embedded;
#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier
#define SOAP_TYPE__wsse__KeyIdentifier (1398)
/* Primitive wsse:KeyIdentifier schema type: */
struct _wsse__KeyIdentifier
{
public:
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1398; } /* = unique id SOAP_TYPE__wsse__KeyIdentifier */
};
typedef struct _wsse__KeyIdentifier _wsse__KeyIdentifier;
#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference
#define SOAP_TYPE__wsse__SecurityTokenReference (1399)
/* wsse:SecurityTokenReference */
struct _wsse__SecurityTokenReference
{
public:
	struct _wsse__Reference *Reference;	/* optional element of type wsse:Reference */
	struct _wsse__KeyIdentifier *KeyIdentifier;	/* optional element of type wsse:KeyIdentifier */
	struct _wsse__Embedded *Embedded;	/* optional element of type wsse:Embedded */
	struct ds__X509DataType *ds__X509Data;	/* optional element of type ds:X509DataType */
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *wsc__Instance;	/* optional attribute of type xsd:string */
	char *Usage;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1399; } /* = unique id SOAP_TYPE__wsse__SecurityTokenReference */
};
typedef struct _wsse__SecurityTokenReference _wsse__SecurityTokenReference;
#endif

#ifndef SOAP_TYPE_ds__SignatureType
#define SOAP_TYPE_ds__SignatureType (1405)
/* ds:SignatureType */
struct ds__SignatureType
{
public:
	struct ds__SignedInfoType *SignedInfo;	/* optional element of type ds:SignedInfoType */
	char *SignatureValue;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *KeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1405; } /* = unique id SOAP_TYPE_ds__SignatureType */
};
typedef struct ds__SignatureType ds__SignatureType;
#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces
#define SOAP_TYPE__c14n__InclusiveNamespaces (1415)
/* c14n:InclusiveNamespaces */
struct _c14n__InclusiveNamespaces
{
public:
	char *PrefixList;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1415; } /* = unique id SOAP_TYPE__c14n__InclusiveNamespaces */
};
typedef struct _c14n__InclusiveNamespaces _c14n__InclusiveNamespaces;
#endif

#ifndef SOAP_TYPE_ds__TransformType
#define SOAP_TYPE_ds__TransformType (1416)
/* ds:TransformType */
struct ds__TransformType
{
public:
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
	char *__any;
	char *Algorithm;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1416; } /* = unique id SOAP_TYPE_ds__TransformType */
};
typedef struct ds__TransformType ds__TransformType;
#endif

#ifndef SOAP_TYPE_ds__KeyInfoType
#define SOAP_TYPE_ds__KeyInfoType (1408)
/* ds:KeyInfoType */
struct ds__KeyInfoType
{
public:
	char *KeyName;	/* optional element of type xsd:string */
	struct ds__KeyValueType *KeyValue;	/* optional element of type ds:KeyValueType */
	struct ds__RetrievalMethodType *RetrievalMethod;	/* optional element of type ds:RetrievalMethodType */
	struct ds__X509DataType *X509Data;	/* optional element of type ds:X509DataType */
	struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference;	/* optional element of type wsse:SecurityTokenReference */
	char *Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1408; } /* = unique id SOAP_TYPE_ds__KeyInfoType */
};
typedef struct ds__KeyInfoType ds__KeyInfoType;
#endif

#ifndef SOAP_TYPE_ds__SignedInfoType
#define SOAP_TYPE_ds__SignedInfoType (1406)
/* ds:SignedInfoType */
struct ds__SignedInfoType
{
public:
	struct ds__CanonicalizationMethodType *CanonicalizationMethod;	/* required element of type ds:CanonicalizationMethodType */
	struct ds__SignatureMethodType *SignatureMethod;	/* required element of type ds:SignatureMethodType */
	int __sizeReference;	/* sequence of elements <Reference> */
	struct ds__ReferenceType **Reference;	/* required element of type ds:ReferenceType */
	char *Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1406; } /* = unique id SOAP_TYPE_ds__SignedInfoType */
};
typedef struct ds__SignedInfoType ds__SignedInfoType;
#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType
#define SOAP_TYPE_ds__CanonicalizationMethodType (1411)
/* ds:CanonicalizationMethodType */
struct ds__CanonicalizationMethodType
{
public:
	char *Algorithm;	/* required attribute of type xsd:string */
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
public:
	int soap_type() const { return 1411; } /* = unique id SOAP_TYPE_ds__CanonicalizationMethodType */
};
typedef struct ds__CanonicalizationMethodType ds__CanonicalizationMethodType;
#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType
#define SOAP_TYPE_ds__SignatureMethodType (1412)
/* ds:SignatureMethodType */
struct ds__SignatureMethodType
{
public:
	int *HMACOutputLength;	/* optional element of type xsd:int */
	char *Algorithm;	/* required attribute of type xsd:string */
public:
	int soap_type() const { return 1412; } /* = unique id SOAP_TYPE_ds__SignatureMethodType */
};
typedef struct ds__SignatureMethodType ds__SignatureMethodType;
#endif

#ifndef SOAP_TYPE_ds__ReferenceType
#define SOAP_TYPE_ds__ReferenceType (1413)
/* ds:ReferenceType */
struct ds__ReferenceType
{
public:
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	struct ds__DigestMethodType *DigestMethod;	/* required element of type ds:DigestMethodType */
	char *DigestValue;	/* required element of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1413; } /* = unique id SOAP_TYPE_ds__ReferenceType */
};
typedef struct ds__ReferenceType ds__ReferenceType;
#endif

#ifndef SOAP_TYPE_ds__TransformsType
#define SOAP_TYPE_ds__TransformsType (1414)
/* ds:TransformsType */
struct ds__TransformsType
{
public:
	int __sizeTransform;	/* sequence of elements <Transform> */
	struct ds__TransformType *Transform;	/* required element of type ds:TransformType */
public:
	int soap_type() const { return 1414; } /* = unique id SOAP_TYPE_ds__TransformsType */
};
typedef struct ds__TransformsType ds__TransformsType;
#endif

#ifndef SOAP_TYPE_ds__DigestMethodType
#define SOAP_TYPE_ds__DigestMethodType (1419)
/* ds:DigestMethodType */
struct ds__DigestMethodType
{
public:
	char *Algorithm;	/* required attribute of type xsd:string */
public:
	int soap_type() const { return 1419; } /* = unique id SOAP_TYPE_ds__DigestMethodType */
};
typedef struct ds__DigestMethodType ds__DigestMethodType;
#endif

#ifndef SOAP_TYPE_ds__KeyValueType
#define SOAP_TYPE_ds__KeyValueType (1420)
/* ds:KeyValueType */
struct ds__KeyValueType
{
public:
	struct ds__DSAKeyValueType *DSAKeyValue;	/* optional element of type ds:DSAKeyValueType */
	struct ds__RSAKeyValueType *RSAKeyValue;	/* optional element of type ds:RSAKeyValueType */
public:
	int soap_type() const { return 1420; } /* = unique id SOAP_TYPE_ds__KeyValueType */
};
typedef struct ds__KeyValueType ds__KeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType
#define SOAP_TYPE_ds__RetrievalMethodType (1422)
/* ds:RetrievalMethodType */
struct ds__RetrievalMethodType
{
public:
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1422; } /* = unique id SOAP_TYPE_ds__RetrievalMethodType */
};
typedef struct ds__RetrievalMethodType ds__RetrievalMethodType;
#endif

#ifndef SOAP_TYPE_ds__X509DataType
#define SOAP_TYPE_ds__X509DataType (1403)
/* ds:X509DataType */
struct ds__X509DataType
{
public:
	struct ds__X509IssuerSerialType *X509IssuerSerial;	/* optional element of type ds:X509IssuerSerialType */
	char *X509SKI;	/* optional element of type xsd:string */
	char *X509SubjectName;	/* optional element of type xsd:string */
	char *X509Certificate;	/* optional element of type xsd:string */
	char *X509CRL;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 1403; } /* = unique id SOAP_TYPE_ds__X509DataType */
};
typedef struct ds__X509DataType ds__X509DataType;
#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType
#define SOAP_TYPE_ds__X509IssuerSerialType (1426)
/* ds:X509IssuerSerialType */
struct ds__X509IssuerSerialType
{
public:
	char *X509IssuerName;	/* required element of type xsd:string */
	char *X509SerialNumber;	/* required element of type xsd:string */
public:
	int soap_type() const { return 1426; } /* = unique id SOAP_TYPE_ds__X509IssuerSerialType */
};
typedef struct ds__X509IssuerSerialType ds__X509IssuerSerialType;
#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType
#define SOAP_TYPE_ds__DSAKeyValueType (1427)
/* ds:DSAKeyValueType */
struct ds__DSAKeyValueType
{
public:
	char *G;	/* optional element of type xsd:string */
	char *Y;	/* required element of type xsd:string */
	char *J;	/* optional element of type xsd:string */
	char *P;	/* required element of type xsd:string */
	char *Q;	/* required element of type xsd:string */
	char *Seed;	/* required element of type xsd:string */
	char *PgenCounter;	/* required element of type xsd:string */
public:
	int soap_type() const { return 1427; } /* = unique id SOAP_TYPE_ds__DSAKeyValueType */
};
typedef struct ds__DSAKeyValueType ds__DSAKeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType
#define SOAP_TYPE_ds__RSAKeyValueType (1428)
/* ds:RSAKeyValueType */
struct ds__RSAKeyValueType
{
public:
	char *Modulus;	/* required element of type xsd:string */
	char *Exponent;	/* required element of type xsd:string */
public:
	int soap_type() const { return 1428; } /* = unique id SOAP_TYPE_ds__RSAKeyValueType */
};
typedef struct ds__RSAKeyValueType ds__RSAKeyValueType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType
#define SOAP_TYPE_xenc__EncryptionPropertyType (1449)
/* xenc:EncryptionPropertyType */
struct xenc__EncryptionPropertyType
{
public:
	char *Target;	/* optional attribute of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1449; } /* = unique id SOAP_TYPE_xenc__EncryptionPropertyType */
};
typedef struct xenc__EncryptionPropertyType xenc__EncryptionPropertyType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedType
#define SOAP_TYPE_xenc__EncryptedType (1439)
/* xenc:EncryptedType */
struct xenc__EncryptedType
{
public:
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1439; } /* = unique id SOAP_TYPE_xenc__EncryptedType */
};
typedef struct xenc__EncryptedType xenc__EncryptedType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionMethodType
#define SOAP_TYPE_xenc__EncryptionMethodType (1440)
/* xenc:EncryptionMethodType */
struct xenc__EncryptionMethodType
{
public:
	int *KeySize;	/* optional element of type xsd:int */
	char *OAEPparams;	/* optional element of type xsd:string */
	char *Algorithm;	/* required attribute of type xsd:string */
	struct ds__DigestMethodType *ds__DigestMethod;	/* optional element of type ds:DigestMethodType */
	char *__mixed;
public:
	int soap_type() const { return 1440; } /* = unique id SOAP_TYPE_xenc__EncryptionMethodType */
};
typedef struct xenc__EncryptionMethodType xenc__EncryptionMethodType;
#endif

#ifndef SOAP_TYPE_xenc__CipherDataType
#define SOAP_TYPE_xenc__CipherDataType (1441)
/* xenc:CipherDataType */
struct xenc__CipherDataType
{
public:
	char *CipherValue;	/* optional element of type xsd:string */
	struct xenc__CipherReferenceType *CipherReference;	/* optional element of type xenc:CipherReferenceType */
public:
	int soap_type() const { return 1441; } /* = unique id SOAP_TYPE_xenc__CipherDataType */
};
typedef struct xenc__CipherDataType xenc__CipherDataType;
#endif

#ifndef SOAP_TYPE_xenc__CipherReferenceType
#define SOAP_TYPE_xenc__CipherReferenceType (1442)
/* xenc:CipherReferenceType */
struct xenc__CipherReferenceType
{
public:
	struct xenc__TransformsType *Transforms;	/* optional element of type xenc:TransformsType */
	char *URI;	/* required attribute of type xsd:string */
public:
	int soap_type() const { return 1442; } /* = unique id SOAP_TYPE_xenc__CipherReferenceType */
};
typedef struct xenc__CipherReferenceType xenc__CipherReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__TransformsType
#define SOAP_TYPE_xenc__TransformsType (1443)
/* xenc:TransformsType */
struct xenc__TransformsType
{
public:
	struct ds__TransformType ds__Transform;	/* required element of type ds:Transform */
public:
	int soap_type() const { return 1443; } /* = unique id SOAP_TYPE_xenc__TransformsType */
};
typedef struct xenc__TransformsType xenc__TransformsType;
#endif

#ifndef SOAP_TYPE_xenc__AgreementMethodType
#define SOAP_TYPE_xenc__AgreementMethodType (1446)
/* xenc:AgreementMethodType */
struct xenc__AgreementMethodType
{
public:
	char *KA_Nonce;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *OriginatorKeyInfo;	/* optional element of type ds:KeyInfoType */
	struct ds__KeyInfoType *RecipientKeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Algorithm;	/* required attribute of type xsd:string */
	char *__mixed;
public:
	int soap_type() const { return 1446; } /* = unique id SOAP_TYPE_xenc__AgreementMethodType */
};
typedef struct xenc__AgreementMethodType xenc__AgreementMethodType;
#endif

#ifndef SOAP_TYPE_xenc__ReferenceType
#define SOAP_TYPE_xenc__ReferenceType (1447)
/* xenc:ReferenceType */
struct xenc__ReferenceType
{
public:
	char *URI;	/* required attribute of type xsd:string */
public:
	int soap_type() const { return 1447; } /* = unique id SOAP_TYPE_xenc__ReferenceType */
};
typedef struct xenc__ReferenceType xenc__ReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType
#define SOAP_TYPE_xenc__EncryptionPropertiesType (1448)
/* xenc:EncryptionPropertiesType */
struct xenc__EncryptionPropertiesType
{
public:
	int __sizeEncryptionProperty;	/* sequence of elements <EncryptionProperty> */
	struct xenc__EncryptionPropertyType *EncryptionProperty;	/* required element of type xenc:EncryptionPropertyType */
	char *Id;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1448; } /* = unique id SOAP_TYPE_xenc__EncryptionPropertiesType */
};
typedef struct xenc__EncryptionPropertiesType xenc__EncryptionPropertiesType;
#endif

#ifndef SOAP_TYPE___xenc__union_ReferenceList
#define SOAP_TYPE___xenc__union_ReferenceList (1458)
/* Operation wrapper: */
struct __xenc__union_ReferenceList
{
public:
	struct xenc__ReferenceType *DataReference;	/* optional element of type xenc:ReferenceType */
	struct xenc__ReferenceType *KeyReference;	/* optional element of type xenc:ReferenceType */
public:
	int soap_type() const { return 1458; } /* = unique id SOAP_TYPE___xenc__union_ReferenceList */
};
#endif

#ifndef SOAP_TYPE__xenc__ReferenceList
#define SOAP_TYPE__xenc__ReferenceList (1450)
/* xenc:ReferenceList */
struct _xenc__ReferenceList
{
public:
	int __size_ReferenceList;	/* sequence of elements <-union-ReferenceList> */
	struct __xenc__union_ReferenceList *__union_ReferenceList;
public:
	int soap_type() const { return 1450; } /* = unique id SOAP_TYPE__xenc__ReferenceList */
};
typedef struct _xenc__ReferenceList _xenc__ReferenceList;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedDataType
#define SOAP_TYPE_xenc__EncryptedDataType (1444)
/* xenc:EncryptedDataType */
struct xenc__EncryptedDataType
{
public:
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1444; } /* = unique id SOAP_TYPE_xenc__EncryptedDataType */
};
typedef struct xenc__EncryptedDataType xenc__EncryptedDataType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedKeyType
#define SOAP_TYPE_xenc__EncryptedKeyType (1445)
/* xenc:EncryptedKeyType */
struct xenc__EncryptedKeyType
{
public:
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
	struct _xenc__ReferenceList *ReferenceList;	/* optional element of type xenc:ReferenceList */
	char *CarriedKeyName;	/* optional element of type xsd:string */
	char *Recipient;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1445; } /* = unique id SOAP_TYPE_xenc__EncryptedKeyType */
};
typedef struct xenc__EncryptedKeyType xenc__EncryptedKeyType;
#endif

#ifndef SOAP_TYPE_wsc__SecurityContextTokenType
#define SOAP_TYPE_wsc__SecurityContextTokenType (1464)
/* wsc:SecurityContextTokenType */
struct wsc__SecurityContextTokenType
{
public:
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Identifier;	/* optional element of type xsd:string */
	char *Instance;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 1464; } /* = unique id SOAP_TYPE_wsc__SecurityContextTokenType */
};
#endif

#ifndef SOAP_TYPE__wsc__union_DerivedKeyTokenType
#define SOAP_TYPE__wsc__union_DerivedKeyTokenType (1469)
/* xsd:choice */
union _wsc__union_DerivedKeyTokenType
{
#define SOAP_UNION__wsc__union_DerivedKeyTokenType_Generation	(1)
	ULONG64 Generation;
#define SOAP_UNION__wsc__union_DerivedKeyTokenType_Offset	(2)
	ULONG64 Offset;
};
#endif

#ifndef SOAP_TYPE___wsc__DerivedKeyTokenType_sequence
#define SOAP_TYPE___wsc__DerivedKeyTokenType_sequence (1468)
/* Operation wrapper: */
struct __wsc__DerivedKeyTokenType_sequence
{
public:
	int __union_DerivedKeyTokenType;	/* union discriminant (of union defined below) */
	union _wsc__union_DerivedKeyTokenType union_DerivedKeyTokenType;	/* required element of type xsd:choice */
	ULONG64 *Length;	/* optional element of type xsd:unsignedLong */
public:
	int soap_type() const { return 1468; } /* = unique id SOAP_TYPE___wsc__DerivedKeyTokenType_sequence */
};
#endif

#ifndef SOAP_TYPE_wsc__DerivedKeyTokenType
#define SOAP_TYPE_wsc__DerivedKeyTokenType (1465)
/* wsc:DerivedKeyTokenType */
struct wsc__DerivedKeyTokenType
{
public:
	struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference;	/* optional element of type wsse:SecurityTokenReference */
	struct wsc__PropertiesType *Properties;	/* optional element of type wsc:PropertiesType */
	int __size_DerivedKeyTokenType_sequence;	/* sequence of elements <-DerivedKeyTokenType-sequence> */
	struct __wsc__DerivedKeyTokenType_sequence *__DerivedKeyTokenType_sequence;
	char *Label;	/* optional element of type xsd:string */
	char *Nonce;	/* optional element of type xsd:string */
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Algorithm;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1465; } /* = unique id SOAP_TYPE_wsc__DerivedKeyTokenType */
};
#endif

#ifndef SOAP_TYPE_wsc__PropertiesType
#define SOAP_TYPE_wsc__PropertiesType (1466)
/* wsc:PropertiesType */
struct wsc__PropertiesType
{
public:
	int soap_type() const { return 1466; } /* = unique id SOAP_TYPE_wsc__PropertiesType */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__wsse__Security
#define SOAP_TYPE__wsse__Security (1472)
/* wsse:Security */
struct _wsse__Security
{
public:
	struct _wsu__Timestamp *wsu__Timestamp;	/* optional element of type wsu:Timestamp */
	struct _wsse__UsernameToken *UsernameToken;	/* optional element of type wsse:UsernameToken */
	struct _wsse__BinarySecurityToken *BinarySecurityToken;	/* optional element of type wsse:BinarySecurityToken */
	struct xenc__EncryptedKeyType *xenc__EncryptedKey;	/* optional element of type xenc:EncryptedKeyType */
	struct _xenc__ReferenceList *xenc__ReferenceList;	/* optional element of type xenc:ReferenceList */
	struct wsc__SecurityContextTokenType *wsc__SecurityContextToken;	/* optional element of type wsc:SecurityContextTokenType */
	struct ds__SignatureType *ds__Signature;	/* optional element of type ds:SignatureType */
	char *SOAP_ENV__actor;	/* optional attribute of type xsd:string */
	char *SOAP_ENV__role;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1472; } /* = unique id SOAP_TYPE__wsse__Security */
};
typedef struct _wsse__Security _wsse__Security;
#endif

#ifndef SOAP_TYPE__wsse__Password
#define SOAP_TYPE__wsse__Password (1393)
/* Primitive wsse:Password schema type: */
struct _wsse__Password
{
public:
	char *__item;
	char *Type;	/* optional attribute of type xsd:string */
public:
	int soap_type() const { return 1393; } /* = unique id SOAP_TYPE__wsse__Password */
};
typedef struct _wsse__Password _wsse__Password;
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (1479)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	struct _wsse__Security *wsse__Security;	/* mustUnderstand */
public:
	int soap_type() const { return 1479; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (1481)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 1481; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (1483)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 1483; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (1484)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 1484; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (16)
typedef char xsd__byte;
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (17)
typedef unsigned char xsd__unsignedByte;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (18)
typedef std::string xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (20)
typedef std::string xsd__IDREF;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (23)
typedef std::string xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (31)
typedef std::string xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (35)
typedef std::string xsd__duration;
#endif

#ifndef SOAP_TYPE__xsd__schema
#define SOAP_TYPE__xsd__schema (51)
typedef char *_xsd__schema;
#endif

#ifndef SOAP_TYPE_ns5__char
#define SOAP_TYPE_ns5__char (494)
typedef int ns5__char;
#endif

#ifndef SOAP_TYPE_ns5__duration
#define SOAP_TYPE_ns5__duration (496)
typedef std::string ns5__duration;
#endif

#ifndef SOAP_TYPE_ns5__guid
#define SOAP_TYPE_ns5__guid (498)
typedef std::string ns5__guid;
#endif

#ifndef SOAP_TYPE__ds__Signature
#define SOAP_TYPE__ds__Signature (1410)
typedef struct ds__SignatureType _ds__Signature;
#endif

#ifndef SOAP_TYPE__ds__Transform
#define SOAP_TYPE__ds__Transform (1418)
typedef struct ds__TransformType _ds__Transform;
#endif

#ifndef SOAP_TYPE__ds__KeyInfo
#define SOAP_TYPE__ds__KeyInfo (1425)
typedef struct ds__KeyInfoType _ds__KeyInfo;
#endif

#ifndef SOAP_TYPE_wsc__FaultCodeOpenEnumType
#define SOAP_TYPE_wsc__FaultCodeOpenEnumType (1462)
typedef char *wsc__FaultCodeOpenEnumType;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
